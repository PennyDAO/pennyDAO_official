{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "applicationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ApplicationReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "vote",
          "type": "bool"
        }
      ],
      "name": "BallotCasted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUpForVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_application_id",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "yayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nayAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Applications",
          "name": "applicationContract",
          "type": "address"
        }
      ],
      "name": "setApplications",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "yayOrNay",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStartTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/metatx/ERC2771Context.sol",
    "1": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/ERC20.sol",
    "10": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "11": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "12": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
    "13": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "14": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Counters.sol",
    "15": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Strings.sol",
    "16": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/ERC165.sol",
    "17": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/IERC165.sol",
    "18": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/structs/EnumerableSet.sol",
    "19": "contracts/Applications.sol",
    "2": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
    "20": "contracts/Penny.sol",
    "3": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
    "6": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
    "7": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721Receiver.sol",
    "8": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "9": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Penny.sol",
    "exportedSymbols": {
      "Applications": [
        339
      ],
      "ERC20": [
        2618
      ],
      "ERC721Holder": [
        2947
      ],
      "EnumerableSet": [
        3460
      ],
      "IERC20": [
        2696
      ],
      "Penny": [
        783
      ],
      "SafeERC20": [
        2920
      ]
    },
    "id": 784,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 341,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:20"
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 343,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 784,
        "sourceUnit": 2697,
        "src": "61:70:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 342,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:6:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 345,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 784,
        "sourceUnit": 2619,
        "src": "132:68:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 344,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "140:5:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 347,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 784,
        "sourceUnit": 2921,
        "src": "201:88:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 346,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "214:9:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 349,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 784,
        "sourceUnit": 2948,
        "src": "290:95:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 348,
              "name": "ERC721Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "303:12:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Applications.sol",
        "file": "./Applications.sol",
        "id": 351,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 784,
        "sourceUnit": 340,
        "src": "386:48:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 350,
              "name": "Applications",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "394:12:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 353,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 784,
        "sourceUnit": 3461,
        "src": "435:92:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 352,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "448:13:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 354,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2618,
              "src": "585:5:20"
            },
            "id": 355,
            "nodeType": "InheritanceSpecifier",
            "src": "585:5:20"
          },
          {
            "baseName": {
              "id": 356,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2947,
              "src": "592:12:20"
            },
            "id": 357,
            "nodeType": "InheritanceSpecifier",
            "src": "592:12:20"
          }
        ],
        "contractDependencies": [
          2038,
          2618,
          2696,
          2947,
          3594,
          4200
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 783,
        "linearizedBaseContracts": [
          783,
          2947,
          3594,
          2618,
          4200,
          2696,
          2038
        ],
        "name": "Penny",
        "nameLocation": "576:5:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 361,
            "libraryName": {
              "id": 358,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2920,
              "src": "617:9:20"
            },
            "nodeType": "UsingForDirective",
            "src": "611:27:20",
            "typeName": {
              "id": 360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 359,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2696,
                "src": "631:6:20"
              },
              "referencedDeclaration": 2696,
              "src": "631:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2696",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 365,
            "libraryName": {
              "id": 362,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3460,
              "src": "649:13:20"
            },
            "nodeType": "UsingForDirective",
            "src": "643:46:20",
            "typeName": {
              "id": 364,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 363,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3360,
                "src": "667:21:20"
              },
              "referencedDeclaration": 3360,
              "src": "667:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$3360_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "anonymous": false,
            "id": 371,
            "name": "ApplicationReceived",
            "nameLocation": "701:19:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "applicationId",
                  "nameLocation": "729:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "721:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 369,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "752:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "744:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:42:20"
            },
            "src": "695:68:20"
          },
          {
            "anonymous": false,
            "id": 377,
            "name": "BallotCasted",
            "nameLocation": "774:12:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "803:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "787:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "815:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "810:9:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:34:20"
            },
            "src": "768:53:20"
          },
          {
            "canonicalName": "Penny.Application",
            "id": 386,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "awardToken",
                "nameLocation": "1205:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1197:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 378,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1197:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "1233:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1225:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 380,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1225:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "awardAmount",
                "nameLocation": "1260:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1252:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1252:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 385,
                "mutability": "mutable",
                "name": "ipfsMetadata",
                "nameLocation": "1288:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1281:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 384,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1281:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Application",
            "nameLocation": "1175:11:20",
            "nodeType": "StructDefinition",
            "scope": 783,
            "src": "1168:139:20",
            "visibility": "public"
          },
          {
            "canonicalName": "Penny.Vote",
            "id": 395,
            "members": [
              {
                "constant": false,
                "id": 388,
                "mutability": "mutable",
                "name": "yayAmount",
                "nameLocation": "1343:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 395,
                "src": "1335:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 387,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 390,
                "mutability": "mutable",
                "name": "nayAmount",
                "nameLocation": "1370:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 395,
                "src": "1362:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 389,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1362:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 394,
                "mutability": "mutable",
                "name": "ballots",
                "nameLocation": "1414:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 395,
                "src": "1389:32:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 393,
                  "keyType": {
                    "id": 391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1389:24:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vote",
            "nameLocation": "1320:4:20",
            "nodeType": "StructDefinition",
            "scope": 783,
            "src": "1313:115:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 398,
            "mutability": "mutable",
            "name": "DAI",
            "nameLocation": "1449:3:20",
            "nodeType": "VariableDeclaration",
            "scope": 783,
            "src": "1434:18:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2696",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 397,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 396,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2696,
                "src": "1434:6:20"
              },
              "referencedDeclaration": 2696,
              "src": "1434:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2696",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 402,
            "mutability": "mutable",
            "name": "_unlockTime",
            "nameLocation": "1494:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 783,
            "src": "1458:47:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 401,
              "keyType": {
                "id": 399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1466:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1458:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 400,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1477:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 405,
            "mutability": "mutable",
            "name": "_applicationContract",
            "nameLocation": "1532:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 783,
            "src": "1511:41:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Applications_$339",
              "typeString": "contract Applications"
            },
            "typeName": {
              "id": 404,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 403,
                "name": "Applications",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 339,
                "src": "1511:12:20"
              },
              "referencedDeclaration": 339,
              "src": "1511:12:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Applications_$339",
                "typeString": "contract Applications"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 408,
            "mutability": "mutable",
            "name": "_applicationsQueue",
            "nameLocation": "1588:18:20",
            "nodeType": "VariableDeclaration",
            "scope": 783,
            "src": "1558:48:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_UintSet_$3360_storage",
              "typeString": "struct EnumerableSet.UintSet"
            },
            "typeName": {
              "id": 407,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 406,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3360,
                "src": "1558:21:20"
              },
              "referencedDeclaration": 3360,
              "src": "1558:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$3360_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 413,
            "mutability": "mutable",
            "name": "votes",
            "nameLocation": "1645:5:20",
            "nodeType": "VariableDeclaration",
            "scope": 783,
            "src": "1612:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
              "typeString": "mapping(uint256 => struct Penny.Vote)"
            },
            "typeName": {
              "id": 412,
              "keyType": {
                "id": 409,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1620:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1612:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                "typeString": "mapping(uint256 => struct Penny.Vote)"
              },
              "valueType": {
                "id": 411,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 410,
                  "name": "Vote",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 395,
                  "src": "1631:4:20"
                },
                "referencedDeclaration": 395,
                "src": "1631:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vote_$395_storage_ptr",
                  "typeString": "struct Penny.Vote"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "18732d79",
            "id": 415,
            "mutability": "mutable",
            "name": "voteStartTimestamp",
            "nameLocation": "1671:18:20",
            "nodeType": "VariableDeclaration",
            "scope": 783,
            "src": "1656:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 414,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1656:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 417,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1710:5:20",
            "nodeType": "VariableDeclaration",
            "scope": 783,
            "src": "1695:20:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 416,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1695:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "1777:59:20",
              "statements": [
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 427,
                      "name": "DAI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "1787:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2696",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 428,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "1793:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2696",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1787:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2696",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:12:20"
                },
                {
                  "expression": {
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 431,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "1809:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 432,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2026,
                        "src": "1817:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1817:12:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1809:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:20:20"
                }
              ]
            },
            "id": 437,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50656e6e7920546f6b656e",
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1755:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4fddf777271baa933466017cd881c49fd228a6877d59410edf1834aacc9d2e20",
                      "typeString": "literal_string \"Penny Token\""
                    },
                    "value": "Penny Token"
                  },
                  {
                    "hexValue": "504e59",
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1770:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_68c75195b4f40679bc327bca88a8c5964ea1b9adbac8133dc2a647eb12ac0a9c",
                      "typeString": "literal_string \"PNY\""
                    },
                    "value": "PNY"
                  }
                ],
                "id": 425,
                "modifierName": {
                  "id": 422,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2618,
                  "src": "1749:5:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1749:27:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1741:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1734:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2696",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 419,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 418,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2696,
                      "src": "1734:6:20"
                    },
                    "referencedDeclaration": 2696,
                    "src": "1734:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2696",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:15:20"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:20"
            },
            "scope": 783,
            "src": "1722:114:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "2099:203:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 448,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "2130:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 452,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2152:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Penny_$783",
                              "typeString": "contract Penny"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Penny_$783",
                              "typeString": "contract Penny"
                            }
                          ],
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2144:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2144:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2144:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 454,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "2159:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 445,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2109:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2696",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2753,
                      "src": "2109:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2696_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2696_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:58:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 458,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "2183:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2183:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 460,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 440,
                          "src": "2197:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2207:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2197:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 457,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2499,
                      "src": "2177:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:34:20"
                },
                {
                  "expression": {
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 465,
                        "name": "_unlockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "2221:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 468,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 466,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "2233:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2233:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2221:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 469,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2249:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2249:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3135",
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2267:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2272:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2267:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        }
                      },
                      "src": "2249:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2221:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:53:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2291:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 444,
                  "id": 478,
                  "nodeType": "Return",
                  "src": "2284:11:20"
                }
              ]
            },
            "documentation": {
              "id": 438,
              "nodeType": "StructuredDocumentation",
              "src": "1842:194:20",
              "text": "@notice Deposit DAI in exchange for PNY\n @dev 100 PNY = 1 DAI, DAI is locked for a period of 1 year\n @param _amount The amount of DAI to deposit\n @return true on success"
            },
            "functionSelector": "b6b55f25",
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2050:7:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2066:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "2058:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:17:20"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "2093:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2092:6:20"
            },
            "scope": 783,
            "src": "2041:261:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "2549:218:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 487,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2567:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2567:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 489,
                            "name": "_unlockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "2586:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 492,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 490,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "2598:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2598:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2586:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2567:44:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2559:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:53:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:53:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 499,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "2635:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2635:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 503,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "2665:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2665:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 501,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2618,
                            "src": "2649:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$2618_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2210,
                          "src": "2649:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2649:29:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 496,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2622:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2696",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2645,
                      "src": "2622:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 509,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "2695:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2695:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 513,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "2725:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2725:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 511,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2618,
                            "src": "2709:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$2618_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2210,
                          "src": "2709:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2709:29:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 508,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "2689:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:50:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2756:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 485,
                  "id": 519,
                  "nodeType": "Return",
                  "src": "2749:11:20"
                }
              ]
            },
            "documentation": {
              "id": 481,
              "nodeType": "StructuredDocumentation",
              "src": "2308:192:20",
              "text": "@notice Withdraw deposited DAI after deposit lock has been removed\n @dev Must ensure enough DAI is held by this contract at the time of the withdrawl\n @return true on success"
            },
            "functionSelector": "3ccfd60b",
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2514:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:2:20"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "2543:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2543:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2542:6:20"
            },
            "scope": 783,
            "src": "2505:262:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2946
            ],
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "3009:450:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 538,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2026,
                            "src": "3027:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3027:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 542,
                              "name": "_applicationContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "3051:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Applications_$339",
                                "typeString": "contract Applications"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Applications_$339",
                                "typeString": "contract Applications"
                              }
                            ],
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3043:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 540,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3043:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3043:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3027:45:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3019:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3019:54:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "3019:54:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 547,
                          "name": "_applicationsQueue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "3120:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UintSet_$3360_storage",
                            "typeString": "struct EnumerableSet.UintSet storage ref"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3438,
                        "src": "3120:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3360_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3360_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3120:27:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3151:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3120:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 570,
                    "nodeType": "Block",
                    "src": "3267:57:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 567,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "3304:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 564,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3281:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3360_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 566,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "3281:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3360_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3360_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3281:32:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 569,
                        "nodeType": "ExpressionStatement",
                        "src": "3281:32:20"
                      }
                    ]
                  },
                  "id": 571,
                  "nodeType": "IfStatement",
                  "src": "3116:208:20",
                  "trueBody": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "3154:107:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 552,
                            "name": "voteStartTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "3168:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 553,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3189:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3189:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3168:36:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 556,
                        "nodeType": "ExpressionStatement",
                        "src": "3168:36:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 560,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "3241:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 557,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3218:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3360_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "3218:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3360_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3360_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3218:32:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "3218:32:20"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "3359:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 574,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3369:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3369:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 572,
                      "name": "ApplicationReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3339:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:46:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "EmitStatement",
                  "src": "3334:51:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 581,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "3418:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 582,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "3429:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 583,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "3436:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 584,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "3446:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 578,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3395:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Penny_$783_$",
                          "typeString": "type(contract super Penny)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2946,
                      "src": "3395:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) returns (bytes4)"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "3395:57:20"
                }
              ]
            },
            "documentation": {
              "id": 522,
              "nodeType": "StructuredDocumentation",
              "src": "2773:48:20",
              "text": "@notice Called when recieving an application"
            },
            "functionSelector": "150b7a02",
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "2835:16:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 533,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 532,
                  "name": "ERC721Holder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2947,
                  "src": "2978:12:20"
                }
              ],
              "src": "2969:22:20"
            },
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "2869:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "2861:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2861:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2896:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "2888:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2888:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2919:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "2911:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2911:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2950:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "2937:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2937:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2851:110:20"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "3001:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3001:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3000:8:20"
            },
            "scope": 783,
            "src": "2826:633:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "3595:133:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 595,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3613:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3360_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3438,
                            "src": "3613:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3360_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3360_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3613:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3643:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3613:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3605:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3605:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3719:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 602,
                        "name": "_applicationsQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "3697:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3360_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3459,
                      "src": "3697:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3360_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3360_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3697:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 593,
                  "id": 606,
                  "nodeType": "Return",
                  "src": "3690:31:20"
                }
              ]
            },
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "3465:71:20",
              "text": "@notice Getter for retrieving the currently up for vote application"
            },
            "functionSelector": "e5fde991",
            "id": 608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUpForVote",
            "nameLocation": "3550:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:2:20"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "3586:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3585:9:20"
            },
            "scope": 783,
            "src": "3541:187:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "3787:821:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 616,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3805:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3360_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3438,
                            "src": "3805:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3360_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3360_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3805:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3835:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3805:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3797:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "3797:40:20"
                },
                {
                  "assignments": [
                    624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 624,
                      "mutability": "mutable",
                      "name": "currentApplication",
                      "nameLocation": "3898:18:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "3890:26:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3890:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 625,
                      "name": "getUpForVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "3919:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3919:14:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3890:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 631,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "3967:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3967:12:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 629,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2618,
                              "src": "3951:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$2618_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2210,
                            "src": "3951:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3951:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3984:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3951:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3943:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3943:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "3943:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4032:48:20",
                        "subExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 639,
                                "name": "votes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "4033:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                                  "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                                }
                              },
                              "id": 641,
                              "indexExpression": {
                                "id": 640,
                                "name": "currentApplication",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "4039:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4033:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$395_storage",
                                "typeString": "struct Penny.Vote storage ref"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ballots",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 394,
                            "src": "4033:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 645,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 643,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "4067:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4067:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4033:47:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4024:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4024:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "4024:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 650,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4121:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4121:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 652,
                            "name": "voteStartTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "4139:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4160:7:20",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "4139:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4121:46:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4113:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "4113:55:20"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 658,
                            "name": "votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "4200:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                              "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                            }
                          },
                          "id": 660,
                          "indexExpression": {
                            "id": 659,
                            "name": "currentApplication",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "4206:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4200:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$395_storage",
                            "typeString": "struct Penny.Vote storage ref"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ballots",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 394,
                        "src": "4200:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 662,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "4234:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4234:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4200:47:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4250:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4200:54:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "4200:54:20"
                },
                {
                  "condition": {
                    "id": 668,
                    "name": "yayOrNay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 610,
                    "src": "4268:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 692,
                    "nodeType": "Block",
                    "src": "4407:123:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 681,
                                "name": "votes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "4421:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                                  "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                                }
                              },
                              "id": 683,
                              "indexExpression": {
                                "id": 682,
                                "name": "currentApplication",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "4427:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4421:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$395_storage",
                                "typeString": "struct Penny.Vote storage ref"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nayAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 390,
                            "src": "4421:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 687,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2026,
                                  "src": "4493:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4493:12:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 685,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2618,
                                "src": "4460:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2618_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2210,
                              "src": "4460:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4460:59:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4421:98:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "4421:98:20"
                      }
                    ]
                  },
                  "id": 693,
                  "nodeType": "IfStatement",
                  "src": "4264:266:20",
                  "trueBody": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "4278:123:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 669,
                                "name": "votes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "4292:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                                  "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                                }
                              },
                              "id": 671,
                              "indexExpression": {
                                "id": 670,
                                "name": "currentApplication",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "4298:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4292:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$395_storage",
                                "typeString": "struct Penny.Vote storage ref"
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "yayAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 388,
                            "src": "4292:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 675,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2026,
                                  "src": "4364:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4364:12:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 673,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2618,
                                "src": "4331:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2618_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2210,
                              "src": "4331:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4331:59:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4292:98:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "4292:98:20"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 695,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "4557:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4557:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 697,
                        "name": "yayOrNay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "4571:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 694,
                      "name": "BallotCasted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "4544:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4544:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 699,
                  "nodeType": "EmitStatement",
                  "src": "4539:41:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4597:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 614,
                  "id": 701,
                  "nodeType": "Return",
                  "src": "4590:11:20"
                }
              ]
            },
            "functionSelector": "4b9f5c98",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "3743:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "yayOrNay",
                  "nameLocation": "3753:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3748:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3748:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3747:15:20"
            },
            "returnParameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3781:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3780:6:20"
            },
            "scope": 783,
            "src": "3734:874:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "4682:99:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 710,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2026,
                            "src": "4700:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4700:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 712,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "4716:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4700:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4692:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:30:20"
                },
                {
                  "expression": {
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 716,
                      "name": "_applicationContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "4732:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Applications_$339",
                        "typeString": "contract Applications"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 717,
                      "name": "applicationContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "4755:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Applications_$339",
                        "typeString": "contract Applications"
                      }
                    },
                    "src": "4732:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Applications_$339",
                      "typeString": "contract Applications"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:42:20"
                }
              ]
            },
            "functionSelector": "f7402b04",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApplications",
            "nameLocation": "4623:15:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "applicationContract",
                  "nameLocation": "4652:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "4639:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Applications_$339",
                    "typeString": "contract Applications"
                  },
                  "typeName": {
                    "id": 705,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 704,
                      "name": "Applications",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "4639:12:20"
                    },
                    "referencedDeclaration": 339,
                    "src": "4639:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Applications_$339",
                      "typeString": "contract Applications"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4638:34:20"
            },
            "returnParameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4682:0:20"
            },
            "scope": 783,
            "src": "4614:167:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "4919:115:20",
              "statements": [
                {
                  "expression": {
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 730,
                      "name": "yayAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "4929:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 731,
                          "name": "votes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4941:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                            "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                          }
                        },
                        "id": 733,
                        "indexExpression": {
                          "id": 732,
                          "name": "_application_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "4947:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4941:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vote_$395_storage",
                          "typeString": "struct Penny.Vote storage ref"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "yayAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 388,
                      "src": "4941:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4929:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "4929:44:20"
                },
                {
                  "expression": {
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 737,
                      "name": "nayAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "4983:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 738,
                          "name": "votes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4995:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                            "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                          }
                        },
                        "id": 740,
                        "indexExpression": {
                          "id": 739,
                          "name": "_application_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "5001:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4995:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vote_$395_storage",
                          "typeString": "struct Penny.Vote storage ref"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nayAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 390,
                      "src": "4995:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4983:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "4983:44:20"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 745,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4796:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "_application_id",
                  "nameLocation": "4813:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "4805:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4804:25:20"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "yayAmount",
                  "nameLocation": "4885:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "4877:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4877:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "nayAmount",
                  "nameLocation": "4904:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "4896:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4876:38:20"
            },
            "scope": 783,
            "src": "4787:247:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2617
            ],
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "5167:154:20",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 756,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "5181:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5197:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5189:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5189:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5189:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5181:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 762,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "5203:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5217:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5209:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 763,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5209:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5209:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5203:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5181:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 772,
                  "nodeType": "IfStatement",
                  "src": "5177:52:20",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 769,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "5221:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5221:8:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 771,
                    "nodeType": "ExpressionStatement",
                    "src": "5221:8:20"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 776,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "5297:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 777,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "5303:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 778,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "5307:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 773,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5270:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Penny_$783_$",
                          "typeString": "type(contract super Penny)"
                        }
                      },
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2617,
                      "src": "5270:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:44:20"
                }
              ]
            },
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "5049:20:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 754,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 753,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2618,
                  "src": "5160:5:20"
                }
              ],
              "src": "5151:15:20"
            },
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5087:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "5079:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5079:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5109:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "5101:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5101:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5129:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "5121:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5121:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5069:72:20"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5167:0:20"
            },
            "scope": 783,
            "src": "5040:281:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 784,
        "src": "567:4756:20"
      }
    ],
    "src": "36:5288:20"
  },
  "bytecode": "",
  "bytecodeSha1": "fb3bd87ba5c820c17f272d372680130a43065991",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "Penny",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "ERC20._approve": {
          "103": [
            9680,
            9699,
            true
          ],
          "104": [
            9758,
            9779,
            true
          ]
        },
        "ERC20._burn": {
          "108": [
            8756,
            8777,
            true
          ],
          "109": [
            8947,
            8971,
            true
          ]
        },
        "ERC20._mint": {
          "110": [
            8106,
            8127,
            true
          ]
        },
        "ERC20._transfer": {
          "105": [
            7265,
            7285,
            true
          ],
          "106": [
            7345,
            7368,
            true
          ],
          "107": [
            7536,
            7559,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "102": [
            6503,
            6538,
            true
          ]
        },
        "ERC20.transferFrom": {
          "101": [
            5054,
            5080,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "Address._verifyCallResult": {
          "99": [
            7226,
            7233,
            false
          ],
          "100": [
            7367,
            7388,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "98": [
            4759,
            4789,
            true
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "EnumerableSet._at": {
          "111": [
            4547,
            4573,
            true
          ]
        }
      },
      "19": {},
      "2": {},
      "20": {
        "Penny._beforeTokenTransfer": {
          "96": [
            5181,
            5199,
            false
          ],
          "97": [
            5203,
            5219,
            false
          ]
        },
        "Penny.getUpForVote": {
          "94": [
            3613,
            3644,
            true
          ]
        },
        "Penny.onERC721Received": {
          "88": [
            3027,
            3072,
            true
          ]
        },
        "Penny.setApplications": {
          "95": [
            4700,
            4721,
            true
          ]
        },
        "Penny.vote": {
          "90": [
            3805,
            3836,
            true
          ],
          "91": [
            3951,
            3985,
            true
          ],
          "92": [
            4032,
            4080,
            true
          ],
          "93": [
            4121,
            4167,
            true
          ]
        },
        "Penny.withdraw": {
          "89": [
            2567,
            2611,
            true
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "112": [
            3550,
            3571,
            false
          ],
          "113": [
            3679,
            3709,
            true
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {
        "ERC20._approve": {
          "46": [
            9672,
            9740
          ],
          "47": [
            9750,
            9818
          ],
          "48": [
            9829,
            9865
          ],
          "49": [
            9875,
            9912
          ]
        },
        "ERC20._burn": {
          "60": [
            8748,
            8815
          ],
          "61": [
            8826,
            8875
          ],
          "62": [
            8939,
            9010
          ],
          "63": [
            9020,
            9064
          ],
          "64": [
            9074,
            9096
          ],
          "65": [
            9107,
            9149
          ]
        },
        "ERC20._mint": {
          "67": [
            8098,
            8163
          ],
          "68": [
            8174,
            8223
          ],
          "69": [
            8234,
            8256
          ],
          "70": [
            8266,
            8294
          ],
          "71": [
            8304,
            8346
          ]
        },
        "ERC20._transfer": {
          "53": [
            7257,
            7327
          ],
          "54": [
            7337,
            7408
          ],
          "55": [
            7419,
            7466
          ],
          "56": [
            7528,
            7602
          ],
          "57": [
            7612,
            7654
          ],
          "58": [
            7664,
            7694
          ],
          "59": [
            7705,
            7745
          ]
        },
        "ERC20.allowance": {
          "3": [
            3995,
            4029
          ]
        },
        "ERC20.approve": {
          "7": [
            4273,
            4312
          ],
          "9": [
            4322,
            4333
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3422,
            3447
          ]
        },
        "ERC20.decimals": {
          "1": [
            3089,
            3098
          ]
        },
        "ERC20.decreaseAllowance": {
          "34": [
            6495,
            6580
          ],
          "35": [
            6590,
            6657
          ],
          "36": [
            6668,
            6679
          ]
        },
        "ERC20.increaseAllowance": {
          "19": [
            5720,
            5800
          ]
        },
        "ERC20.name": {
          "6": [
            2156,
            2168
          ]
        },
        "ERC20.symbol": {
          "33": [
            2369,
            2383
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3245,
            3264
          ]
        },
        "ERC20.transfer": {
          "37": [
            3759,
            3801
          ]
        },
        "ERC20.transferFrom": {
          "15": [
            4929,
            4965
          ],
          "16": [
            5046,
            5125
          ],
          "17": [
            5135,
            5192
          ],
          "18": [
            5203,
            5214
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "Address._verifyCallResult": {
          "86": [
            7249,
            7266
          ],
          "87": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "82": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "83": [
            4751,
            4832
          ],
          "84": [
            4842,
            4902
          ],
          "85": [
            5057,
            5116
          ]
        }
      },
      "13": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "EnumerableSet._add": {
          "74": [
            1753,
            1776
          ],
          "75": [
            1911,
            1951
          ],
          "76": [
            1965,
            1976
          ],
          "77": [
            2007,
            2019
          ]
        },
        "EnumerableSet._at": {
          "80": [
            4539,
            4612
          ],
          "81": [
            4622,
            4647
          ]
        },
        "EnumerableSet._contains": {
          "73": [
            3895,
            3926
          ]
        },
        "EnumerableSet._length": {
          "51": [
            4089,
            4114
          ]
        },
        "EnumerableSet.add": {
          "52": [
            8152,
            8191
          ]
        },
        "EnumerableSet.at": {
          "72": [
            9341,
            9379
          ]
        },
        "EnumerableSet.length": {
          "50": [
            8886,
            8912
          ]
        }
      },
      "19": {},
      "2": {},
      "20": {
        "Penny._beforeTokenTransfer": {
          "78": [
            5221,
            5229
          ]
        },
        "Penny.deposit": {
          "38": [
            2109,
            2167
          ],
          "39": [
            2177,
            2211
          ],
          "40": [
            2221,
            2274
          ],
          "41": [
            2284,
            2295
          ]
        },
        "Penny.getUpForVote": {
          "42": [
            3605,
            3645
          ],
          "43": [
            3690,
            3721
          ]
        },
        "Penny.getVotes": {
          "4": [
            4929,
            4973
          ],
          "5": [
            4983,
            5027
          ]
        },
        "Penny.onERC721Received": {
          "10": [
            3019,
            3073
          ],
          "11": [
            3168,
            3204
          ],
          "12": [
            3218,
            3250
          ],
          "13": [
            3281,
            3313
          ],
          "14": [
            3334,
            3385
          ]
        },
        "Penny.setApplications": {
          "44": [
            4692,
            4722
          ],
          "45": [
            4732,
            4774
          ]
        },
        "Penny.vote": {
          "24": [
            3797,
            3837
          ],
          "25": [
            3943,
            3986
          ],
          "26": [
            4024,
            4081
          ],
          "27": [
            4113,
            4168
          ],
          "28": [
            4200,
            4254
          ],
          "29": [
            4292,
            4390
          ],
          "30": [
            4421,
            4519
          ],
          "31": [
            4539,
            4580
          ],
          "32": [
            4590,
            4601
          ]
        },
        "Penny.withdraw": {
          "20": [
            2559,
            2612
          ],
          "21": [
            2622,
            2679
          ],
          "22": [
            2689,
            2739
          ],
          "23": [
            2749,
            2760
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "79": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "66": [
            915,
            1011
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Address",
    "Applications",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC2771Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC721Holder",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/EnumerableSet",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "567:4756:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;:::i;:::-;;:::i;:::-;;;5100:14:21;;5093:22;5075:41;;5063:2;5048:18;4174:166:1;5030:92:21;2826:633:20;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;5289:33:21;;;5271:52;;5259:2;5244:18;2826:633:20;5226:103:21;3165:106:1;3252:12;;3165:106;;;11452:25:21;;;11440:2;11425:18;3165:106:1;11407:76:21;1656:33:20;;;;;;4807:414:1;;;;;;:::i;:::-;;:::i;3014:91::-;;;3096:2;11883:36:21;;11871:2;11856:18;3014:91:1;11838:87:21;5616:212:1;;;;;;:::i;:::-;;:::i;2505:262:20:-;;;:::i;3734:874::-;;;;;;:::i;:::-;;:::i;3329:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:1;3403:7;3429:18;;;;;;;;;;;;3329:125;1695:20:20;;;;;-1:-1:-1;;;;;1695:20:20;;;;;;-1:-1:-1;;;;;4232:32:21;;;4214:51;;4202:2;4187:18;1695:20:20;4169:102:21;2288::1;;;:::i;6315:371::-;;;;;;:::i;:::-;;:::i;3657:172::-;;;;;;:::i;:::-;;:::i;2041:261:20:-;;;;;;:::i;:::-;;:::i;3887:149:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:1;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;3541:187:20;;;:::i;4614:167::-;;;;;;:::i;:::-;;:::i;:::-;;4787:247;;;;;;:::i;:::-;4877:17;4941:22;;;:5;:22;;;;;:32;;4995;;;;;4941;;4787:247;;;;;11662:25:21;;;11718:2;11703:18;;11696:34;;;;11635:18;4787:247:20;11617:119:21;2077:98:1;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:13;4296:7:1;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:1;4174:166;;;;;:::o;2826:633:20:-;3051:20;;3001:6;;-1:-1:-1;;;;;3051:20:20;665:10:13;-1:-1:-1;;;;;3027:45:20;;3019:54;;;;;;3120:27;:18;:25;:27::i;:::-;3116:208;;3189:15;3168:18;:36;3218:32;:18;3241:8;3218:22;:32::i;:::-;;3116:208;;;3281:32;:18;3304:8;3281:22;:32::i;:::-;;3116:208;3339:46;;;11662:25:21;;;3369:15:20;11718:2:21;11703:18;;11696:34;3339:46:20;;11635:18:21;3339:46:20;;;;;;;2826:633;;;;;;:::o;4807:414:1:-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:1;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:13;5003:33:1;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;5046:79:1;;8351:2:21;5046:79:1;;;8333:21:21;8390:2;8370:18;;;8363:30;8429:34;8409:18;;;8402:62;-1:-1:-1;;;8480:18:21;;;8473:38;8528:19;;5046:79:1;;;;;;;;;5135:57;5144:6;665:10:13;5166:25:1;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;5210:4;5203:11;;;4807:414;;;;;;:::o;5616:212::-;665:10:13;5704:4:1;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:1;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;2505:262:20:-;665:10:13;2543:4:20;2586:25;;;:11;:25;;;;;;2567:15;:44;;2559:53;;;;;;2622:3;;-1:-1:-1;;;;;2622:3:20;:12;665:10:13;2649:29:20;665:10:13;2665:12:20;586:96:13;2649:29:20;2622:57;;-1:-1:-1;;;;;;2622:57:20;;;;;;;-1:-1:-1;;;;;4848:32:21;;;2622:57:20;;;4830:51:21;4897:18;;;4890:34;4803:18;;2622:57:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2689:50:20;665:10:13;2709:29:20;665:10:13;2725:12:20;586:96:13;2709:29:20;2689:5;:50::i;:::-;-1:-1:-1;2756:4:20;2505:262;:::o;3734:874::-;3781:4;3835:1;3805:27;:18;:25;:27::i;:::-;:31;3797:40;;;;;;3890:26;3919:14;:12;:14::i;:::-;3890:43;-1:-1:-1;3984:1:20;3951:29;665:10:13;3967:12:20;586:96:13;3951:29:20;:34;;3943:43;;;;;;4033:25;;;;:5;:25;;;;;;;;665:10:13;4033:47:20;;:33;;:47;;;;;;;;4032:48;4024:57;;;;;;4139:18;;:28;;4160:7;4139:28;:::i;:::-;4121:15;:46;4113:55;;;;;;4200:25;;;;:5;:25;;;;;;;;665:10:13;4200:47:20;;:33;;:47;;;;;:54;;-1:-1:-1;;4200:54:20;4250:4;4200:54;;;4264:266;;;;4331:59;665:10:13;4364:12:20;586:96:13;4331:59:20;4292:25;;;;:5;:25;;;;;:98;;:25;;;:98;;;;;:::i;:::-;;;;-1:-1:-1;4264:266:20;;-1:-1:-1;4264:266:20;;4460:59;665:10:13;4493:12:20;586:96:13;4460:59:20;4421:25;;;;:5;:25;;;;;:35;;:98;;:35;;:25;:98;;;;;:::i;:::-;;;;-1:-1:-1;;4264:266:20;4544:36;;5100:14:21;;5093:22;5075:41;;665:10:13;;4544:36:20;;5063:2:21;5048:18;4544:36:20;;;;;;;-1:-1:-1;4597:4:20;;3734:874;-1:-1:-1;;3734:874:20:o;2288:102:1:-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;665:10:13;6408:4:1;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:1;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;6495:85:1;;10742:2:21;6495:85:1;;;10724:21:21;10781:2;10761:18;;;10754:30;10820:34;10800:18;;;10793:62;-1:-1:-1;;;10871:18:21;;;10864:35;10916:19;;6495:85:1;10714:227:21;6495:85:1;6590:67;665:10:13;6613:7:1;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:1;;6315:371;-1:-1:-1;;;6315:371:1:o;3657:172::-;3743:4;3759:42;665:10:13;3783:9:1;3794:6;3759:9;:42::i;2041:261:20:-;2093:4;2109:58;665:10:13;2109:3:20;;-1:-1:-1;;;;;2109:3:20;;2152:4;2159:7;2109:20;:58::i;:::-;2177:34;665:10:13;2197:13:20;:7;2207:3;2197:13;:::i;:::-;2177:5;:34::i;:::-;2249:25;:15;2267:7;2249:25;:::i;:::-;665:10:13;2221:25:20;;;;:11;:25;;;;;:53;-1:-1:-1;2291:4:20;;2041:261;-1:-1:-1;2041:261:20:o;3541:187::-;3586:7;3643:1;3613:27;:18;:25;:27::i;:::-;:31;3605:40;;;;;;3697:24;:18;3719:1;3697:21;:24::i;:::-;3690:31;;3541:187;:::o;4614:167::-;4716:5;;-1:-1:-1;;;;;4716:5:20;665:10:13;-1:-1:-1;;;;;4700:21:20;;4692:30;;;;;;4732:20;:42;;-1:-1:-1;;;;;;4732:42:20;-1:-1:-1;;;;;4732:42:20;;;;;;;;;;4614:167::o;9579:340:1:-;-1:-1:-1;;;;;9680:19:1;;9672:68;;;;-1:-1:-1;;;9672:68:1;;9568:2:21;9672:68:1;;;9550:21:21;9607:2;9587:18;;;9580:30;9646:34;9626:18;;;9619:62;-1:-1:-1;;;9697:18:21;;;9690:34;9741:19;;9672:68:1;9540:226:21;9672:68:1;-1:-1:-1;;;;;9758:21:1;;9750:68;;;;-1:-1:-1;;;9750:68:1;;7134:2:21;9750:68:1;;;7116:21:21;7173:2;7153:18;;;7146:30;7212:34;7192:18;;;7185:62;-1:-1:-1;;;7263:18:21;;;7256:32;7305:19;;9750:68:1;7106:224:21;9750:68:1;-1:-1:-1;;;;;9829:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;11452:25:21;;;9880:32:1;;11425:18:21;9880:32:1;;;;;;;;9579:340;;;:::o;8807:112:18:-;8867:7;8893:19;8901:3;4096:18;;4014:107;8069:129;8136:4;8159:32;8164:3;8184:5;8159:4;:32::i;7160:592:1:-;-1:-1:-1;;;;;7265:20:1;;7257:70;;;;-1:-1:-1;;;7257:70:1;;9162:2:21;7257:70:1;;;9144:21:21;9201:2;9181:18;;;9174:30;9240:34;9220:18;;;9213:62;-1:-1:-1;;;9291:18:21;;;9284:35;9336:19;;7257:70:1;9134:227:21;7257:70:1;-1:-1:-1;;;;;7345:23:1;;7337:71;;;;-1:-1:-1;;;7337:71:1;;6327:2:21;7337:71:1;;;6309:21:21;6366:2;6346:18;;;6339:30;6405:34;6385:18;;;6378:62;-1:-1:-1;;;6456:18:21;;;6449:33;6499:19;;7337:71:1;6299:225:21;7337:71:1;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;-1:-1:-1;;;;;7501:17:1;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;7528:74:1;;7537:2:21;7528:74:1;;;7519:21:21;7576:2;7556:18;;;7549:30;7615:34;7595:18;;;7588:62;-1:-1:-1;;;7666:18:21;;;7659:36;7712:19;;7528:74:1;7509:228:21;7528:74:1;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:1;7719:6;-1:-1:-1;;;;;7710:35:1;;7738:6;7710:35;;;;11452:25:21;;11440:2;11425:18;;11407:76;7710:35:1;;;;;;;;7160:592;;;;:::o;8673:483::-;-1:-1:-1;;;;;8756:21:1;;8748:67;;;;-1:-1:-1;;;8748:67:1;;8760:2:21;8748:67:1;;;8742:21:21;8799:2;8779:18;;;8772:30;8838:34;8818:18;;;8811:62;-1:-1:-1;;;8889:18:21;;;8882:31;8930:19;;8748:67:1;8732:223:21;8748:67:1;8826:49;8847:7;8864:1;8868:6;8826:20;:49::i;:::-;-1:-1:-1;;;;;8911:18:1;;8886:22;8911:18;;;;;;;;;;;8947:24;;;;8939:71;;;;-1:-1:-1;;;8939:71:1;;6731:2:21;8939:71:1;;;6713:21:21;6770:2;6750:18;;;6743:30;6809:34;6789:18;;;6782:62;-1:-1:-1;;;6860:18:21;;;6853:32;6902:19;;8939:71:1;6703:224:21;8939:71:1;9041:23;9058:6;9041:14;:23;:::i;:::-;-1:-1:-1;;;;;9020:18:1;;:9;:18;;;;;;;;;;:44;;;;9074:12;:22;;9090:6;;9020:9;9074:22;;9090:6;;9074:22;:::i;:::-;;;;-1:-1:-1;;9112:37:1;;11452:25:21;;;9138:1:1;;-1:-1:-1;;;;;9112:37:1;;;;;11440:2:21;11425:18;9112:37:1;11407:76:21;815:203:4;942:68;;;-1:-1:-1;;;;;4534:15:21;;;942:68:4;;;4516:34:21;4586:15;;4566:18;;;4559:43;4618:18;;;;4611:34;;;942:68:4;;;;;;;;;;4451:18:21;;;;942:68:4;;;;;;;;-1:-1:-1;;;;;942:68:4;-1:-1:-1;;;942:68:4;;;915:96;;935:5;;915:19;:96::i;:::-;815:203;;;;:::o;8023:330:1:-;-1:-1:-1;;;;;8106:21:1;;8098:65;;;;-1:-1:-1;;;8098:65:1;;11148:2:21;8098:65:1;;;11130:21:21;11187:2;11167:18;;;11160:30;11226:33;11206:18;;;11199:61;11277:18;;8098:65:1;11120:181:21;8098:65:1;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:1;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:1;;11452:25:21;;;-1:-1:-1;;;;;8309:37:1;;;8326:1;;8309:37;;11440:2:21;11425:18;8309:37:1;;;;;;;8023:330;;:::o;9251:135:18:-;9322:7;9356:22;9360:3;9372:5;9356:3;:22::i;1632:404::-;1695:4;3902:19;;;:12;;;:19;;;;;;1711:319;;-1:-1:-1;1753:23:18;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:18;2007:12;;5040:281:20;-1:-1:-1;;;;;5181:18:20;;;;;;:38;;-1:-1:-1;;;;;;5203:16:20;;;;5181:38;5177:52;;;5221:8;;;5177:52;5040:281;;;:::o;3022:751:4:-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:4;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:4;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:4;;10331:2:21;3671:85:4;;;10313:21:21;10370:2;10350:18;;;10343:30;10409:34;10389:18;;;10382:62;-1:-1:-1;;;10460:18:21;;;10453:40;10510:19;;3671:85:4;10303:232:21;4453:201:18;4547:18;;4520:7;;4547:26;-1:-1:-1;4539:73:18;;;;-1:-1:-1;;;4539:73:18;;5924:2:21;4539:73:18;;;5906:21:21;5963:2;5943:18;;;5936:30;6002:34;5982:18;;;5975:62;-1:-1:-1;;;6053:18:21;;;6046:32;6095:19;;4539:73:18;5896:224:21;4539:73:18;4629:3;:11;;4641:5;4629:18;;;;;;-1:-1:-1;;;4629:18:18;;;;;;;;;;;;;;;;;4622:25;;4453:201;;;;:::o;3573:193:12:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;3573:193;-1:-1:-1;;;;3573:193:12:o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:12;;7944:2:21;4751:81:12;;;7926:21:21;7983:2;7963:18;;;7956:30;8022:34;8002:18;;;7995:62;-1:-1:-1;;;8073:18:21;;;8066:36;8119:19;;4751:81:12;7916:228:21;4751:81:12;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:12;;9973:2:21;4842:60:12;;;9955:21:21;10012:2;9992:18;;;9985:30;10051:31;10031:18;;;10024:59;10100:18;;4842:60:12;9945:179:21;4842:60:12;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:12;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:12:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:12;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:12;;;;;;;;:::i;14:257:21:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:398::-;;;405:2;393:9;384:7;380:23;376:32;373:2;;;426:6;418;411:22;373:2;470:9;457:23;489:31;514:5;489:31;:::i;:::-;539:5;-1:-1:-1;596:2:21;581:18;;568:32;609:33;568:32;609:33;:::i;:::-;661:7;651:17;;;363:311;;;;;:::o;679:466::-;;;;825:2;813:9;804:7;800:23;796:32;793:2;;;846:6;838;831:22;793:2;890:9;877:23;909:31;934:5;909:31;:::i;:::-;959:5;-1:-1:-1;1016:2:21;1001:18;;988:32;1029:33;988:32;1029:33;:::i;:::-;783:362;;1081:7;;-1:-1:-1;;;1135:2:21;1120:18;;;;1107:32;;783:362::o;1150:1311::-;;;;;1322:3;1310:9;1301:7;1297:23;1293:33;1290:2;;;1344:6;1336;1329:22;1290:2;1388:9;1375:23;1407:31;1432:5;1407:31;:::i;:::-;1457:5;-1:-1:-1;1514:2:21;1499:18;;1486:32;1527:33;1486:32;1527:33;:::i;:::-;1579:7;-1:-1:-1;1633:2:21;1618:18;;1605:32;;-1:-1:-1;1688:2:21;1673:18;;1660:32;1711:18;1741:14;;;1738:2;;;1773:6;1765;1758:22;1738:2;1816:6;1805:9;1801:22;1791:32;;1861:7;1854:4;1850:2;1846:13;1842:27;1832:2;;1888:6;1880;1873:22;1832:2;1929;1916:16;1951:2;1947;1944:10;1941:2;;;1957:18;;:::i;:::-;2032:2;2026:9;2000:2;2086:13;;-1:-1:-1;;2082:22:21;;;2106:2;2078:31;2074:40;2062:53;;;2130:18;;;2150:22;;;2127:46;2124:2;;;2176:18;;:::i;:::-;2216:10;2212:2;2205:22;2251:2;2243:6;2236:18;2291:7;2286:2;2281;2277;2273:11;2269:20;2266:33;2263:2;;;2317:6;2309;2302:22;2263:2;2378;2373;2369;2365:11;2360:2;2352:6;2348:15;2335:46;2401:15;;;2418:2;2397:24;2390:40;;;;1280:1181;;;;-1:-1:-1;1280:1181:21;;-1:-1:-1;;;;1280:1181:21:o;2466:325::-;;;2595:2;2583:9;2574:7;2570:23;2566:32;2563:2;;;2616:6;2608;2601:22;2563:2;2660:9;2647:23;2679:31;2704:5;2679:31;:::i;:::-;2729:5;2781:2;2766:18;;;;2753:32;;-1:-1:-1;;;2553:238:21:o;2796:251::-;;2905:2;2893:9;2884:7;2880:23;2876:32;2873:2;;;2926:6;2918;2911:22;2873:2;2970:9;2957:23;2989:28;3011:5;2989:28;:::i;3052:255::-;;3172:2;3160:9;3151:7;3147:23;3143:32;3140:2;;;3193:6;3185;3178:22;3140:2;3230:9;3224:16;3249:28;3271:5;3249:28;:::i;3594:190::-;;3706:2;3694:9;3685:7;3681:23;3677:32;3674:2;;;3727:6;3719;3712:22;3674:2;-1:-1:-1;3755:23:21;;3664:120;-1:-1:-1;3664:120:21:o;3789:274::-;;3956:6;3950:13;3972:53;4018:6;4013:3;4006:4;3998:6;3994:17;3972:53;:::i;:::-;4041:16;;;;;3926:137;-1:-1:-1;;3926:137:21:o;5334:383::-;;5483:2;5472:9;5465:21;5515:6;5509:13;5558:6;5553:2;5542:9;5538:18;5531:34;5574:66;5633:6;5628:2;5617:9;5613:18;5608:2;5600:6;5596:15;5574:66;:::i;:::-;5701:2;5680:15;-1:-1:-1;;5676:29:21;5661:45;;;;5708:2;5657:54;;5455:262;-1:-1:-1;;5455:262:21:o;11930:128::-;;12001:1;11997:6;11994:1;11991:13;11988:2;;;12007:18;;:::i;:::-;-1:-1:-1;12043:9:21;;11978:80::o;12063:168::-;;12169:1;12165;12161:6;12157:14;12154:1;12151:21;12146:1;12139:9;12132:17;12128:45;12125:2;;;12176:18;;:::i;:::-;-1:-1:-1;12216:9:21;;12115:116::o;12236:125::-;;12304:1;12301;12298:8;12295:2;;;12309:18;;:::i;:::-;-1:-1:-1;12346:9:21;;12285:76::o;12366:258::-;12438:1;12448:113;12462:6;12459:1;12456:13;12448:113;;;12538:11;;;12532:18;12519:11;;;12512:39;12484:2;12477:10;12448:113;;;12579:6;12576:1;12573:13;12570:2;;;-1:-1:-1;;12614:1:21;12596:16;;12589:27;12419:205::o;12629:380::-;12708:1;12704:12;;;;12751;;;12772:2;;12826:4;12818:6;12814:17;12804:27;;12772:2;12879;12871:6;12868:14;12848:18;12845:38;12842:2;;;12925:10;12920:3;12916:20;12913:1;12906:31;12960:4;12957:1;12950:15;12988:4;12985:1;12978:15;12842:2;;12684:325;;;:::o;13014:127::-;13075:10;13070:3;13066:20;13063:1;13056:31;13106:4;13103:1;13096:15;13130:4;13127:1;13120:15;13146:127;13207:10;13202:3;13198:20;13195:1;13188:31;13238:4;13235:1;13228:15;13262:4;13259:1;13252:15;13278:131;-1:-1:-1;;;;;13353:31:21;;13343:42;;13333:2;;13399:1;13396;13389:12;13333:2;13323:86;:::o;13414:118::-;13500:5;13493:13;13486:21;13479:5;13476:32;13466:2;;13522:1;13519;13512:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256)": {
        "details": "100 PNY = 1 DAI, DAI is locked for a period of 1 year",
        "notice": "Deposit DAI in exchange for PNY",
        "params": {
          "_amount": "The amount of DAI to deposit"
        },
        "returns": {
          "_0": "true on success"
        }
      },
      "getUpForVote()": {
        "notice": "Getter for retrieving the currently up for vote application"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Called when recieving an application"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdraw()": {
        "details": "Must ensure enough DAI is held by this contract at the time of the withdrawl",
        "notice": "Withdraw deposited DAI after deposit lock has been removed",
        "returns": {
          "_0": "true on success"
        }
      }
    },
    "version": 1
  },
  "offset": [
    567,
    5323
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xE5FDE991 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF7402B04 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x2F4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x278 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4B9F5C98 EQ PUSH2 0x1F6 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x18732D79 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x126A JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x55C JUMP JUMPDEST PUSH2 0x162 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x245 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31C PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x340 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36C SWAP1 PUSH2 0x14C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0 CALLER DUP5 DUP5 PUSH2 0x8EA JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x407 PUSH1 0x8 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x420 JUMPI TIMESTAMP PUSH1 0xB SSTORE PUSH2 0x41A PUSH1 0x8 DUP5 PUSH2 0xA19 JUMP JUMPDEST POP PUSH2 0x42D JUMP JUMPDEST PUSH2 0x42B PUSH1 0x8 DUP5 PUSH2 0xA19 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4AB72FDF5EF9783A267482C1DE51AF8E451F326DD15F63D6BEB8980CF5E7B0B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A DUP5 DUP5 DUP5 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x518 DUP6 CALLER PUSH2 0x513 DUP7 DUP6 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3D0 SWAP2 DUP6 SWAP1 PUSH2 0x513 SWAP1 DUP7 SWAP1 PUSH2 0x144D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0x593 CALLER PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST POP PUSH2 0x624 CALLER PUSH2 0x61F CALLER PUSH2 0x217 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x637 PUSH1 0x8 PUSH2 0xA0F JUMP JUMPDEST GT PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x64B PUSH2 0x880 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x658 CALLER PUSH2 0x217 JUMP JUMPDEST LT ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x69D SWAP1 PUSH3 0x278D00 PUSH2 0x144D JUMP JUMPDEST TIMESTAMP LT PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP3 ISZERO PUSH2 0x707 JUMPI PUSH2 0x6DE CALLER PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x6FC SWAP1 DUP5 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x737 SWAP1 POP JUMP JUMPDEST PUSH2 0x710 CALLER PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x731 SWAP1 DUP5 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE CALLER SWAP1 PUSH32 0xAFEC2BED15137B132CE27A59DD2AE3284DAD307738D7CDB82797CA380902BF6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x340 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x817 CALLER DUP6 PUSH2 0x513 DUP7 DUP6 PUSH2 0x1484 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0 CALLER DUP5 DUP5 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 CALLER PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP6 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0x85C CALLER PUSH2 0x857 DUP5 PUSH1 0x64 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x868 TIMESTAMP PUSH2 0x384 PUSH2 0x144D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x88D PUSH1 0x8 PUSH2 0xA0F JUMP JUMPDEST GT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A3 PUSH1 0x8 PUSH1 0x0 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x94C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP4 DUP4 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH2 0xAF6 DUP4 DUP4 DUP4 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH2 0xB78 DUP3 DUP3 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBAE SWAP1 DUP5 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBFA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH2 0xC74 DUP3 PUSH1 0x0 DUP4 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH2 0xCF2 DUP3 DUP3 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD20 SWAP1 DUP5 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xDBD SWAP1 DUP6 SWAP1 PUSH2 0xF38 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH2 0xE25 PUSH1 0x0 DUP4 DUP4 PUSH2 0xF09 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE37 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xE64 SWAP1 DUP5 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP4 DUP4 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xF01 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3D4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF29 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x109E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF33 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x108B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10AD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x10B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FB JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11D2 DUP3 DUP3 DUP7 PUSH2 0x11DD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x11EC JUMPI POP DUP2 PUSH2 0x51E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x11FC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1227 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x51E DUP2 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1244 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x124F DUP2 PUSH2 0x152E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x125F DUP2 PUSH2 0x152E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x127E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1289 DUP2 PUSH2 0x152E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1299 DUP2 PUSH2 0x152E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12BF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x12CA DUP2 PUSH2 0x152E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x12DA DUP2 PUSH2 0x152E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12FD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1310 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1322 JUMPI PUSH2 0x1322 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x134A JUMPI PUSH2 0x134A PUSH2 0x1518 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1362 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1395 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13A0 DUP2 PUSH2 0x152E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x51E DUP2 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x51E DUP2 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F7 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1410 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x149B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1439 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x149B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1460 JUMPI PUSH2 0x1460 PUSH2 0x1502 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x147F JUMPI PUSH2 0x147F PUSH2 0x1502 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1496 JUMPI PUSH2 0x1496 PUSH2 0x1502 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x149E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xDBD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x14FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xBB1B94AC52464B3124D89FCA5C89CD11D8573DE44E907FA55A63E1E39F8A RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        567,
        5323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "POP",
      "path": "20"
    },
    "18": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "21": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "LT",
      "path": "20"
    },
    "22": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12C"
    },
    "25": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "29": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "SHR",
      "path": "20"
    },
    "32": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "33": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "GT",
      "path": "20"
    },
    "39": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "43": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "44": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB6B55F25"
    },
    "49": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "GT",
      "path": "20"
    },
    "50": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "54": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "55": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB6B55F25"
    },
    "60": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "61": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28B"
    },
    "64": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "65": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "66": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "72": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29E"
    },
    "75": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "76": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "77": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE5FDE991"
    },
    "82": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "83": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D7"
    },
    "86": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "87": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "88": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF7402B04"
    },
    "93": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "94": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DF"
    },
    "97": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "98": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFF981099"
    },
    "104": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "105": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F4"
    },
    "108": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "109": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12C"
    },
    "112": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMP",
      "path": "20"
    },
    "113": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "114": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "115": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "121": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x209"
    },
    "124": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "125": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "126": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "132": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x232"
    },
    "135": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "136": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "137": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "143": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25D"
    },
    "146": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "147": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "148": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA457C2D7"
    },
    "153": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "154": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x265"
    },
    "157": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "158": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "159": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "164": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "165": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x278"
    },
    "168": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "169": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12C"
    },
    "172": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMP",
      "path": "20"
    },
    "173": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "174": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "175": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "GT",
      "path": "20"
    },
    "181": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "185": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "186": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "192": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B9"
    },
    "195": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "196": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "197": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "203": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CC"
    },
    "206": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "207": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "208": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x39509351"
    },
    "213": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "214": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DB"
    },
    "217": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "218": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "219": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3CCFD60B"
    },
    "224": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "225": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EE"
    },
    "228": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "229": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "230": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4B9F5C98"
    },
    "235": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "236": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F6"
    },
    "239": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "240": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12C"
    },
    "243": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMP",
      "path": "20"
    },
    "244": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "245": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "246": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "252": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x131"
    },
    "255": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "257": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "263": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14F"
    },
    "266": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "268": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x150B7A02"
    },
    "273": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "274": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x172"
    },
    "277": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "278": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "279": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "284": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "285": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19E"
    },
    "288": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "289": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "290": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18732D79"
    },
    "295": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "EQ",
      "path": "20"
    },
    "296": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B0"
    },
    "299": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "300": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "301": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "303": {
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "304": {
      "first_revert": true,
      "fn": null,
      "offset": [
        567,
        5323
      ],
      "op": "REVERT",
      "path": "20"
    },
    "305": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "306": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x139"
    },
    "309": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "312": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMP",
      "path": "1"
    },
    "313": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "314": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "316": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "317": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "320": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "321": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "322": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x141A"
    },
    "325": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMP",
      "path": "1"
    },
    "326": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "329": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "330": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "DUP1",
      "path": "1"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "332": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SUB",
      "path": "1"
    },
    "333": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "334": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "RETURN",
      "path": "1"
    },
    "335": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "339": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15D"
    },
    "342": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "343": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "345": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1383"
    },
    "348": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMP",
      "path": "1"
    },
    "349": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "350": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C3"
    },
    "353": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMP",
      "path": "1"
    },
    "354": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "355": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "358": {
      "op": "SWAP1"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "ISZERO"
    },
    "361": {
      "op": "DUP2"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "365": {
      "op": "ADD"
    },
    "366": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "369": {
      "op": "JUMP"
    },
    "370": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "371": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x185"
    },
    "374": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "377": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "378": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "380": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12AA"
    },
    "383": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        2826,
        3459
      ],
      "op": "JUMP",
      "path": "20"
    },
    "384": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "385": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DA"
    },
    "388": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        2826,
        3459
      ],
      "op": "JUMP",
      "path": "20"
    },
    "389": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "390": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "392": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "399": {
      "op": "SHL"
    },
    "400": {
      "op": "SUB"
    },
    "401": {
      "op": "NOT"
    },
    "402": {
      "op": "SWAP1"
    },
    "403": {
      "op": "SWAP2"
    },
    "404": {
      "op": "AND"
    },
    "405": {
      "op": "DUP2"
    },
    "406": {
      "op": "MSTORE"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "409": {
      "op": "ADD"
    },
    "410": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x146"
    },
    "413": {
      "op": "JUMP"
    },
    "414": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "415": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3252,
        3264
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "417": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3252,
        3264
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "418": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "419": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "421": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "422": {
      "op": "SWAP1"
    },
    "423": {
      "op": "DUP2"
    },
    "424": {
      "op": "MSTORE"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "427": {
      "op": "ADD"
    },
    "428": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "431": {
      "op": "JUMP"
    },
    "432": {
      "offset": [
        1656,
        1689
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "433": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1656,
        1689
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A2"
    },
    "436": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1656,
        1689
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "438": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1656,
        1689
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "439": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1656,
        1689
      ],
      "op": "DUP2",
      "path": "20"
    },
    "440": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1656,
        1689
      ],
      "op": "JUMP",
      "path": "20"
    },
    "441": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "442": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "445": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C7"
    },
    "448": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "449": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "451": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x126A"
    },
    "454": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMP",
      "path": "1"
    },
    "455": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "456": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46D"
    },
    "459": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMP",
      "path": "1"
    },
    "460": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "461": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "463": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "464": {
      "fn": "ERC20.decimals",
      "offset": [
        3096,
        3098
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "466": {
      "op": "DUP2"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "470": {
      "op": "ADD"
    },
    "471": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "474": {
      "op": "JUMP"
    },
    "475": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "476": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "479": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E9"
    },
    "482": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "483": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "485": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1383"
    },
    "488": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "489": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "490": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x525"
    },
    "493": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "494": {
      "fn": "Penny.withdraw",
      "offset": [
        2505,
        2767
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "495": {
      "fn": "Penny.withdraw",
      "offset": [
        2505,
        2767
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x162"
    },
    "498": {
      "fn": "Penny.withdraw",
      "offset": [
        2505,
        2767
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x55C"
    },
    "501": {
      "fn": "Penny.withdraw",
      "jump": "i",
      "offset": [
        2505,
        2767
      ],
      "op": "JUMP",
      "path": "20"
    },
    "502": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "503": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x162"
    },
    "506": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x204"
    },
    "509": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "510": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "512": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13AE"
    },
    "515": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3734,
        4608
      ],
      "op": "JUMP",
      "path": "20"
    },
    "516": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "517": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x62A"
    },
    "520": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3734,
        4608
      ],
      "op": "JUMP",
      "path": "20"
    },
    "521": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "522": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A2"
    },
    "525": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x217"
    },
    "528": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "529": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "531": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1216"
    },
    "534": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMP",
      "path": "1"
    },
    "535": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "SUB"
    },
    "544": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "AND",
      "path": "1",
      "statement": 2
    },
    "545": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3403,
        3410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "547": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "548": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "549": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "550": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "552": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "553": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "554": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "555": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "557": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "558": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "559": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "560": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "561": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMP",
      "path": "1"
    },
    "562": {
      "offset": [
        1695,
        1715
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "563": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "565": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "566": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x245"
    },
    "569": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "op": "SUB"
    },
    "578": {
      "offset": [
        1695,
        1715
      ],
      "op": "AND",
      "path": "20"
    },
    "579": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "DUP2",
      "path": "20"
    },
    "580": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "JUMP",
      "path": "20"
    },
    "581": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "582": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "584": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1695,
        1715
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "591": {
      "op": "SHL"
    },
    "592": {
      "op": "SUB"
    },
    "593": {
      "op": "SWAP1"
    },
    "594": {
      "op": "SWAP2"
    },
    "595": {
      "op": "AND"
    },
    "596": {
      "op": "DUP2"
    },
    "597": {
      "op": "MSTORE"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "600": {
      "op": "ADD"
    },
    "601": {
      "offset": [
        1695,
        1715
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x146"
    },
    "604": {
      "op": "JUMP"
    },
    "605": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "606": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x139"
    },
    "609": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x777"
    },
    "612": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2288,
        2390
      ],
      "op": "JUMP",
      "path": "1"
    },
    "613": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "614": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "617": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x273"
    },
    "620": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "621": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "623": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1383"
    },
    "626": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "627": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "628": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x786"
    },
    "631": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "632": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "633": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "636": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x286"
    },
    "639": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "640": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "642": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1383"
    },
    "645": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "646": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "647": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x821"
    },
    "650": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "651": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "652": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x162"
    },
    "655": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x299"
    },
    "658": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "659": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "661": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13E6"
    },
    "664": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2041,
        2302
      ],
      "op": "JUMP",
      "path": "20"
    },
    "665": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "666": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x82E"
    },
    "669": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2041,
        2302
      ],
      "op": "JUMP",
      "path": "20"
    },
    "670": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "671": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A2"
    },
    "674": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AC"
    },
    "677": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "678": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "680": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1232"
    },
    "683": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMP",
      "path": "1"
    },
    "684": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "691": {
      "op": "SHL"
    },
    "692": {
      "op": "SUB"
    },
    "693": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 3
    },
    "694": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP3",
      "path": "1"
    },
    "695": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "AND",
      "path": "1"
    },
    "696": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        3983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "698": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "699": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "700": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "701": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "703": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "705": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "706": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "707": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "708": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP1",
      "path": "1"
    },
    "711": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP4",
      "path": "1"
    },
    "712": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "713": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "714": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "715": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "716": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "AND",
      "path": "1"
    },
    "717": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "DUP3",
      "path": "1"
    },
    "718": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "719": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "720": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "721": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "722": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "723": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "724": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "725": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "726": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMP",
      "path": "1"
    },
    "727": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3541,
        3728
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "728": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3541,
        3728
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A2"
    },
    "731": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3541,
        3728
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x880"
    },
    "734": {
      "fn": "Penny.getUpForVote",
      "jump": "i",
      "offset": [
        3541,
        3728
      ],
      "op": "JUMP",
      "path": "20"
    },
    "735": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "736": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F2"
    },
    "739": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2ED"
    },
    "742": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "743": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "745": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1216"
    },
    "748": {
      "fn": "Penny.setApplications",
      "jump": "i",
      "offset": [
        4614,
        4781
      ],
      "op": "JUMP",
      "path": "20"
    },
    "749": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "750": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8A8"
    },
    "753": {
      "fn": "Penny.setApplications",
      "jump": "i",
      "offset": [
        4614,
        4781
      ],
      "op": "JUMP",
      "path": "20"
    },
    "754": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "755": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "STOP",
      "path": "20"
    },
    "756": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "757": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "760": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x302"
    },
    "763": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "764": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "766": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13E6"
    },
    "769": {
      "fn": "Penny.getVotes",
      "jump": "i",
      "offset": [
        4787,
        5034
      ],
      "op": "JUMP",
      "path": "20"
    },
    "770": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "771": {
      "fn": "Penny.getVotes",
      "offset": [
        4877,
        4894
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "773": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 4
    },
    "774": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "DUP2",
      "path": "20"
    },
    "775": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "776": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4946
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "778": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "780": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "781": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "783": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "784": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4963
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "785": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4973
      ],
      "op": "DUP1",
      "path": "20"
    },
    "786": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4973
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "787": {
      "fn": "Penny.getVotes",
      "offset": [
        4995,
        5027
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 5,
      "value": "0x1"
    },
    "789": {
      "fn": "Penny.getVotes",
      "offset": [
        4995,
        5027
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "790": {
      "fn": "Penny.getVotes",
      "offset": [
        4995,
        5027
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "791": {
      "fn": "Penny.getVotes",
      "offset": [
        4995,
        5027
      ],
      "op": "ADD",
      "path": "20"
    },
    "792": {
      "fn": "Penny.getVotes",
      "offset": [
        4995,
        5027
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "793": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4973
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "794": {
      "fn": "Penny.getVotes",
      "offset": [
        4941,
        4973
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "795": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "JUMP",
      "path": "20"
    },
    "796": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "797": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "799": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "DUP1",
      "path": "20"
    },
    "800": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "801": {
      "op": "SWAP3"
    },
    "802": {
      "op": "DUP4"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "806": {
      "op": "DUP4"
    },
    "807": {
      "op": "ADD"
    },
    "808": {
      "op": "SWAP2"
    },
    "809": {
      "op": "SWAP1"
    },
    "810": {
      "op": "SWAP2"
    },
    "811": {
      "op": "MSTORE"
    },
    "812": {
      "op": "ADD"
    },
    "813": {
      "fn": "Penny.getVotes",
      "offset": [
        4787,
        5034
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x146"
    },
    "816": {
      "op": "JUMP"
    },
    "817": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.name",
      "offset": [
        2131,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "820": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x3"
    },
    "822": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "823": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "824": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x340"
    },
    "827": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "828": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C7"
    },
    "831": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "832": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "833": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "834": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "836": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "837": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "839": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "840": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "841": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DIV",
      "path": "1"
    },
    "842": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MUL",
      "path": "1"
    },
    "843": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "845": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "846": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "848": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "849": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "850": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "851": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "852": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "854": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "855": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "856": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "858": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "859": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "862": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36C"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "872": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C7"
    },
    "875": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "878": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "879": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B9"
    },
    "882": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "884": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "LT",
      "path": "1"
    },
    "887": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38E"
    },
    "890": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "896": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "897": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DIV",
      "path": "1"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MUL",
      "path": "1"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "901": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "902": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "906": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B9"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "913": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "924": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "928": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "929": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "932": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "GT",
      "path": "1"
    },
    "940": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39C"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SUB",
      "path": "1"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "AND",
      "path": "1"
    },
    "950": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "959": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "962": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMP",
      "path": "1"
    },
    "963": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "964": {
      "fn": "ERC20.approve",
      "offset": [
        4257,
        4261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "966": {
      "fn": "ERC20.approve",
      "offset": [
        4273,
        4312
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x3D0"
    },
    "969": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 8
    },
    "970": {
      "fn": "ERC20.approve",
      "offset": [
        4296,
        4303
      ],
      "op": "DUP5",
      "path": "1"
    },
    "971": {
      "fn": "ERC20.approve",
      "offset": [
        4305,
        4311
      ],
      "op": "DUP5",
      "path": "1"
    },
    "972": {
      "fn": "ERC20.approve",
      "offset": [
        4273,
        4281
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8EA"
    },
    "975": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4273,
        4312
      ],
      "op": "JUMP",
      "path": "1"
    },
    "976": {
      "fn": "ERC20.approve",
      "offset": [
        4273,
        4312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "977": {
      "op": "POP"
    },
    "978": {
      "fn": "ERC20.approve",
      "offset": [
        4329,
        4333
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x1"
    },
    "980": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "981": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "982": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "983": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "POP",
      "path": "1"
    },
    "984": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "POP",
      "path": "1"
    },
    "985": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMP",
      "path": "1"
    },
    "986": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "987": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3051,
        3071
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 10,
      "value": "0x7"
    },
    "989": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3051,
        3071
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "990": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3001,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "992": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3001,
        3007
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3051,
        3071
      ],
      "op": "AND",
      "path": "20"
    },
    "1002": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1009": {
      "op": "SHL"
    },
    "1010": {
      "op": "SUB"
    },
    "1011": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3027,
        3072
      ],
      "op": "AND",
      "path": "20"
    },
    "1012": {
      "branch": 88,
      "fn": "Penny.onERC721Received",
      "offset": [
        3027,
        3072
      ],
      "op": "EQ",
      "path": "20"
    },
    "1013": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3019,
        3073
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FD"
    },
    "1016": {
      "branch": 88,
      "fn": "Penny.onERC721Received",
      "offset": [
        3019,
        3073
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1017": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3019,
        3073
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1019": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3019,
        3073
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1020": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3019,
        3073
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1021": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3019,
        3073
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1022": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3120,
        3147
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x407"
    },
    "1025": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3120,
        3138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1027": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3120,
        3145
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA0F"
    },
    "1030": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        3120,
        3147
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1031": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3120,
        3147
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1032": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3116,
        3324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x420"
    },
    "1035": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3116,
        3324
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1036": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3189,
        3204
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 11
    },
    "1037": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3168,
        3186
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1039": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3168,
        3204
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1040": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3218,
        3250
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 12,
      "value": "0x41A"
    },
    "1043": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3218,
        3236
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1045": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3241,
        3249
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1046": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3218,
        3240
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA19"
    },
    "1049": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        3218,
        3250
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1050": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3218,
        3250
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1051": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3218,
        3250
      ],
      "op": "POP",
      "path": "20"
    },
    "1052": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3116,
        3324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42D"
    },
    "1055": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3116,
        3324
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1056": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3116,
        3324
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1057": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3281,
        3313
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 13,
      "value": "0x42B"
    },
    "1060": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3281,
        3299
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1062": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3304,
        3312
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1063": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3281,
        3303
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA19"
    },
    "1066": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        3281,
        3313
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1067": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3281,
        3313
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1068": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3281,
        3313
      ],
      "op": "POP",
      "path": "20"
    },
    "1069": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3116,
        3324
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1070": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 14,
      "value": "0x40"
    },
    "1072": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1073": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1074": {
      "op": "DUP5"
    },
    "1075": {
      "op": "DUP2"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3369,
        3384
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x4AB72FDF5EF9783A267482C1DE51AF8E451F326DD15F63D6BEB8980CF5E7B0B"
    },
    "1116": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1120": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1121": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1122": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1123": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "SUB",
      "path": "20"
    },
    "1124": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1125": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3339,
        3385
      ],
      "op": "LOG1",
      "path": "20"
    },
    "1126": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1127": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1128": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "POP",
      "path": "20"
    },
    "1129": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "POP",
      "path": "20"
    },
    "1130": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "POP",
      "path": "20"
    },
    "1131": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2826,
        3459
      ],
      "op": "POP",
      "path": "20"
    },
    "1132": {
      "fn": "Penny.onERC721Received",
      "jump": "o",
      "offset": [
        2826,
        3459
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        4917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1136": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4929,
        4965
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 15,
      "value": "0x47A"
    },
    "1139": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4939,
        4945
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4947,
        4956
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1141": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4958,
        4964
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1142": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4929,
        4938
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA25"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4929,
        4965
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4929,
        4965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "op": "SUB"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "AND",
      "path": "1"
    },
    "1157": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4976,
        5000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1159": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1160": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1161": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1162": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1167": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1168": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1169": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1171": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1172": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1173": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1174": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1175": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1176": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1177": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1178": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1179": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1182": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 16
    },
    "1184": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "LT",
      "path": "1"
    },
    "1186": {
      "branch": 101,
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1187": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x504"
    },
    "1190": {
      "branch": 101,
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1191": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1193": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1200": {
      "op": "SHL"
    },
    "1201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1202": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1205": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1207": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1208": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "ADD",
      "path": "1"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1214": {
      "op": "DUP3"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "op": "MSTORE"
    },
    "1217": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1252": {
      "op": "DUP3"
    },
    "1253": {
      "op": "ADD"
    },
    "1254": {
      "op": "MSTORE"
    },
    "1255": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1269": {
      "op": "DUP3"
    },
    "1270": {
      "op": "ADD"
    },
    "1271": {
      "op": "MSTORE"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1276": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1278": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1279": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "SUB",
      "path": "1"
    },
    "1282": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1284": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1285": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5192
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 17,
      "value": "0x518"
    },
    "1288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5144,
        5150
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1289": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1290": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x513"
    },
    "1293": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5185,
        5191
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1294": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5182
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1484"
    },
    "1298": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5166,
        5191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1300": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8EA"
    },
    "1303": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5135,
        5192
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1304": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5192
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5210,
        5214
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x1"
    },
    "1307": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5214
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1308": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5214
      ],
      "op": "POP",
      "path": "1"
    },
    "1309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5214
      ],
      "op": "POP",
      "path": "1"
    },
    "1310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1311": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1312": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1313": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "POP",
      "path": "1"
    },
    "1314": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "POP",
      "path": "1"
    },
    "1315": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "POP",
      "path": "1"
    },
    "1316": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1317": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1318": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1319": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5704,
        5708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1321": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 19
    },
    "1322": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1323": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1324": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1326": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1328": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1329": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1330": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1333": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1334": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "op": "SUB"
    },
    "1344": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1345": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "AND",
      "path": "1"
    },
    "1346": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1347": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1348": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1349": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1350": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1351": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1352": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1353": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1354": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5704,
        5708
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1355": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5704,
        5708
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1356": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5720,
        5800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D0"
    },
    "1359": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5720,
        5800
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1360": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5743,
        5750
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1361": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5743,
        5750
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1362": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x513"
    },
    "1365": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1366": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5789,
        5799
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1367": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5789,
        5799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1368": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144D"
    },
    "1371": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5752,
        5799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1372": {
      "fn": "Penny.withdraw",
      "offset": [
        2505,
        2767
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1373": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1374": {
      "fn": "Penny.withdraw",
      "offset": [
        2543,
        2547
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1376": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 20
    },
    "1377": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1378": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1379": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2597
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1381": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1383": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1384": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1386": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1387": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1388": {
      "fn": "Penny.withdraw",
      "offset": [
        2586,
        2611
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1389": {
      "fn": "Penny.withdraw",
      "offset": [
        2567,
        2582
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "1390": {
      "fn": "Penny.withdraw",
      "offset": [
        2567,
        2611
      ],
      "op": "LT",
      "path": "20"
    },
    "1391": {
      "branch": 89,
      "fn": "Penny.withdraw",
      "offset": [
        2567,
        2611
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1392": {
      "fn": "Penny.withdraw",
      "offset": [
        2559,
        2612
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x578"
    },
    "1395": {
      "branch": 89,
      "fn": "Penny.withdraw",
      "offset": [
        2559,
        2612
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1396": {
      "fn": "Penny.withdraw",
      "offset": [
        2559,
        2612
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1398": {
      "fn": "Penny.withdraw",
      "offset": [
        2559,
        2612
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1399": {
      "fn": "Penny.withdraw",
      "offset": [
        2559,
        2612
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1400": {
      "fn": "Penny.withdraw",
      "offset": [
        2559,
        2612
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1401": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2625
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 21,
      "value": "0x5"
    },
    "1403": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2625
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2625
      ],
      "op": "AND",
      "path": "20"
    },
    "1413": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2634
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "1418": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1419": {
      "fn": "Penny.withdraw",
      "offset": [
        2649,
        2678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x593"
    },
    "1422": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1423": {
      "fn": "Penny.withdraw",
      "offset": [
        2665,
        2677
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217"
    },
    "1426": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1427": {
      "fn": "Penny.withdraw",
      "offset": [
        2649,
        2678
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1428": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1430": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "SUB"
    },
    "1439": {
      "op": "NOT"
    },
    "1440": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "1442": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1443": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1444": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "SHL",
      "path": "20"
    },
    "1445": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "AND",
      "path": "20"
    },
    "1446": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1447": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "op": "SWAP1"
    },
    "1457": {
      "op": "SWAP3"
    },
    "1458": {
      "op": "AND"
    },
    "1459": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1461": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1462": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ADD",
      "path": "20"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1466": {
      "op": "DUP3"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "op": "MSTORE"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1474": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1476": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1477": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1478": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1479": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "SUB",
      "path": "20"
    },
    "1480": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1481": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1483": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1484": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1485": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "1486": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1487": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1488": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1489": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5D9"
    },
    "1492": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1493": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1495": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1496": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1497": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1498": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "POP",
      "path": "20"
    },
    "1499": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "GAS",
      "path": "20"
    },
    "1500": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "CALL",
      "path": "20"
    },
    "1501": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1502": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1503": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1504": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5ED"
    },
    "1507": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1508": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1509": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1511": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1512": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "1513": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1514": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1516": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1517": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1518": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "POP",
      "path": "20"
    },
    "1519": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "POP",
      "path": "20"
    },
    "1520": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "POP",
      "path": "20"
    },
    "1521": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "POP",
      "path": "20"
    },
    "1522": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1524": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1525": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1526": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "1528": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "NOT",
      "path": "20"
    },
    "1529": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "1531": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1532": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ADD",
      "path": "20"
    },
    "1533": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "AND",
      "path": "20"
    },
    "1534": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1535": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ADD",
      "path": "20"
    },
    "1536": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1537": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1539": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1540": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "POP",
      "path": "20"
    },
    "1541": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1542": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "ADD",
      "path": "20"
    },
    "1543": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1544": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x611"
    },
    "1547": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1548": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1549": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13CA"
    },
    "1552": {
      "fn": "Penny.withdraw",
      "jump": "i",
      "offset": [
        2622,
        2679
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1553": {
      "fn": "Penny.withdraw",
      "offset": [
        2622,
        2679
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "fn": "Penny.withdraw",
      "offset": [
        2689,
        2739
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 22,
      "value": "0x624"
    },
    "1558": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1559": {
      "fn": "Penny.withdraw",
      "offset": [
        2709,
        2738
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x61F"
    },
    "1562": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1563": {
      "fn": "Penny.withdraw",
      "offset": [
        2725,
        2737
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217"
    },
    "1566": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1567": {
      "fn": "Penny.withdraw",
      "offset": [
        2709,
        2738
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1568": {
      "fn": "Penny.withdraw",
      "offset": [
        2689,
        2694
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC08"
    },
    "1571": {
      "fn": "Penny.withdraw",
      "jump": "i",
      "offset": [
        2689,
        2739
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1572": {
      "fn": "Penny.withdraw",
      "offset": [
        2689,
        2739
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1573": {
      "op": "POP"
    },
    "1574": {
      "fn": "Penny.withdraw",
      "offset": [
        2756,
        2760
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 23,
      "value": "0x1"
    },
    "1576": {
      "fn": "Penny.withdraw",
      "offset": [
        2505,
        2767
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1577": {
      "fn": "Penny.withdraw",
      "jump": "o",
      "offset": [
        2505,
        2767
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1578": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1579": {
      "fn": "Penny.vote",
      "offset": [
        3781,
        3785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1581": {
      "fn": "Penny.vote",
      "offset": [
        3835,
        3836
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 24
    },
    "1582": {
      "fn": "Penny.vote",
      "offset": [
        3805,
        3832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x637"
    },
    "1585": {
      "fn": "Penny.vote",
      "offset": [
        3805,
        3823
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1587": {
      "fn": "Penny.vote",
      "offset": [
        3805,
        3830
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA0F"
    },
    "1590": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3805,
        3832
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1591": {
      "fn": "Penny.vote",
      "offset": [
        3805,
        3832
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1592": {
      "branch": 90,
      "fn": "Penny.vote",
      "offset": [
        3805,
        3836
      ],
      "op": "GT",
      "path": "20"
    },
    "1593": {
      "fn": "Penny.vote",
      "offset": [
        3797,
        3837
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x641"
    },
    "1596": {
      "branch": 90,
      "fn": "Penny.vote",
      "offset": [
        3797,
        3837
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1597": {
      "fn": "Penny.vote",
      "offset": [
        3797,
        3837
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1599": {
      "fn": "Penny.vote",
      "offset": [
        3797,
        3837
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1600": {
      "fn": "Penny.vote",
      "offset": [
        3797,
        3837
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1601": {
      "fn": "Penny.vote",
      "offset": [
        3797,
        3837
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1602": {
      "fn": "Penny.vote",
      "offset": [
        3890,
        3916
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1604": {
      "fn": "Penny.vote",
      "offset": [
        3919,
        3933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x64B"
    },
    "1607": {
      "fn": "Penny.vote",
      "offset": [
        3919,
        3931
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x880"
    },
    "1610": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3919,
        3933
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1611": {
      "fn": "Penny.vote",
      "offset": [
        3919,
        3933
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1612": {
      "fn": "Penny.vote",
      "offset": [
        3890,
        3933
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "fn": "Penny.vote",
      "offset": [
        3984,
        3985
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 25,
      "value": "0x0"
    },
    "1616": {
      "fn": "Penny.vote",
      "offset": [
        3951,
        3980
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x658"
    },
    "1619": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1620": {
      "fn": "Penny.vote",
      "offset": [
        3967,
        3979
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217"
    },
    "1623": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1624": {
      "fn": "Penny.vote",
      "offset": [
        3951,
        3980
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1625": {
      "fn": "Penny.vote",
      "offset": [
        3951,
        3985
      ],
      "op": "LT",
      "path": "20"
    },
    "1626": {
      "branch": 91,
      "fn": "Penny.vote",
      "offset": [
        3951,
        3985
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1627": {
      "fn": "Penny.vote",
      "offset": [
        3943,
        3986
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x663"
    },
    "1630": {
      "branch": 91,
      "fn": "Penny.vote",
      "offset": [
        3943,
        3986
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1631": {
      "fn": "Penny.vote",
      "offset": [
        3943,
        3986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1633": {
      "fn": "Penny.vote",
      "offset": [
        3943,
        3986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1634": {
      "fn": "Penny.vote",
      "offset": [
        3943,
        3986
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1635": {
      "fn": "Penny.vote",
      "offset": [
        3943,
        3986
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1636": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 26,
      "value": "0x0"
    },
    "1638": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1639": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1640": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1641": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4038
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1643": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1645": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1646": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1647": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1648": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1650": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1651": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1652": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4058
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1653": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1654": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1655": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1656": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1658": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4066
      ],
      "op": "ADD",
      "path": "20"
    },
    "1659": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1660": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1661": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1662": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1663": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1664": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1665": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1667": {
      "fn": "Penny.vote",
      "offset": [
        4033,
        4080
      ],
      "op": "AND",
      "path": "20"
    },
    "1668": {
      "branch": 92,
      "fn": "Penny.vote",
      "offset": [
        4032,
        4080
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1669": {
      "fn": "Penny.vote",
      "offset": [
        4024,
        4081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x68D"
    },
    "1672": {
      "branch": 92,
      "fn": "Penny.vote",
      "offset": [
        4024,
        4081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1673": {
      "fn": "Penny.vote",
      "offset": [
        4024,
        4081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1675": {
      "fn": "Penny.vote",
      "offset": [
        4024,
        4081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1676": {
      "fn": "Penny.vote",
      "offset": [
        4024,
        4081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1677": {
      "fn": "Penny.vote",
      "offset": [
        4024,
        4081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1678": {
      "fn": "Penny.vote",
      "offset": [
        4139,
        4157
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 27,
      "value": "0xB"
    },
    "1680": {
      "fn": "Penny.vote",
      "offset": [
        4139,
        4157
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1681": {
      "fn": "Penny.vote",
      "offset": [
        4139,
        4167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x69D"
    },
    "1684": {
      "fn": "Penny.vote",
      "offset": [
        4139,
        4167
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1685": {
      "fn": "Penny.vote",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH3",
      "path": "20",
      "value": "0x278D00"
    },
    "1689": {
      "fn": "Penny.vote",
      "offset": [
        4139,
        4167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x144D"
    },
    "1692": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        4139,
        4167
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1693": {
      "fn": "Penny.vote",
      "offset": [
        4139,
        4167
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1694": {
      "fn": "Penny.vote",
      "offset": [
        4121,
        4136
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "1695": {
      "branch": 93,
      "fn": "Penny.vote",
      "offset": [
        4121,
        4167
      ],
      "op": "LT",
      "path": "20"
    },
    "1696": {
      "fn": "Penny.vote",
      "offset": [
        4113,
        4168
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6A8"
    },
    "1699": {
      "branch": 93,
      "fn": "Penny.vote",
      "offset": [
        4113,
        4168
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1700": {
      "fn": "Penny.vote",
      "offset": [
        4113,
        4168
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1702": {
      "fn": "Penny.vote",
      "offset": [
        4113,
        4168
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1703": {
      "fn": "Penny.vote",
      "offset": [
        4113,
        4168
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1704": {
      "fn": "Penny.vote",
      "offset": [
        4113,
        4168
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1705": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 28,
      "value": "0x0"
    },
    "1707": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1708": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1709": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1710": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4205
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1712": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1714": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1715": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1716": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1717": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1719": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1720": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1721": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4225
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1722": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1723": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4247
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1724": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4247
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1725": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4233
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1727": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4233
      ],
      "op": "ADD",
      "path": "20"
    },
    "1728": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4247
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1729": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4247
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1730": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4247
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1731": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4247
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1732": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4247
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1733": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4254
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1734": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4254
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1737": {
      "op": "NOT"
    },
    "1738": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4254
      ],
      "op": "AND",
      "path": "20"
    },
    "1739": {
      "fn": "Penny.vote",
      "offset": [
        4250,
        4254
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1741": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4254
      ],
      "op": "OR",
      "path": "20"
    },
    "1742": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4254
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1743": {
      "fn": "Penny.vote",
      "offset": [
        4200,
        4254
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1744": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1745": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1746": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x707"
    },
    "1749": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1750": {
      "fn": "Penny.vote",
      "offset": [
        4331,
        4390
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 29,
      "value": "0x6DE"
    },
    "1753": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1754": {
      "fn": "Penny.vote",
      "offset": [
        4364,
        4376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217"
    },
    "1757": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1758": {
      "fn": "Penny.vote",
      "offset": [
        4331,
        4390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1759": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1761": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1762": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1763": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1764": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4297
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1766": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1768": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1769": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1771": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1772": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1773": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1774": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1775": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1776": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1777": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4317
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1778": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6FC"
    },
    "1781": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1782": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1783": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1784": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x144D"
    },
    "1787": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        4292,
        4390
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1788": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1789": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1790": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1791": {
      "fn": "Penny.vote",
      "offset": [
        4292,
        4390
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x737"
    },
    "1796": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1799": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1800": {
      "fn": "Penny.vote",
      "offset": [
        4460,
        4519
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 30,
      "value": "0x710"
    },
    "1803": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1804": {
      "fn": "Penny.vote",
      "offset": [
        4493,
        4505
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217"
    },
    "1807": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1808": {
      "fn": "Penny.vote",
      "offset": [
        4460,
        4519
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1809": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1811": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1812": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1813": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1814": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4426
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1816": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1818": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1819": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1821": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1822": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1823": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4456
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1825": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4456
      ],
      "op": "ADD",
      "path": "20"
    },
    "1826": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1827": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1828": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4456
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1829": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4456
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1830": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4446
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1831": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x731"
    },
    "1834": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1835": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1836": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1837": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x144D"
    },
    "1840": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        4421,
        4519
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1841": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1842": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1843": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1844": {
      "fn": "Penny.vote",
      "offset": [
        4421,
        4519
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "POP"
    },
    "1847": {
      "fn": "Penny.vote",
      "offset": [
        4264,
        4530
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1848": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 31,
      "value": "0x40"
    },
    "1850": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1851": {
      "op": "DUP4"
    },
    "1852": {
      "op": "ISZERO"
    },
    "1853": {
      "op": "ISZERO"
    },
    "1854": {
      "op": "DUP2"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1857": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1858": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xAFEC2BED15137B132CE27A59DD2AE3284DAD307738D7CDB82797CA380902BF6E"
    },
    "1891": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1897": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1898": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1899": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1900": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "SUB",
      "path": "20"
    },
    "1901": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1902": {
      "fn": "Penny.vote",
      "offset": [
        4544,
        4580
      ],
      "op": "LOG2",
      "path": "20"
    },
    "1903": {
      "op": "POP"
    },
    "1904": {
      "fn": "Penny.vote",
      "offset": [
        4597,
        4601
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 32,
      "value": "0x1"
    },
    "1906": {
      "fn": "Penny.vote",
      "offset": [
        4597,
        4601
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1907": {
      "fn": "Penny.vote",
      "offset": [
        3734,
        4608
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1908": {
      "op": "POP"
    },
    "1909": {
      "op": "POP"
    },
    "1910": {
      "fn": "Penny.vote",
      "jump": "o",
      "offset": [
        3734,
        4608
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1911": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1912": {
      "fn": "ERC20.symbol",
      "offset": [
        2344,
        2357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1914": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2383
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x4"
    },
    "1916": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1917": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1918": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x340"
    },
    "1921": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1922": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C7"
    },
    "1925": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2369,
        2383
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1926": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1927": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1928": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6408,
        6412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1932": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1935": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1937": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1938": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1939": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1940": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1942": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1943": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1944": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "op": "SUB"
    },
    "1953": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1954": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "AND",
      "path": "1"
    },
    "1955": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1956": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1957": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1958": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1959": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1960": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1961": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1962": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1963": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 34
    },
    "1964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1965": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "LT",
      "path": "1"
    },
    "1966": {
      "branch": 102,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1967": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x808"
    },
    "1970": {
      "branch": 102,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1982": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1985": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1987": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1988": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "ADD",
      "path": "1"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1994": {
      "op": "DUP3"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2032": {
      "op": "DUP3"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "MSTORE"
    },
    "2035": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2043": {
      "op": "SHL"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2046": {
      "op": "DUP3"
    },
    "2047": {
      "op": "ADD"
    },
    "2048": {
      "op": "MSTORE"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2051": {
      "op": "ADD"
    },
    "2052": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "2055": {
      "op": "JUMP"
    },
    "2056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6590,
        6657
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0x817"
    },
    "2060": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6613,
        6620
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6622,
        6656
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x513"
    },
    "2065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6641,
        6656
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6622,
        6638
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2067": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6622,
        6656
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1484"
    },
    "2070": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6622,
        6656
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6590,
        6657
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6679
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x1"
    },
    "2075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6679
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2076": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2077": {
      "op": "POP"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2081": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2082": {
      "fn": "ERC20.transfer",
      "offset": [
        3743,
        3747
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2084": {
      "fn": "ERC20.transfer",
      "offset": [
        3759,
        3801
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 37,
      "value": "0x3D0"
    },
    "2087": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2088": {
      "fn": "ERC20.transfer",
      "offset": [
        3783,
        3792
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2089": {
      "fn": "ERC20.transfer",
      "offset": [
        3794,
        3800
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2090": {
      "fn": "ERC20.transfer",
      "offset": [
        3759,
        3768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA25"
    },
    "2093": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3759,
        3801
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2094": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2095": {
      "fn": "Penny.deposit",
      "offset": [
        2093,
        2097
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2097": {
      "fn": "Penny.deposit",
      "offset": [
        2109,
        2167
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 38,
      "value": "0x848"
    },
    "2100": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2101": {
      "fn": "Penny.deposit",
      "offset": [
        2109,
        2112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2103": {
      "fn": "Penny.deposit",
      "offset": [
        2109,
        2112
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "SUB"
    },
    "2112": {
      "fn": "Penny.deposit",
      "offset": [
        2109,
        2112
      ],
      "op": "AND",
      "path": "20"
    },
    "2113": {
      "fn": "Penny.deposit",
      "offset": [
        2109,
        2112
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2114": {
      "fn": "Penny.deposit",
      "offset": [
        2152,
        2156
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2115": {
      "fn": "Penny.deposit",
      "offset": [
        2159,
        2166
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2116": {
      "fn": "Penny.deposit",
      "offset": [
        2109,
        2129
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD63"
    },
    "2119": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2109,
        2167
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2120": {
      "fn": "Penny.deposit",
      "offset": [
        2109,
        2167
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2121": {
      "fn": "Penny.deposit",
      "offset": [
        2177,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 39,
      "value": "0x85C"
    },
    "2124": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2125": {
      "fn": "Penny.deposit",
      "offset": [
        2197,
        2210
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x857"
    },
    "2128": {
      "fn": "Penny.deposit",
      "offset": [
        2197,
        2204
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2129": {
      "fn": "Penny.deposit",
      "offset": [
        2207,
        2210
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2131": {
      "fn": "Penny.deposit",
      "offset": [
        2197,
        2210
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1465"
    },
    "2134": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2197,
        2210
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2135": {
      "fn": "Penny.deposit",
      "offset": [
        2197,
        2210
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2136": {
      "fn": "Penny.deposit",
      "offset": [
        2177,
        2182
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDC3"
    },
    "2139": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2177,
        2211
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2140": {
      "fn": "Penny.deposit",
      "offset": [
        2177,
        2211
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2141": {
      "fn": "Penny.deposit",
      "offset": [
        2249,
        2274
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 40,
      "value": "0x868"
    },
    "2144": {
      "fn": "Penny.deposit",
      "offset": [
        2249,
        2264
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "2145": {
      "fn": "Penny.deposit",
      "offset": [
        2267,
        2274
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x384"
    },
    "2148": {
      "fn": "Penny.deposit",
      "offset": [
        2249,
        2274
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x144D"
    },
    "2151": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2249,
        2274
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2152": {
      "fn": "Penny.deposit",
      "offset": [
        2249,
        2274
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2153": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2154": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2156": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2157": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2158": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2159": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2161": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2163": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2164": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2166": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2167": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2246
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2168": {
      "fn": "Penny.deposit",
      "offset": [
        2221,
        2274
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "fn": "Penny.deposit",
      "offset": [
        2291,
        2295
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 41,
      "value": "0x1"
    },
    "2172": {
      "fn": "Penny.deposit",
      "offset": [
        2291,
        2295
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2173": {
      "fn": "Penny.deposit",
      "offset": [
        2041,
        2302
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "fn": "Penny.deposit",
      "jump": "o",
      "offset": [
        2041,
        2302
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2176": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3541,
        3728
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2177": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3586,
        3593
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2179": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3643,
        3644
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 42
    },
    "2180": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3613,
        3640
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x88D"
    },
    "2183": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3613,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2185": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3613,
        3638
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA0F"
    },
    "2188": {
      "fn": "Penny.getUpForVote",
      "jump": "i",
      "offset": [
        3613,
        3640
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2189": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3613,
        3640
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2190": {
      "branch": 94,
      "fn": "Penny.getUpForVote",
      "offset": [
        3613,
        3644
      ],
      "op": "GT",
      "path": "20"
    },
    "2191": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3605,
        3645
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x897"
    },
    "2194": {
      "branch": 94,
      "fn": "Penny.getUpForVote",
      "offset": [
        3605,
        3645
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2195": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3605,
        3645
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2197": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3605,
        3645
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2198": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3605,
        3645
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2199": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3605,
        3645
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2200": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3697,
        3721
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 43,
      "value": "0x8A3"
    },
    "2203": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3697,
        3715
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2205": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3719,
        3720
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2207": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3697,
        3718
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEAE"
    },
    "2210": {
      "fn": "Penny.getUpForVote",
      "jump": "i",
      "offset": [
        3697,
        3721
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2211": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3697,
        3721
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2212": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3690,
        3721
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2213": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3690,
        3721
      ],
      "op": "POP",
      "path": "20"
    },
    "2214": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3541,
        3728
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2215": {
      "fn": "Penny.getUpForVote",
      "jump": "o",
      "offset": [
        3541,
        3728
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2216": {
      "fn": "Penny.setApplications",
      "offset": [
        4614,
        4781
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2217": {
      "fn": "Penny.setApplications",
      "offset": [
        4716,
        4721
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 44,
      "value": "0xC"
    },
    "2219": {
      "fn": "Penny.setApplications",
      "offset": [
        4716,
        4721
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "fn": "Penny.setApplications",
      "offset": [
        4716,
        4721
      ],
      "op": "AND",
      "path": "20"
    },
    "2229": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "fn": "Penny.setApplications",
      "offset": [
        4700,
        4721
      ],
      "op": "AND",
      "path": "20"
    },
    "2239": {
      "branch": 95,
      "fn": "Penny.setApplications",
      "offset": [
        4700,
        4721
      ],
      "op": "EQ",
      "path": "20"
    },
    "2240": {
      "fn": "Penny.setApplications",
      "offset": [
        4692,
        4722
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C8"
    },
    "2243": {
      "branch": 95,
      "fn": "Penny.setApplications",
      "offset": [
        4692,
        4722
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2244": {
      "fn": "Penny.setApplications",
      "offset": [
        4692,
        4722
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2246": {
      "fn": "Penny.setApplications",
      "offset": [
        4692,
        4722
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2247": {
      "fn": "Penny.setApplications",
      "offset": [
        4692,
        4722
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2248": {
      "fn": "Penny.setApplications",
      "offset": [
        4692,
        4722
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2249": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4752
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 45,
      "value": "0x7"
    },
    "2251": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2252": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "op": "SUB"
    },
    "2261": {
      "op": "NOT"
    },
    "2262": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "AND",
      "path": "20"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2272": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2273": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2274": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "AND",
      "path": "20"
    },
    "2275": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2276": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2277": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2278": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "OR",
      "path": "20"
    },
    "2279": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2280": {
      "fn": "Penny.setApplications",
      "offset": [
        4732,
        4774
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "2281": {
      "fn": "Penny.setApplications",
      "jump": "o",
      "offset": [
        4614,
        4781
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2282": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2289": {
      "op": "SHL"
    },
    "2290": {
      "op": "SUB"
    },
    "2291": {
      "fn": "ERC20._approve",
      "offset": [
        9680,
        9699
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 46
    },
    "2292": {
      "branch": 103,
      "fn": "ERC20._approve",
      "offset": [
        9680,
        9699
      ],
      "op": "AND",
      "path": "1"
    },
    "2293": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x94C"
    },
    "2296": {
      "branch": 103,
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2297": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2299": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2306": {
      "op": "SHL"
    },
    "2307": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2308": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2311": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2313": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2314": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "ADD",
      "path": "1"
    },
    "2315": {
      "op": "MSTORE"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2318": {
      "op": "DUP1"
    },
    "2319": {
      "op": "DUP3"
    },
    "2320": {
      "op": "ADD"
    },
    "2321": {
      "op": "MSTORE"
    },
    "2322": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2357": {
      "op": "DUP3"
    },
    "2358": {
      "op": "ADD"
    },
    "2359": {
      "op": "MSTORE"
    },
    "2360": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2370": {
      "op": "DUP3"
    },
    "2371": {
      "op": "ADD"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "2379": {
      "op": "JUMP"
    },
    "2380": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "op": "SUB"
    },
    "2389": {
      "fn": "ERC20._approve",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 47
    },
    "2390": {
      "branch": 104,
      "fn": "ERC20._approve",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "1"
    },
    "2391": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AD"
    },
    "2394": {
      "branch": 104,
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2395": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2397": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2406": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2411": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2412": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "ADD",
      "path": "1"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2418": {
      "op": "DUP3"
    },
    "2419": {
      "op": "ADD"
    },
    "2420": {
      "op": "MSTORE"
    },
    "2421": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2456": {
      "op": "DUP3"
    },
    "2457": {
      "op": "ADD"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2464": {
      "op": "SHL"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2467": {
      "op": "DUP3"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "op": "MSTORE"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2472": {
      "op": "ADD"
    },
    "2473": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "2476": {
      "op": "JUMP"
    },
    "2477": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "op": "SUB"
    },
    "2486": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 48
    },
    "2487": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2488": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "AND",
      "path": "1"
    },
    "2489": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2491": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2492": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2493": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2494": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2496": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2498": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2499": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2500": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2501": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2503": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2504": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2505": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2506": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2507": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2508": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "AND",
      "path": "1"
    },
    "2509": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2510": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2511": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2512": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2513": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2514": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2515": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2516": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2517": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2518": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2519": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9865
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2520": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2521": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9865
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2522": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 49
    },
    "2523": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2524": {
      "op": "DUP5"
    },
    "2525": {
      "op": "DUP2"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2560": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2561": {
      "op": "ADD"
    },
    "2562": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2563": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2565": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2566": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2567": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2568": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SUB",
      "path": "1"
    },
    "2569": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2570": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2571": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "POP",
      "path": "1"
    },
    "2572": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "POP",
      "path": "1"
    },
    "2573": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "POP",
      "path": "1"
    },
    "2574": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9579,
        9919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2575": {
      "fn": "EnumerableSet.length",
      "offset": [
        8807,
        8919
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2576": {
      "fn": "EnumerableSet.length",
      "offset": [
        8867,
        8874
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2578": {
      "fn": "EnumerableSet.length",
      "offset": [
        8893,
        8912
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 50,
      "value": "0x3D4"
    },
    "2581": {
      "fn": "EnumerableSet.length",
      "offset": [
        8901,
        8904
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2582": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SLOAD",
      "path": "18",
      "statement": 51
    },
    "2583": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2584": {
      "fn": "EnumerableSet._length",
      "offset": [
        4014,
        4121
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2585": {
      "fn": "EnumerableSet.add",
      "offset": [
        8069,
        8198
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2586": {
      "fn": "EnumerableSet.add",
      "offset": [
        8136,
        8140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2588": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8191
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 52,
      "value": "0x51E"
    },
    "2591": {
      "fn": "EnumerableSet.add",
      "offset": [
        8164,
        8167
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2592": {
      "fn": "EnumerableSet.add",
      "offset": [
        8184,
        8189
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2593": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8163
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEBA"
    },
    "2596": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8159,
        8191
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2597": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2604": {
      "op": "SHL"
    },
    "2605": {
      "op": "SUB"
    },
    "2606": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7285
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 53
    },
    "2607": {
      "branch": 105,
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7285
      ],
      "op": "AND",
      "path": "1"
    },
    "2608": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA89"
    },
    "2611": {
      "branch": 105,
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2612": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2614": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2623": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2626": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2628": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2629": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "ADD",
      "path": "1"
    },
    "2630": {
      "op": "MSTORE"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2635": {
      "op": "DUP3"
    },
    "2636": {
      "op": "ADD"
    },
    "2637": {
      "op": "MSTORE"
    },
    "2638": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2673": {
      "op": "DUP3"
    },
    "2674": {
      "op": "ADD"
    },
    "2675": {
      "op": "MSTORE"
    },
    "2676": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2687": {
      "op": "DUP3"
    },
    "2688": {
      "op": "ADD"
    },
    "2689": {
      "op": "MSTORE"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2692": {
      "op": "ADD"
    },
    "2693": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "2696": {
      "op": "JUMP"
    },
    "2697": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "op": "SUB"
    },
    "2706": {
      "fn": "ERC20._transfer",
      "offset": [
        7345,
        7368
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 54
    },
    "2707": {
      "branch": 106,
      "fn": "ERC20._transfer",
      "offset": [
        7345,
        7368
      ],
      "op": "AND",
      "path": "1"
    },
    "2708": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAEB"
    },
    "2711": {
      "branch": 106,
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2712": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2714": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2723": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2726": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2728": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2729": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "ADD",
      "path": "1"
    },
    "2730": {
      "op": "MSTORE"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2735": {
      "op": "DUP3"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2773": {
      "op": "DUP3"
    },
    "2774": {
      "op": "ADD"
    },
    "2775": {
      "op": "MSTORE"
    },
    "2776": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2785": {
      "op": "DUP3"
    },
    "2786": {
      "op": "ADD"
    },
    "2787": {
      "op": "MSTORE"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "2794": {
      "op": "JUMP"
    },
    "2795": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2796": {
      "fn": "ERC20._transfer",
      "offset": [
        7419,
        7466
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 55,
      "value": "0xAF6"
    },
    "2799": {
      "fn": "ERC20._transfer",
      "offset": [
        7440,
        7446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2800": {
      "fn": "ERC20._transfer",
      "offset": [
        7448,
        7457
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2801": {
      "fn": "ERC20._transfer",
      "offset": [
        7459,
        7465
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2802": {
      "fn": "ERC20._transfer",
      "offset": [
        7419,
        7439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF09"
    },
    "2805": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7419,
        7466
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2806": {
      "fn": "ERC20._transfer",
      "offset": [
        7419,
        7466
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "op": "SUB"
    },
    "2815": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2816": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "AND",
      "path": "1"
    },
    "2817": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2819": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2820": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2821": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2822": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2824": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2825": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2826": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2827": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2829": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2830": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2831": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2832": {
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 56
    },
    "2833": {
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2834": {
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "LT",
      "path": "1"
    },
    "2835": {
      "branch": 107,
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2836": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6E"
    },
    "2839": {
      "branch": 107,
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2840": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2842": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2849": {
      "op": "SHL"
    },
    "2850": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2851": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2854": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2856": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2857": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "ADD",
      "path": "1"
    },
    "2858": {
      "op": "MSTORE"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2863": {
      "op": "DUP3"
    },
    "2864": {
      "op": "ADD"
    },
    "2865": {
      "op": "MSTORE"
    },
    "2866": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2916": {
      "op": "DUP3"
    },
    "2917": {
      "op": "ADD"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2921": {
      "op": "ADD"
    },
    "2922": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "2925": {
      "op": "JUMP"
    },
    "2926": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2927": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7654
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 57,
      "value": "0xB78"
    },
    "2930": {
      "fn": "ERC20._transfer",
      "offset": [
        7648,
        7654
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2931": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2932": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1484"
    },
    "2935": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7632,
        7654
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2936": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7654
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2946": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2947": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "AND",
      "path": "1"
    },
    "2948": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2950": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2951": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2952": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2953": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2955": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2956": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2957": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2958": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2960": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2961": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2962": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2963": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2964": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2965": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2966": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2967": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 58
    },
    "2968": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2969": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "AND",
      "path": "1"
    },
    "2970": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2971": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2972": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2973": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2974": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2975": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2976": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2977": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2978": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2979": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2980": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAE"
    },
    "2983": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2984": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2985": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2986": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144D"
    },
    "2989": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7664,
        7694
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2990": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2991": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2992": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "POP",
      "path": "1"
    },
    "2993": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "POP",
      "path": "1"
    },
    "2994": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2995": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2996": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2997": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "POP",
      "path": "1"
    },
    "2998": {
      "fn": "ERC20._transfer",
      "offset": [
        7727,
        7736
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 59
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3005": {
      "op": "SHL"
    },
    "3006": {
      "op": "SUB"
    },
    "3007": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "AND",
      "path": "1"
    },
    "3008": {
      "fn": "ERC20._transfer",
      "offset": [
        7719,
        7725
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "op": "SUB"
    },
    "3017": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "AND",
      "path": "1"
    },
    "3018": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3051": {
      "fn": "ERC20._transfer",
      "offset": [
        7738,
        7744
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3052": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3054": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3055": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFA"
    },
    "3058": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3059": {
      "op": "DUP2"
    },
    "3060": {
      "op": "MSTORE"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3063": {
      "op": "ADD"
    },
    "3064": {
      "op": "SWAP1"
    },
    "3065": {
      "op": "JUMP"
    },
    "3066": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3067": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3069": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3070": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3071": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3072": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SUB",
      "path": "1"
    },
    "3073": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3074": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3075": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3076": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3077": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3078": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3079": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7160,
        7752
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3080": {
      "fn": "ERC20._burn",
      "offset": [
        8673,
        9156
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3087": {
      "op": "SHL"
    },
    "3088": {
      "op": "SUB"
    },
    "3089": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8777
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 60
    },
    "3090": {
      "branch": 108,
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8777
      ],
      "op": "AND",
      "path": "1"
    },
    "3091": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC68"
    },
    "3094": {
      "branch": 108,
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3095": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3097": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3098": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3106": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3109": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3111": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3112": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "ADD",
      "path": "1"
    },
    "3113": {
      "op": "MSTORE"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3118": {
      "op": "DUP3"
    },
    "3119": {
      "op": "ADD"
    },
    "3120": {
      "op": "MSTORE"
    },
    "3121": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3156": {
      "op": "DUP3"
    },
    "3157": {
      "op": "ADD"
    },
    "3158": {
      "op": "MSTORE"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3163": {
      "op": "SHL"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "3175": {
      "op": "JUMP"
    },
    "3176": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3177": {
      "fn": "ERC20._burn",
      "offset": [
        8826,
        8875
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 61,
      "value": "0xC74"
    },
    "3180": {
      "fn": "ERC20._burn",
      "offset": [
        8847,
        8854
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3181": {
      "fn": "ERC20._burn",
      "offset": [
        8864,
        8865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3183": {
      "fn": "ERC20._burn",
      "offset": [
        8868,
        8874
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3184": {
      "fn": "ERC20._burn",
      "offset": [
        8826,
        8846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF09"
    },
    "3187": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8826,
        8875
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3188": {
      "fn": "ERC20._burn",
      "offset": [
        8826,
        8875
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3195": {
      "op": "SHL"
    },
    "3196": {
      "op": "SUB"
    },
    "3197": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3198": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "AND",
      "path": "1"
    },
    "3199": {
      "fn": "ERC20._burn",
      "offset": [
        8886,
        8908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3201": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3202": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3203": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3204": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3206": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3207": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3208": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3209": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3211": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3212": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3213": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3214": {
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 62
    },
    "3215": {
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3216": {
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "LT",
      "path": "1"
    },
    "3217": {
      "branch": 109,
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3218": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE8"
    },
    "3221": {
      "branch": 109,
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3222": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3224": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3233": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3236": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3238": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3239": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "ADD",
      "path": "1"
    },
    "3240": {
      "op": "MSTORE"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3245": {
      "op": "DUP3"
    },
    "3246": {
      "op": "ADD"
    },
    "3247": {
      "op": "MSTORE"
    },
    "3248": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3283": {
      "op": "DUP3"
    },
    "3284": {
      "op": "ADD"
    },
    "3285": {
      "op": "MSTORE"
    },
    "3286": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3291": {
      "op": "SHL"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3294": {
      "op": "DUP3"
    },
    "3295": {
      "op": "ADD"
    },
    "3296": {
      "op": "MSTORE"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "3303": {
      "op": "JUMP"
    },
    "3304": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3305": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9064
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 63,
      "value": "0xCF2"
    },
    "3308": {
      "fn": "ERC20._burn",
      "offset": [
        9058,
        9064
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3309": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9055
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3310": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9064
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1484"
    },
    "3313": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9041,
        9064
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3314": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9064
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3321": {
      "op": "SHL"
    },
    "3322": {
      "op": "SUB"
    },
    "3323": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3324": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "AND",
      "path": "1"
    },
    "3325": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9029
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3327": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3328": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3329": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3330": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3332": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3333": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3334": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3335": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3337": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3338": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3339": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3340": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3341": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3342": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3343": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9086
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 64,
      "value": "0x2"
    },
    "3345": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3346": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3347": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3348": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3349": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3350": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD20"
    },
    "3353": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3354": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3355": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3356": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1484"
    },
    "3359": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9074,
        9096
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3360": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3361": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3362": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3363": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3364": {
      "op": "POP"
    },
    "3365": {
      "op": "POP"
    },
    "3366": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 65,
      "value": "0x40"
    },
    "3368": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3369": {
      "op": "DUP3"
    },
    "3370": {
      "op": "DUP2"
    },
    "3371": {
      "op": "MSTORE"
    },
    "3372": {
      "fn": "ERC20._burn",
      "offset": [
        9138,
        9139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3374": {
      "fn": "ERC20._burn",
      "offset": [
        9138,
        9139
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3381": {
      "op": "SHL"
    },
    "3382": {
      "op": "SUB"
    },
    "3383": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3384": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "AND",
      "path": "1"
    },
    "3385": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3386": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3419": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA02"
    },
    "3426": {
      "op": "JUMP"
    },
    "3427": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3428": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 66,
      "value": "0x40"
    },
    "3430": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3431": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3438": {
      "op": "SHL"
    },
    "3439": {
      "op": "SUB"
    },
    "3440": {
      "op": "DUP6"
    },
    "3441": {
      "op": "DUP2"
    },
    "3442": {
      "op": "AND"
    },
    "3443": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "3445": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3446": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "4"
    },
    "3447": {
      "op": "MSTORE"
    },
    "3448": {
      "op": "DUP5"
    },
    "3449": {
      "op": "AND"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3452": {
      "op": "DUP3"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "MSTORE"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3457": {
      "op": "DUP1"
    },
    "3458": {
      "op": "DUP3"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "DUP5"
    },
    "3461": {
      "op": "SWAP1"
    },
    "3462": {
      "op": "MSTORE"
    },
    "3463": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3464": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3465": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3466": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3467": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SUB",
      "path": "4"
    },
    "3468": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3469": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3470": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "4"
    },
    "3471": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3472": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3475": {
      "op": "SWAP1"
    },
    "3476": {
      "op": "SWAP2"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3479": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3480": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3481": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3483": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3484": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "4"
    },
    "3485": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3486": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3493": {
      "op": "SHL"
    },
    "3494": {
      "op": "SUB"
    },
    "3495": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "AND",
      "path": "4"
    },
    "3496": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "OR",
      "path": "4"
    },
    "3505": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3506": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3507": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDBD"
    },
    "3510": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3511": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3512": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3513": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        934
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF38"
    },
    "3516": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        915,
        1011
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3517": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3518": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3519": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3520": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3521": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3522": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        815,
        1018
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3523": {
      "fn": "ERC20._mint",
      "offset": [
        8023,
        8353
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "op": "SUB"
    },
    "3532": {
      "fn": "ERC20._mint",
      "offset": [
        8106,
        8127
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 67
    },
    "3533": {
      "branch": 110,
      "fn": "ERC20._mint",
      "offset": [
        8106,
        8127
      ],
      "op": "AND",
      "path": "1"
    },
    "3534": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE19"
    },
    "3537": {
      "branch": 110,
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3538": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3540": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3541": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3547": {
      "op": "SHL"
    },
    "3548": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3549": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3552": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3554": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3555": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "ADD",
      "path": "1"
    },
    "3556": {
      "op": "MSTORE"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3561": {
      "op": "DUP3"
    },
    "3562": {
      "op": "ADD"
    },
    "3563": {
      "op": "MSTORE"
    },
    "3564": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3599": {
      "op": "DUP3"
    },
    "3600": {
      "op": "ADD"
    },
    "3601": {
      "op": "MSTORE"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FB"
    },
    "3608": {
      "op": "JUMP"
    },
    "3609": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3610": {
      "fn": "ERC20._mint",
      "offset": [
        8174,
        8223
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 68,
      "value": "0xE25"
    },
    "3613": {
      "fn": "ERC20._mint",
      "offset": [
        8203,
        8204
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3615": {
      "fn": "ERC20._mint",
      "offset": [
        8207,
        8214
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3616": {
      "fn": "ERC20._mint",
      "offset": [
        8216,
        8222
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3617": {
      "fn": "ERC20._mint",
      "offset": [
        8174,
        8194
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF09"
    },
    "3620": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8174,
        8223
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3621": {
      "fn": "ERC20._mint",
      "offset": [
        8174,
        8223
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3622": {
      "fn": "ERC20._mint",
      "offset": [
        8250,
        8256
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 69
    },
    "3623": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3625": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3627": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3628": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3629": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3630": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE37"
    },
    "3633": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3634": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3635": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144D"
    },
    "3638": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8234,
        8256
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3639": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3640": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3641": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3642": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "op": "POP"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "op": "SUB"
    },
    "3653": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 70
    },
    "3654": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "AND",
      "path": "1"
    },
    "3655": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8275
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3657": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3658": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3659": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3660": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3662": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3663": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3664": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3665": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3667": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3668": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3669": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3670": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3671": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3672": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3673": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3674": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE64"
    },
    "3677": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3678": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3679": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3680": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144D"
    },
    "3683": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8266,
        8294
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3684": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3685": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3686": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3687": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3688": {
      "op": "POP"
    },
    "3689": {
      "op": "POP"
    },
    "3690": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 71,
      "value": "0x40"
    },
    "3692": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3693": {
      "op": "DUP2"
    },
    "3694": {
      "op": "DUP2"
    },
    "3695": {
      "op": "MSTORE"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3702": {
      "op": "SHL"
    },
    "3703": {
      "op": "SUB"
    },
    "3704": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3705": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "AND",
      "path": "1"
    },
    "3706": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3707": {
      "fn": "ERC20._mint",
      "offset": [
        8326,
        8327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3709": {
      "fn": "ERC20._mint",
      "offset": [
        8326,
        8327
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3710": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3743": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3749": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3750": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3751": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3752": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SUB",
      "path": "1"
    },
    "3753": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3754": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3755": {
      "fn": "ERC20._mint",
      "offset": [
        8023,
        8353
      ],
      "op": "POP",
      "path": "1"
    },
    "3756": {
      "fn": "ERC20._mint",
      "offset": [
        8023,
        8353
      ],
      "op": "POP",
      "path": "1"
    },
    "3757": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8023,
        8353
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3758": {
      "fn": "EnumerableSet.at",
      "offset": [
        9251,
        9386
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3759": {
      "fn": "EnumerableSet.at",
      "offset": [
        9322,
        9329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3761": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9378
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 72,
      "value": "0x51E"
    },
    "3764": {
      "fn": "EnumerableSet.at",
      "offset": [
        9360,
        9363
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3765": {
      "fn": "EnumerableSet.at",
      "offset": [
        9372,
        9377
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3766": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9359
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100A"
    },
    "3769": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9356,
        9378
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3770": {
      "fn": "EnumerableSet._add",
      "offset": [
        1632,
        2036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3771": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1699
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3773": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 73
    },
    "3774": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3775": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3776": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3778": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3779": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "ADD",
      "path": "18"
    },
    "3780": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3782": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3783": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3785": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3786": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3787": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3788": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF01"
    },
    "3791": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 74
    },
    "3794": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3795": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3797": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3798": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3799": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "18"
    },
    "3800": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3801": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3802": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3804": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3805": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3806": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3807": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3809": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3810": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3811": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3812": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3813": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3814": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "18"
    },
    "3815": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3816": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3817": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3818": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP5",
      "path": "18",
      "statement": 75
    },
    "3819": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3820": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3821": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3822": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3823": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3824": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3825": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "ADD",
      "path": "18"
    },
    "3826": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3827": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3828": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3829": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3831": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3832": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3833": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3834": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3835": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3836": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3837": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 76,
      "value": "0x3D4"
    },
    "3840": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3841": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3842": {
      "op": "POP"
    },
    "3843": {
      "fn": "EnumerableSet._add",
      "offset": [
        2014,
        2019
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 77,
      "value": "0x0"
    },
    "3845": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D4"
    },
    "3848": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3849": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5040,
        5321
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3856": {
      "op": "SHL"
    },
    "3857": {
      "op": "SUB"
    },
    "3858": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5199
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3859": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5199
      ],
      "op": "AND",
      "path": "20"
    },
    "3860": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5199
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3861": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5199
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3862": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5199
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3863": {
      "branch": 96,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5199
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3864": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5219
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF29"
    },
    "3867": {
      "branch": 96,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5219
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3868": {
      "op": "POP"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "SUB"
    },
    "3877": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5203,
        5219
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3878": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5203,
        5219
      ],
      "op": "AND",
      "path": "20"
    },
    "3879": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5203,
        5219
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3880": {
      "branch": 97,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5203,
        5219
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3881": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5181,
        5219
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3882": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5177,
        5229
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3883": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5177,
        5229
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF33"
    },
    "3886": {
      "branch": 97,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5177,
        5229
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3887": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5221,
        5229
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 78,
      "value": "0x0"
    },
    "3889": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5221,
        5229
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3890": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5221,
        5229
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3891": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5177,
        5229
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3892": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5040,
        5321
      ],
      "op": "POP",
      "path": "20"
    },
    "3893": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5040,
        5321
      ],
      "op": "POP",
      "path": "20"
    },
    "3894": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5040,
        5321
      ],
      "op": "POP",
      "path": "20"
    },
    "3895": {
      "fn": "Penny._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        5040,
        5321
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3896": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF8D"
    },
    "3902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3905": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "4"
    },
    "3910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3914": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3920": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "4"
    },
    "3921": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "4"
    },
    "3957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3964": {
      "op": "SHL"
    },
    "3965": {
      "op": "SUB"
    },
    "3966": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "4"
    },
    "3967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x109E"
    },
    "3970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "3979": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "4"
    },
    "3980": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3981": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3982": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3983": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3984": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3985": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3986": {
      "op": "POP"
    },
    "3987": {
      "branch": 112,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3988": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF33"
    },
    "3991": {
      "branch": 112,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 79
    },
    "3993": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3994": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "4"
    },
    "3997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3999": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4000": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "4"
    },
    "4001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4002": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFAB"
    },
    "4005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4006": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13CA"
    },
    "4010": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4011": {
      "branch": 113,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF33"
    },
    "4015": {
      "branch": 113,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4018": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4025": {
      "op": "SHL"
    },
    "4026": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4027": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4030": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4032": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4033": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "4"
    },
    "4034": {
      "op": "MSTORE"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4039": {
      "op": "DUP3"
    },
    "4040": {
      "op": "ADD"
    },
    "4041": {
      "op": "MSTORE"
    },
    "4042": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4077": {
      "op": "DUP3"
    },
    "4078": {
      "op": "ADD"
    },
    "4079": {
      "op": "MSTORE"
    },
    "4080": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4093": {
      "op": "SHL"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4096": {
      "op": "DUP3"
    },
    "4097": {
      "op": "ADD"
    },
    "4098": {
      "op": "MSTORE"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4101": {
      "op": "ADD"
    },
    "4102": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4FB"
    },
    "4105": {
      "op": "JUMP"
    },
    "4106": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4107": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 80
    },
    "4108": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4109": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4111": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4112": {
      "branch": 111,
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4573
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4113": {
      "op": "LT"
    },
    "4114": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1068"
    },
    "4117": {
      "branch": 111,
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4118": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4120": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4127": {
      "op": "SHL"
    },
    "4128": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4129": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4132": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4134": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4135": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "ADD",
      "path": "18"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4141": {
      "op": "DUP3"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "MSTORE"
    },
    "4144": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4187": {
      "op": "SHL"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4190": {
      "op": "DUP3"
    },
    "4191": {
      "op": "ADD"
    },
    "4192": {
      "op": "MSTORE"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4195": {
      "op": "ADD"
    },
    "4196": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4FB"
    },
    "4199": {
      "op": "JUMP"
    },
    "4200": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4201": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4632
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 81
    },
    "4202": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4204": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "ADD",
      "path": "18"
    },
    "4205": {
      "fn": "EnumerableSet._at",
      "offset": [
        4641,
        4646
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4206": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4207": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4208": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4209": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "LT",
      "path": "18"
    },
    "4210": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x108B"
    },
    "4213": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4214": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4221": {
      "op": "SHL"
    },
    "4222": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4224": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4225": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "4227": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4229": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4230": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4232": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4234": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4235": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4236": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4237": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4239": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4240": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4242": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4244": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4245": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "ADD",
      "path": "18"
    },
    "4246": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4247": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4248": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "POP",
      "path": "18"
    },
    "4249": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4250": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4251": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "18"
    },
    "4252": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "18"
    },
    "4253": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4254": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4255": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4257": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 82,
      "value": "0x10AD"
    },
    "4260": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4261": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4262": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4264": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4265": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10B5"
    },
    "4268": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4269": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4270": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "4271": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4272": {
      "op": "POP"
    },
    "4273": {
      "op": "POP"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "POP"
    },
    "4276": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 83
    },
    "4281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "SELFBALANCE",
      "path": "12"
    },
    "4282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "LT",
      "path": "12"
    },
    "4283": {
      "branch": 98,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1116"
    },
    "4287": {
      "branch": 98,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4288": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4302": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "12"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4349": {
      "op": "DUP3"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4361": {
      "op": "SHL"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4364": {
      "op": "DUP3"
    },
    "4365": {
      "op": "ADD"
    },
    "4366": {
      "op": "MSTORE"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4369": {
      "op": "ADD"
    },
    "4370": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FB"
    },
    "4373": {
      "op": "JUMP"
    },
    "4374": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4375": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4376": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4377": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 84,
      "value": "0x1164"
    },
    "4380": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4381": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4383": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4390": {
      "op": "SHL"
    },
    "4391": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4392": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4395": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4397": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4398": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "12"
    },
    "4399": {
      "op": "MSTORE"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4404": {
      "op": "DUP3"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "op": "MSTORE"
    },
    "4407": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4442": {
      "op": "DUP3"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "MSTORE"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FB"
    },
    "4451": {
      "op": "JUMP"
    },
    "4452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4455": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4463": {
      "op": "SHL"
    },
    "4464": {
      "op": "SUB"
    },
    "4465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "12"
    },
    "4466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1180"
    },
    "4474": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13FE"
    },
    "4479": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4483": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "12"
    },
    "4489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "12"
    },
    "4493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "12"
    },
    "4494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "12"
    },
    "4504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11BD"
    },
    "4507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "12"
    },
    "4516": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "4518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "12"
    },
    "4520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "12"
    },
    "4521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "12"
    },
    "4523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4529": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4534": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "12"
    },
    "4536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11C2"
    },
    "4540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 85,
      "value": "0x11D2"
    },
    "4555": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4558": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11DD"
    },
    "4561": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "4564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "4565": {
      "op": "POP"
    },
    "4566": {
      "op": "POP"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "op": "POP"
    },
    "4570": {
      "op": "POP"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4573": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4574": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4576": {
      "branch": 99,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4577": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4578": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11EC"
    },
    "4581": {
      "branch": 99,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4582": {
      "op": "POP"
    },
    "4583": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 86
    },
    "4584": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x51E"
    },
    "4587": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4588": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4589": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4590": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4591": {
      "branch": 100,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4592": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11FC"
    },
    "4595": {
      "branch": 100,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4596": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4597": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4598": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4599": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4600": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4602": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "12"
    },
    "4603": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4604": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7574,
        7719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4605": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 87
    },
    "4606": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4608": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4615": {
      "op": "SHL"
    },
    "4616": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4617": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4618": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4620": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "12"
    },
    "4621": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FB"
    },
    "4624": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4625": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4626": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x141A"
    },
    "4629": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4630": {
      "op": "JUMPDEST"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4635": {
      "op": "DUP3"
    },
    "4636": {
      "op": "DUP5"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "op": "SLT"
    },
    "4639": {
      "op": "ISZERO"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0x1227"
    },
    "4643": {
      "op": "JUMPI"
    },
    "4644": {
      "op": "DUP1"
    },
    "4645": {
      "op": "DUP2"
    },
    "4646": {
      "op": "REVERT"
    },
    "4647": {
      "op": "JUMPDEST"
    },
    "4648": {
      "op": "DUP2"
    },
    "4649": {
      "op": "CALLDATALOAD"
    },
    "4650": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "4653": {
      "op": "DUP2"
    },
    "4654": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "4657": {
      "jump": "i",
      "op": "JUMP"
    },
    "4658": {
      "op": "JUMPDEST"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4661": {
      "op": "DUP1"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4664": {
      "op": "DUP4"
    },
    "4665": {
      "op": "DUP6"
    },
    "4666": {
      "op": "SUB"
    },
    "4667": {
      "op": "SLT"
    },
    "4668": {
      "op": "ISZERO"
    },
    "4669": {
      "op": "PUSH2",
      "value": "0x1244"
    },
    "4672": {
      "op": "JUMPI"
    },
    "4673": {
      "op": "DUP1"
    },
    "4674": {
      "op": "DUP2"
    },
    "4675": {
      "op": "REVERT"
    },
    "4676": {
      "op": "JUMPDEST"
    },
    "4677": {
      "op": "DUP3"
    },
    "4678": {
      "op": "CALLDATALOAD"
    },
    "4679": {
      "op": "PUSH2",
      "value": "0x124F"
    },
    "4682": {
      "op": "DUP2"
    },
    "4683": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "4686": {
      "jump": "i",
      "op": "JUMP"
    },
    "4687": {
      "op": "JUMPDEST"
    },
    "4688": {
      "op": "SWAP2"
    },
    "4689": {
      "op": "POP"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4692": {
      "op": "DUP4"
    },
    "4693": {
      "op": "ADD"
    },
    "4694": {
      "op": "CALLDATALOAD"
    },
    "4695": {
      "op": "PUSH2",
      "value": "0x125F"
    },
    "4698": {
      "op": "DUP2"
    },
    "4699": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "4702": {
      "jump": "i",
      "op": "JUMP"
    },
    "4703": {
      "op": "JUMPDEST"
    },
    "4704": {
      "op": "DUP1"
    },
    "4705": {
      "op": "SWAP2"
    },
    "4706": {
      "op": "POP"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "op": "SWAP3"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "SWAP3"
    },
    "4711": {
      "op": "SWAP1"
    },
    "4712": {
      "op": "POP"
    },
    "4713": {
      "jump": "o",
      "op": "JUMP"
    },
    "4714": {
      "op": "JUMPDEST"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4717": {
      "op": "DUP1"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4722": {
      "op": "DUP5"
    },
    "4723": {
      "op": "DUP7"
    },
    "4724": {
      "op": "SUB"
    },
    "4725": {
      "op": "SLT"
    },
    "4726": {
      "op": "ISZERO"
    },
    "4727": {
      "op": "PUSH2",
      "value": "0x127E"
    },
    "4730": {
      "op": "JUMPI"
    },
    "4731": {
      "op": "DUP1"
    },
    "4732": {
      "op": "DUP2"
    },
    "4733": {
      "op": "REVERT"
    },
    "4734": {
      "op": "JUMPDEST"
    },
    "4735": {
      "op": "DUP4"
    },
    "4736": {
      "op": "CALLDATALOAD"
    },
    "4737": {
      "op": "PUSH2",
      "value": "0x1289"
    },
    "4740": {
      "op": "DUP2"
    },
    "4741": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "4744": {
      "jump": "i",
      "op": "JUMP"
    },
    "4745": {
      "op": "JUMPDEST"
    },
    "4746": {
      "op": "SWAP3"
    },
    "4747": {
      "op": "POP"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4750": {
      "op": "DUP5"
    },
    "4751": {
      "op": "ADD"
    },
    "4752": {
      "op": "CALLDATALOAD"
    },
    "4753": {
      "op": "PUSH2",
      "value": "0x1299"
    },
    "4756": {
      "op": "DUP2"
    },
    "4757": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "4760": {
      "jump": "i",
      "op": "JUMP"
    },
    "4761": {
      "op": "JUMPDEST"
    },
    "4762": {
      "op": "SWAP3"
    },
    "4763": {
      "op": "SWAP6"
    },
    "4764": {
      "op": "SWAP3"
    },
    "4765": {
      "op": "SWAP5"
    },
    "4766": {
      "op": "POP"
    },
    "4767": {
      "op": "POP"
    },
    "4768": {
      "op": "POP"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4771": {
      "op": "SWAP2"
    },
    "4772": {
      "op": "SWAP1"
    },
    "4773": {
      "op": "SWAP2"
    },
    "4774": {
      "op": "ADD"
    },
    "4775": {
      "op": "CALLDATALOAD"
    },
    "4776": {
      "op": "SWAP1"
    },
    "4777": {
      "jump": "o",
      "op": "JUMP"
    },
    "4778": {
      "op": "JUMPDEST"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4781": {
      "op": "DUP1"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4784": {
      "op": "DUP1"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4787": {
      "op": "DUP6"
    },
    "4788": {
      "op": "DUP8"
    },
    "4789": {
      "op": "SUB"
    },
    "4790": {
      "op": "SLT"
    },
    "4791": {
      "op": "ISZERO"
    },
    "4792": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4795": {
      "op": "JUMPI"
    },
    "4796": {
      "op": "DUP1"
    },
    "4797": {
      "op": "DUP2"
    },
    "4798": {
      "op": "REVERT"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "DUP5"
    },
    "4801": {
      "op": "CALLDATALOAD"
    },
    "4802": {
      "op": "PUSH2",
      "value": "0x12CA"
    },
    "4805": {
      "op": "DUP2"
    },
    "4806": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "4809": {
      "jump": "i",
      "op": "JUMP"
    },
    "4810": {
      "op": "JUMPDEST"
    },
    "4811": {
      "op": "SWAP4"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4815": {
      "op": "DUP6"
    },
    "4816": {
      "op": "ADD"
    },
    "4817": {
      "op": "CALLDATALOAD"
    },
    "4818": {
      "op": "PUSH2",
      "value": "0x12DA"
    },
    "4821": {
      "op": "DUP2"
    },
    "4822": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "4825": {
      "jump": "i",
      "op": "JUMP"
    },
    "4826": {
      "op": "JUMPDEST"
    },
    "4827": {
      "op": "SWAP3"
    },
    "4828": {
      "op": "POP"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4831": {
      "op": "DUP6"
    },
    "4832": {
      "op": "ADD"
    },
    "4833": {
      "op": "CALLDATALOAD"
    },
    "4834": {
      "op": "SWAP2"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4838": {
      "op": "DUP6"
    },
    "4839": {
      "op": "ADD"
    },
    "4840": {
      "op": "CALLDATALOAD"
    },
    "4841": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4850": {
      "op": "DUP1"
    },
    "4851": {
      "op": "DUP3"
    },
    "4852": {
      "op": "GT"
    },
    "4853": {
      "op": "ISZERO"
    },
    "4854": {
      "op": "PUSH2",
      "value": "0x12FD"
    },
    "4857": {
      "op": "JUMPI"
    },
    "4858": {
      "op": "DUP3"
    },
    "4859": {
      "op": "DUP4"
    },
    "4860": {
      "op": "REVERT"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "DUP2"
    },
    "4863": {
      "op": "DUP8"
    },
    "4864": {
      "op": "ADD"
    },
    "4865": {
      "op": "SWAP2"
    },
    "4866": {
      "op": "POP"
    },
    "4867": {
      "op": "DUP8"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4870": {
      "op": "DUP4"
    },
    "4871": {
      "op": "ADD"
    },
    "4872": {
      "op": "SLT"
    },
    "4873": {
      "op": "PUSH2",
      "value": "0x1310"
    },
    "4876": {
      "op": "JUMPI"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "DUP4"
    },
    "4879": {
      "op": "REVERT"
    },
    "4880": {
      "op": "JUMPDEST"
    },
    "4881": {
      "op": "DUP2"
    },
    "4882": {
      "op": "CALLDATALOAD"
    },
    "4883": {
      "op": "DUP2"
    },
    "4884": {
      "op": "DUP2"
    },
    "4885": {
      "op": "GT"
    },
    "4886": {
      "op": "ISZERO"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "4890": {
      "op": "JUMPI"
    },
    "4891": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "4894": {
      "op": "PUSH2",
      "value": "0x1518"
    },
    "4897": {
      "jump": "i",
      "op": "JUMP"
    },
    "4898": {
      "op": "JUMPDEST"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4901": {
      "op": "MLOAD"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4904": {
      "op": "DUP3"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4908": {
      "op": "NOT"
    },
    "4909": {
      "op": "SWAP1"
    },
    "4910": {
      "op": "DUP2"
    },
    "4911": {
      "op": "AND"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4914": {
      "op": "ADD"
    },
    "4915": {
      "op": "AND"
    },
    "4916": {
      "op": "DUP2"
    },
    "4917": {
      "op": "ADD"
    },
    "4918": {
      "op": "SWAP1"
    },
    "4919": {
      "op": "DUP4"
    },
    "4920": {
      "op": "DUP3"
    },
    "4921": {
      "op": "GT"
    },
    "4922": {
      "op": "DUP2"
    },
    "4923": {
      "op": "DUP4"
    },
    "4924": {
      "op": "LT"
    },
    "4925": {
      "op": "OR"
    },
    "4926": {
      "op": "ISZERO"
    },
    "4927": {
      "op": "PUSH2",
      "value": "0x134A"
    },
    "4930": {
      "op": "JUMPI"
    },
    "4931": {
      "op": "PUSH2",
      "value": "0x134A"
    },
    "4934": {
      "op": "PUSH2",
      "value": "0x1518"
    },
    "4937": {
      "jump": "i",
      "op": "JUMP"
    },
    "4938": {
      "op": "JUMPDEST"
    },
    "4939": {
      "op": "DUP2"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4942": {
      "op": "MSTORE"
    },
    "4943": {
      "op": "DUP3"
    },
    "4944": {
      "op": "DUP2"
    },
    "4945": {
      "op": "MSTORE"
    },
    "4946": {
      "op": "DUP11"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4949": {
      "op": "DUP5"
    },
    "4950": {
      "op": "DUP8"
    },
    "4951": {
      "op": "ADD"
    },
    "4952": {
      "op": "ADD"
    },
    "4953": {
      "op": "GT"
    },
    "4954": {
      "op": "ISZERO"
    },
    "4955": {
      "op": "PUSH2",
      "value": "0x1362"
    },
    "4958": {
      "op": "JUMPI"
    },
    "4959": {
      "op": "DUP6"
    },
    "4960": {
      "op": "DUP7"
    },
    "4961": {
      "op": "REVERT"
    },
    "4962": {
      "op": "JUMPDEST"
    },
    "4963": {
      "op": "DUP3"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4966": {
      "op": "DUP7"
    },
    "4967": {
      "op": "ADD"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4970": {
      "op": "DUP4"
    },
    "4971": {
      "op": "ADD"
    },
    "4972": {
      "op": "CALLDATACOPY"
    },
    "4973": {
      "op": "SWAP2"
    },
    "4974": {
      "op": "DUP3"
    },
    "4975": {
      "op": "ADD"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4978": {
      "op": "ADD"
    },
    "4979": {
      "op": "SWAP5"
    },
    "4980": {
      "op": "SWAP1"
    },
    "4981": {
      "op": "SWAP5"
    },
    "4982": {
      "op": "MSTORE"
    },
    "4983": {
      "op": "SWAP6"
    },
    "4984": {
      "op": "SWAP9"
    },
    "4985": {
      "op": "SWAP5"
    },
    "4986": {
      "op": "SWAP8"
    },
    "4987": {
      "op": "POP"
    },
    "4988": {
      "op": "SWAP3"
    },
    "4989": {
      "op": "SWAP6"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "jump": "o",
      "op": "JUMP"
    },
    "4995": {
      "op": "JUMPDEST"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4998": {
      "op": "DUP1"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5001": {
      "op": "DUP4"
    },
    "5002": {
      "op": "DUP6"
    },
    "5003": {
      "op": "SUB"
    },
    "5004": {
      "op": "SLT"
    },
    "5005": {
      "op": "ISZERO"
    },
    "5006": {
      "op": "PUSH2",
      "value": "0x1395"
    },
    "5009": {
      "op": "JUMPI"
    },
    "5010": {
      "op": "DUP2"
    },
    "5011": {
      "op": "DUP3"
    },
    "5012": {
      "op": "REVERT"
    },
    "5013": {
      "op": "JUMPDEST"
    },
    "5014": {
      "op": "DUP3"
    },
    "5015": {
      "op": "CALLDATALOAD"
    },
    "5016": {
      "op": "PUSH2",
      "value": "0x13A0"
    },
    "5019": {
      "op": "DUP2"
    },
    "5020": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "5023": {
      "jump": "i",
      "op": "JUMP"
    },
    "5024": {
      "op": "JUMPDEST"
    },
    "5025": {
      "op": "SWAP5"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5028": {
      "op": "SWAP4"
    },
    "5029": {
      "op": "SWAP1"
    },
    "5030": {
      "op": "SWAP4"
    },
    "5031": {
      "op": "ADD"
    },
    "5032": {
      "op": "CALLDATALOAD"
    },
    "5033": {
      "op": "SWAP4"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "jump": "o",
      "op": "JUMP"
    },
    "5038": {
      "op": "JUMPDEST"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5043": {
      "op": "DUP3"
    },
    "5044": {
      "op": "DUP5"
    },
    "5045": {
      "op": "SUB"
    },
    "5046": {
      "op": "SLT"
    },
    "5047": {
      "op": "ISZERO"
    },
    "5048": {
      "op": "PUSH2",
      "value": "0x13BF"
    },
    "5051": {
      "op": "JUMPI"
    },
    "5052": {
      "op": "DUP1"
    },
    "5053": {
      "op": "DUP2"
    },
    "5054": {
      "op": "REVERT"
    },
    "5055": {
      "op": "JUMPDEST"
    },
    "5056": {
      "op": "DUP2"
    },
    "5057": {
      "op": "CALLDATALOAD"
    },
    "5058": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "5061": {
      "op": "DUP2"
    },
    "5062": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5065": {
      "jump": "i",
      "op": "JUMP"
    },
    "5066": {
      "op": "JUMPDEST"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5071": {
      "op": "DUP3"
    },
    "5072": {
      "op": "DUP5"
    },
    "5073": {
      "op": "SUB"
    },
    "5074": {
      "op": "SLT"
    },
    "5075": {
      "op": "ISZERO"
    },
    "5076": {
      "op": "PUSH2",
      "value": "0x13DB"
    },
    "5079": {
      "op": "JUMPI"
    },
    "5080": {
      "op": "DUP1"
    },
    "5081": {
      "op": "DUP2"
    },
    "5082": {
      "op": "REVERT"
    },
    "5083": {
      "op": "JUMPDEST"
    },
    "5084": {
      "op": "DUP2"
    },
    "5085": {
      "op": "MLOAD"
    },
    "5086": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "5089": {
      "op": "DUP2"
    },
    "5090": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5093": {
      "jump": "i",
      "op": "JUMP"
    },
    "5094": {
      "op": "JUMPDEST"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5099": {
      "op": "DUP3"
    },
    "5100": {
      "op": "DUP5"
    },
    "5101": {
      "op": "SUB"
    },
    "5102": {
      "op": "SLT"
    },
    "5103": {
      "op": "ISZERO"
    },
    "5104": {
      "op": "PUSH2",
      "value": "0x13F7"
    },
    "5107": {
      "op": "JUMPI"
    },
    "5108": {
      "op": "DUP1"
    },
    "5109": {
      "op": "DUP2"
    },
    "5110": {
      "op": "REVERT"
    },
    "5111": {
      "op": "JUMPDEST"
    },
    "5112": {
      "op": "POP"
    },
    "5113": {
      "op": "CALLDATALOAD"
    },
    "5114": {
      "op": "SWAP2"
    },
    "5115": {
      "op": "SWAP1"
    },
    "5116": {
      "op": "POP"
    },
    "5117": {
      "jump": "o",
      "op": "JUMP"
    },
    "5118": {
      "op": "JUMPDEST"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5121": {
      "op": "DUP3"
    },
    "5122": {
      "op": "MLOAD"
    },
    "5123": {
      "op": "PUSH2",
      "value": "0x1410"
    },
    "5126": {
      "op": "DUP2"
    },
    "5127": {
      "op": "DUP5"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5130": {
      "op": "DUP8"
    },
    "5131": {
      "op": "ADD"
    },
    "5132": {
      "op": "PUSH2",
      "value": "0x149B"
    },
    "5135": {
      "jump": "i",
      "op": "JUMP"
    },
    "5136": {
      "op": "JUMPDEST"
    },
    "5137": {
      "op": "SWAP2"
    },
    "5138": {
      "op": "SWAP1"
    },
    "5139": {
      "op": "SWAP2"
    },
    "5140": {
      "op": "ADD"
    },
    "5141": {
      "op": "SWAP3"
    },
    "5142": {
      "op": "SWAP2"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "jump": "o",
      "op": "JUMP"
    },
    "5146": {
      "op": "JUMPDEST"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5151": {
      "op": "DUP3"
    },
    "5152": {
      "op": "MSTORE"
    },
    "5153": {
      "op": "DUP3"
    },
    "5154": {
      "op": "MLOAD"
    },
    "5155": {
      "op": "DUP1"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5158": {
      "op": "DUP5"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "MSTORE"
    },
    "5161": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5164": {
      "op": "DUP2"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5167": {
      "op": "DUP6"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5171": {
      "op": "DUP8"
    },
    "5172": {
      "op": "ADD"
    },
    "5173": {
      "op": "PUSH2",
      "value": "0x149B"
    },
    "5176": {
      "jump": "i",
      "op": "JUMP"
    },
    "5177": {
      "op": "JUMPDEST"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5180": {
      "op": "ADD"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5183": {
      "op": "NOT"
    },
    "5184": {
      "op": "AND"
    },
    "5185": {
      "op": "SWAP2"
    },
    "5186": {
      "op": "SWAP1"
    },
    "5187": {
      "op": "SWAP2"
    },
    "5188": {
      "op": "ADD"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5191": {
      "op": "ADD"
    },
    "5192": {
      "op": "SWAP3"
    },
    "5193": {
      "op": "SWAP2"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "op": "POP"
    },
    "5196": {
      "jump": "o",
      "op": "JUMP"
    },
    "5197": {
      "op": "JUMPDEST"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5200": {
      "op": "DUP3"
    },
    "5201": {
      "op": "NOT"
    },
    "5202": {
      "op": "DUP3"
    },
    "5203": {
      "op": "GT"
    },
    "5204": {
      "op": "ISZERO"
    },
    "5205": {
      "op": "PUSH2",
      "value": "0x1460"
    },
    "5208": {
      "op": "JUMPI"
    },
    "5209": {
      "op": "PUSH2",
      "value": "0x1460"
    },
    "5212": {
      "op": "PUSH2",
      "value": "0x1502"
    },
    "5215": {
      "jump": "i",
      "op": "JUMP"
    },
    "5216": {
      "op": "JUMPDEST"
    },
    "5217": {
      "op": "POP"
    },
    "5218": {
      "op": "ADD"
    },
    "5219": {
      "op": "SWAP1"
    },
    "5220": {
      "jump": "o",
      "op": "JUMP"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5224": {
      "op": "DUP2"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5227": {
      "op": "NOT"
    },
    "5228": {
      "op": "DIV"
    },
    "5229": {
      "op": "DUP4"
    },
    "5230": {
      "op": "GT"
    },
    "5231": {
      "op": "DUP3"
    },
    "5232": {
      "op": "ISZERO"
    },
    "5233": {
      "op": "ISZERO"
    },
    "5234": {
      "op": "AND"
    },
    "5235": {
      "op": "ISZERO"
    },
    "5236": {
      "op": "PUSH2",
      "value": "0x147F"
    },
    "5239": {
      "op": "JUMPI"
    },
    "5240": {
      "op": "PUSH2",
      "value": "0x147F"
    },
    "5243": {
      "op": "PUSH2",
      "value": "0x1502"
    },
    "5246": {
      "jump": "i",
      "op": "JUMP"
    },
    "5247": {
      "op": "JUMPDEST"
    },
    "5248": {
      "op": "POP"
    },
    "5249": {
      "op": "MUL"
    },
    "5250": {
      "op": "SWAP1"
    },
    "5251": {
      "jump": "o",
      "op": "JUMP"
    },
    "5252": {
      "op": "JUMPDEST"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5255": {
      "op": "DUP3"
    },
    "5256": {
      "op": "DUP3"
    },
    "5257": {
      "op": "LT"
    },
    "5258": {
      "op": "ISZERO"
    },
    "5259": {
      "op": "PUSH2",
      "value": "0x1496"
    },
    "5262": {
      "op": "JUMPI"
    },
    "5263": {
      "op": "PUSH2",
      "value": "0x1496"
    },
    "5266": {
      "op": "PUSH2",
      "value": "0x1502"
    },
    "5269": {
      "jump": "i",
      "op": "JUMP"
    },
    "5270": {
      "op": "JUMPDEST"
    },
    "5271": {
      "op": "POP"
    },
    "5272": {
      "op": "SUB"
    },
    "5273": {
      "op": "SWAP1"
    },
    "5274": {
      "jump": "o",
      "op": "JUMP"
    },
    "5275": {
      "op": "JUMPDEST"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5278": {
      "op": "JUMPDEST"
    },
    "5279": {
      "op": "DUP4"
    },
    "5280": {
      "op": "DUP2"
    },
    "5281": {
      "op": "LT"
    },
    "5282": {
      "op": "ISZERO"
    },
    "5283": {
      "op": "PUSH2",
      "value": "0x14B6"
    },
    "5286": {
      "op": "JUMPI"
    },
    "5287": {
      "op": "DUP2"
    },
    "5288": {
      "op": "DUP2"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "op": "MLOAD"
    },
    "5291": {
      "op": "DUP4"
    },
    "5292": {
      "op": "DUP3"
    },
    "5293": {
      "op": "ADD"
    },
    "5294": {
      "op": "MSTORE"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5297": {
      "op": "ADD"
    },
    "5298": {
      "op": "PUSH2",
      "value": "0x149E"
    },
    "5301": {
      "op": "JUMP"
    },
    "5302": {
      "op": "JUMPDEST"
    },
    "5303": {
      "op": "DUP4"
    },
    "5304": {
      "op": "DUP2"
    },
    "5305": {
      "op": "GT"
    },
    "5306": {
      "op": "ISZERO"
    },
    "5307": {
      "op": "PUSH2",
      "value": "0xDBD"
    },
    "5310": {
      "op": "JUMPI"
    },
    "5311": {
      "op": "POP"
    },
    "5312": {
      "op": "POP"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5315": {
      "op": "SWAP2"
    },
    "5316": {
      "op": "ADD"
    },
    "5317": {
      "op": "MSTORE"
    },
    "5318": {
      "jump": "o",
      "op": "JUMP"
    },
    "5319": {
      "op": "JUMPDEST"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5322": {
      "op": "DUP2"
    },
    "5323": {
      "op": "DUP2"
    },
    "5324": {
      "op": "SHR"
    },
    "5325": {
      "op": "SWAP1"
    },
    "5326": {
      "op": "DUP3"
    },
    "5327": {
      "op": "AND"
    },
    "5328": {
      "op": "DUP1"
    },
    "5329": {
      "op": "PUSH2",
      "value": "0x14DB"
    },
    "5332": {
      "op": "JUMPI"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5335": {
      "op": "DUP3"
    },
    "5336": {
      "op": "AND"
    },
    "5337": {
      "op": "SWAP2"
    },
    "5338": {
      "op": "POP"
    },
    "5339": {
      "op": "JUMPDEST"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5342": {
      "op": "DUP3"
    },
    "5343": {
      "op": "LT"
    },
    "5344": {
      "op": "DUP2"
    },
    "5345": {
      "op": "EQ"
    },
    "5346": {
      "op": "ISZERO"
    },
    "5347": {
      "op": "PUSH2",
      "value": "0x14FC"
    },
    "5350": {
      "op": "JUMPI"
    },
    "5351": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5358": {
      "op": "SHL"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5361": {
      "op": "MSTORE"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5366": {
      "op": "MSTORE"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5371": {
      "op": "REVERT"
    },
    "5372": {
      "op": "JUMPDEST"
    },
    "5373": {
      "op": "POP"
    },
    "5374": {
      "op": "SWAP2"
    },
    "5375": {
      "op": "SWAP1"
    },
    "5376": {
      "op": "POP"
    },
    "5377": {
      "jump": "o",
      "op": "JUMP"
    },
    "5378": {
      "op": "JUMPDEST"
    },
    "5379": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5386": {
      "op": "SHL"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5389": {
      "op": "MSTORE"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5394": {
      "op": "MSTORE"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5399": {
      "op": "REVERT"
    },
    "5400": {
      "op": "JUMPDEST"
    },
    "5401": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5408": {
      "op": "SHL"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5411": {
      "op": "MSTORE"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5416": {
      "op": "MSTORE"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5421": {
      "op": "REVERT"
    },
    "5422": {
      "op": "JUMPDEST"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5429": {
      "op": "SHL"
    },
    "5430": {
      "op": "SUB"
    },
    "5431": {
      "op": "DUP2"
    },
    "5432": {
      "op": "AND"
    },
    "5433": {
      "op": "DUP2"
    },
    "5434": {
      "op": "EQ"
    },
    "5435": {
      "op": "PUSH2",
      "value": "0x1543"
    },
    "5438": {
      "op": "JUMPI"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5441": {
      "op": "DUP1"
    },
    "5442": {
      "op": "REVERT"
    },
    "5443": {
      "op": "JUMPDEST"
    },
    "5444": {
      "op": "POP"
    },
    "5445": {
      "jump": "o",
      "op": "JUMP"
    },
    "5446": {
      "op": "JUMPDEST"
    },
    "5447": {
      "op": "DUP1"
    },
    "5448": {
      "op": "ISZERO"
    },
    "5449": {
      "op": "ISZERO"
    },
    "5450": {
      "op": "DUP2"
    },
    "5451": {
      "op": "EQ"
    },
    "5452": {
      "op": "PUSH2",
      "value": "0x1543"
    },
    "5455": {
      "op": "JUMPI"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5458": {
      "op": "DUP1"
    },
    "5459": {
      "op": "REVERT"
    }
  },
  "sha1": "40e33fb87e3b1bdaf496f587f2cc7a82c584ab30",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {\n    SafeERC20\n} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {\n    ERC721Holder\n} from \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport {Applications} from \"./Applications.sol\";\nimport {\n    EnumerableSet\n} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n// doubles as the governance contract\ncontract Penny is ERC20, ERC721Holder {\n    using SafeERC20 for IERC20;\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    event ApplicationReceived(uint256 applicationId, uint256 timestamp);\n    event BallotCasted(address indexed voter, bool vote);\n\n    /// @param awardToken Address of an ERC20-compatible token to award\n    /// @param recipient Address to send `awardToken` to if the application is approved\n    /// @param awardAmount Amount of `awardToken` to send `recipient` if the application is approved\n    /// @param ipfsMetadata IPFS CID where metadata exists for this application\n    struct Application {\n        address awardToken;\n        address recipient;\n        uint256 awardAmount;\n        string ipfsMetadata;\n    }\n\n    struct Vote {\n        uint256 yayAmount;\n        uint256 nayAmount;\n        mapping(address => bool) ballots;\n    }\n\n    IERC20 private DAI;\n    mapping(address => uint256) private _unlockTime;\n    Applications private _applicationContract;\n    EnumerableSet.UintSet private _applicationsQueue;\n    mapping(uint256 => Vote) private votes;\n    uint256 public voteStartTimestamp;\n    address public owner;\n\n    constructor(IERC20 _token) ERC20(\"Penny Token\", \"PNY\") {\n        DAI = _token;\n        owner = _msgSender();\n    }\n\n    /// @notice Deposit DAI in exchange for PNY\n    /// @dev 100 PNY = 1 DAI, DAI is locked for a period of 1 year\n    /// @param _amount The amount of DAI to deposit\n    /// @return true on success\n    function deposit(uint256 _amount) external returns (bool) {\n        DAI.safeTransferFrom(_msgSender(), address(this), _amount);\n        _mint(_msgSender(), _amount * 100);\n        _unlockTime[_msgSender()] = block.timestamp + 15 * 60;\n        return true;\n    }\n\n    /// @notice Withdraw deposited DAI after deposit lock has been removed\n    /// @dev Must ensure enough DAI is held by this contract at the time of the withdrawl\n    /// @return true on success\n    function withdraw() external returns (bool) {\n        require(block.timestamp >= _unlockTime[_msgSender()]);\n        DAI.transfer(_msgSender(), ERC20.balanceOf(_msgSender()));\n        _burn(_msgSender(), ERC20.balanceOf(_msgSender()));\n        return true;\n    }\n\n    /// @notice Called when recieving an application\n    function onERC721Received(\n        address _operator,\n        address _from,\n        uint256 _tokenId,\n        bytes memory _data\n    ) public override(ERC721Holder) returns (bytes4) {\n        require(_msgSender() == address(_applicationContract)); // dev: unknown ERC721 contract\n\n        if (_applicationsQueue.length() == 0) {\n            voteStartTimestamp = block.timestamp;\n            _applicationsQueue.add(_tokenId);\n        } else {\n            _applicationsQueue.add(_tokenId);\n        }\n\n        emit ApplicationReceived(_tokenId, block.timestamp);\n        super.onERC721Received(_operator, _from, _tokenId, _data);\n    }\n\n    /// @notice Getter for retrieving the currently up for vote application\n    function getUpForVote() public view returns (uint256) {\n        require(_applicationsQueue.length() > 0); // dev: no application up for vote\n        return _applicationsQueue.at(0);\n    }\n\n    function vote(bool yayOrNay) external returns (bool) {\n        require(_applicationsQueue.length() > 0); // dev: no current application up for vote\n        uint256 currentApplication = getUpForVote();\n        require(ERC20.balanceOf(_msgSender()) >= 0); // dev: not allowed to vote\n        require(!votes[currentApplication].ballots[_msgSender()]); // dev: already voted\n        require(block.timestamp < voteStartTimestamp + 30 days); // dev: vote is over\n\n        votes[currentApplication].ballots[_msgSender()] = true;\n        if (yayOrNay) {\n            votes[currentApplication].yayAmount += ERC20.balanceOf(\n                _msgSender()\n            );\n        } else {\n            votes[currentApplication].nayAmount += ERC20.balanceOf(\n                _msgSender()\n            );\n        }\n        emit BallotCasted(_msgSender(), yayOrNay);\n        return true;\n    }\n\n    function setApplications(Applications applicationContract) external {\n        require(_msgSender() == owner);\n        _applicationContract = applicationContract;\n    }\n\n    function getVotes(uint256 _application_id)\n        external\n        view\n        returns (uint256 yayAmount, uint256 nayAmount)\n    {\n        yayAmount = votes[_application_id].yayAmount;\n        nayAmount = votes[_application_id].nayAmount;\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20) {\n        if (from != address(0) && to != address(0)) revert(); // dev: transfers are disabled\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourceMap": "567:4756:20:-:0;;;1722:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1898::1;;;;;;;;;;;;;-1:-1:-1;;;1898:114:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1898:114:1;;;1973:5;1965;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1787:3:20::1;:12:::0;;-1:-1:-1;;;;;;1787:12:20::1;-1:-1:-1::0;;;;;1787:12:20;::::1;;::::0;;-1:-1:-1;1817:12:20::1;665:10:13::0;586:96;;1817:12:20::1;1809:5;:20:::0;;-1:-1:-1;;;;;;1809:20:20::1;-1:-1:-1::0;;;;;1809:20:20;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;567:4756:20;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;567:4756:20;;;-1:-1:-1;567:4756:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:325:21;;152:2;140:9;131:7;127:23;123:32;120:2;;;173:6;165;158:22;120:2;204:16;;-1:-1:-1;;;;;249:31:21;;239:42;;229:2;;300:6;292;285:22;229:2;328:5;110:229;-1:-1:-1;;;110:229:21:o;344:380::-;423:1;419:12;;;;466;;;487:2;;541:4;533:6;529:17;519:27;;487:2;594;586:6;583:14;563:18;560:38;557:2;;;640:10;635:3;631:20;628:1;621:31;675:4;672:1;665:15;703:4;700:1;693:15;557:2;;399:325;;;:::o;:::-;567:4756:20;;;;;;",
  "sourcePath": "contracts/Penny.sol",
  "type": "contract"
}