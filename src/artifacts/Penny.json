{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "applicationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ApplicationReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "vote",
          "type": "bool"
        }
      ],
      "name": "BallotCasted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_applicationContract",
      "outputs": [
        {
          "internalType": "contract Applications",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_unlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUpForVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_application_id",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "yayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nayAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Applications",
          "name": "applicationContract",
          "type": "address"
        }
      ],
      "name": "setApplications",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "yayOrNay",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStartTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/metatx/ERC2771Context.sol",
    "1": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/ERC20.sol",
    "10": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "11": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "12": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
    "13": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "14": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Counters.sol",
    "15": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Strings.sol",
    "16": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/ERC165.sol",
    "17": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/IERC165.sol",
    "18": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/structs/EnumerableSet.sol",
    "19": "contracts/Applications.sol",
    "2": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
    "20": "contracts/Penny.sol",
    "3": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
    "6": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
    "7": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721Receiver.sol",
    "8": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "9": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Penny.sol",
    "exportedSymbols": {
      "Applications": [
        339
      ],
      "ERC20": [
        2615
      ],
      "ERC721Holder": [
        2944
      ],
      "EnumerableSet": [
        3457
      ],
      "IERC20": [
        2693
      ],
      "Penny": [
        780
      ],
      "SafeERC20": [
        2917
      ]
    },
    "id": 781,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 341,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:20"
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 343,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 781,
        "sourceUnit": 2694,
        "src": "61:70:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 342,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:6:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 345,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 781,
        "sourceUnit": 2616,
        "src": "132:68:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 344,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "140:5:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 347,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 781,
        "sourceUnit": 2918,
        "src": "201:88:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 346,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "214:9:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 349,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 781,
        "sourceUnit": 2945,
        "src": "290:95:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 348,
              "name": "ERC721Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "303:12:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Applications.sol",
        "file": "./Applications.sol",
        "id": 351,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 781,
        "sourceUnit": 340,
        "src": "386:48:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 350,
              "name": "Applications",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "394:12:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/skelletor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 353,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 781,
        "sourceUnit": 3458,
        "src": "435:92:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 352,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "448:13:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 354,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2615,
              "src": "585:5:20"
            },
            "id": 355,
            "nodeType": "InheritanceSpecifier",
            "src": "585:5:20"
          },
          {
            "baseName": {
              "id": 356,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2944,
              "src": "592:12:20"
            },
            "id": 357,
            "nodeType": "InheritanceSpecifier",
            "src": "592:12:20"
          }
        ],
        "contractDependencies": [
          2035,
          2615,
          2693,
          2944,
          3591,
          4197
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 780,
        "linearizedBaseContracts": [
          780,
          2944,
          3591,
          2615,
          4197,
          2693,
          2035
        ],
        "name": "Penny",
        "nameLocation": "576:5:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 361,
            "libraryName": {
              "id": 358,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2917,
              "src": "617:9:20"
            },
            "nodeType": "UsingForDirective",
            "src": "611:27:20",
            "typeName": {
              "id": 360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 359,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2693,
                "src": "631:6:20"
              },
              "referencedDeclaration": 2693,
              "src": "631:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2693",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 365,
            "libraryName": {
              "id": 362,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3457,
              "src": "649:13:20"
            },
            "nodeType": "UsingForDirective",
            "src": "643:46:20",
            "typeName": {
              "id": 364,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 363,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3357,
                "src": "667:21:20"
              },
              "referencedDeclaration": 3357,
              "src": "667:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$3357_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "anonymous": false,
            "id": 371,
            "name": "ApplicationReceived",
            "nameLocation": "701:19:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "applicationId",
                  "nameLocation": "729:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "721:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 369,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "752:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "744:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:42:20"
            },
            "src": "695:68:20"
          },
          {
            "anonymous": false,
            "id": 377,
            "name": "BallotCasted",
            "nameLocation": "774:12:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "803:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "787:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "815:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "810:9:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:34:20"
            },
            "src": "768:53:20"
          },
          {
            "canonicalName": "Penny.Application",
            "id": 386,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "awardToken",
                "nameLocation": "1205:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1197:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 378,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1197:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "1233:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1225:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 380,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1225:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "awardAmount",
                "nameLocation": "1260:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1252:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1252:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 385,
                "mutability": "mutable",
                "name": "ipfsMetadata",
                "nameLocation": "1288:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 386,
                "src": "1281:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 384,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1281:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Application",
            "nameLocation": "1175:11:20",
            "nodeType": "StructDefinition",
            "scope": 780,
            "src": "1168:139:20",
            "visibility": "public"
          },
          {
            "canonicalName": "Penny.Vote",
            "id": 395,
            "members": [
              {
                "constant": false,
                "id": 388,
                "mutability": "mutable",
                "name": "yayAmount",
                "nameLocation": "1343:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 395,
                "src": "1335:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 387,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 390,
                "mutability": "mutable",
                "name": "nayAmount",
                "nameLocation": "1370:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 395,
                "src": "1362:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 389,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1362:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 394,
                "mutability": "mutable",
                "name": "ballots",
                "nameLocation": "1414:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 395,
                "src": "1389:32:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 393,
                  "keyType": {
                    "id": 391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1389:24:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vote",
            "nameLocation": "1320:4:20",
            "nodeType": "StructDefinition",
            "scope": 780,
            "src": "1313:115:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 398,
            "mutability": "mutable",
            "name": "DAI",
            "nameLocation": "1449:3:20",
            "nodeType": "VariableDeclaration",
            "scope": 780,
            "src": "1434:18:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2693",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 397,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 396,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2693,
                "src": "1434:6:20"
              },
              "referencedDeclaration": 2693,
              "src": "1434:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2693",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "07d729c4",
            "id": 402,
            "mutability": "mutable",
            "name": "_unlockTime",
            "nameLocation": "1493:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 780,
            "src": "1458:46:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 401,
              "keyType": {
                "id": 399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1466:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1458:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 400,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1477:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2be01d6f",
            "id": 405,
            "mutability": "mutable",
            "name": "_applicationContract",
            "nameLocation": "1530:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 780,
            "src": "1510:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Applications_$339",
              "typeString": "contract Applications"
            },
            "typeName": {
              "id": 404,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 403,
                "name": "Applications",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 339,
                "src": "1510:12:20"
              },
              "referencedDeclaration": 339,
              "src": "1510:12:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Applications_$339",
                "typeString": "contract Applications"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 408,
            "mutability": "mutable",
            "name": "_applicationsQueue",
            "nameLocation": "1586:18:20",
            "nodeType": "VariableDeclaration",
            "scope": 780,
            "src": "1556:48:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_UintSet_$3357_storage",
              "typeString": "struct EnumerableSet.UintSet"
            },
            "typeName": {
              "id": 407,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 406,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3357,
                "src": "1556:21:20"
              },
              "referencedDeclaration": 3357,
              "src": "1556:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$3357_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 413,
            "mutability": "mutable",
            "name": "votes",
            "nameLocation": "1643:5:20",
            "nodeType": "VariableDeclaration",
            "scope": 780,
            "src": "1610:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
              "typeString": "mapping(uint256 => struct Penny.Vote)"
            },
            "typeName": {
              "id": 412,
              "keyType": {
                "id": 409,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1618:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1610:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                "typeString": "mapping(uint256 => struct Penny.Vote)"
              },
              "valueType": {
                "id": 411,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 410,
                  "name": "Vote",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 395,
                  "src": "1629:4:20"
                },
                "referencedDeclaration": 395,
                "src": "1629:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vote_$395_storage_ptr",
                  "typeString": "struct Penny.Vote"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "18732d79",
            "id": 415,
            "mutability": "mutable",
            "name": "voteStartTimestamp",
            "nameLocation": "1669:18:20",
            "nodeType": "VariableDeclaration",
            "scope": 780,
            "src": "1654:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 414,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1654:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 417,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1708:5:20",
            "nodeType": "VariableDeclaration",
            "scope": 780,
            "src": "1693:20:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 416,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1693:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "1779:59:20",
              "statements": [
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 427,
                      "name": "DAI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "1789:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2693",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 428,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "1795:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2693",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1789:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2693",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:12:20"
                },
                {
                  "expression": {
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 431,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "1811:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 432,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "1819:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1819:12:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1811:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:20:20"
                }
              ]
            },
            "id": 437,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4368616e676520546f6b656e",
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1753:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d87a326ba486869436b6c0584ff24e9a96c2ace980fa440683a763cd5c2d973",
                      "typeString": "literal_string \"Change Token\""
                    },
                    "value": "Change Token"
                  },
                  {
                    "hexValue": "4348414e4745",
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1769:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_36a94f6687ba4338a09c199659c35e9f3a4d405cab5856addbaf18ef95a56130",
                      "typeString": "literal_string \"CHANGE\""
                    },
                    "value": "CHANGE"
                  }
                ],
                "id": 425,
                "modifierName": {
                  "id": 422,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2615,
                  "src": "1747:5:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1747:31:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1739:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1732:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2693",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 419,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 418,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2693,
                      "src": "1732:6:20"
                    },
                    "referencedDeclaration": 2693,
                    "src": "1732:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2693",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:15:20"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:0:20"
            },
            "scope": 780,
            "src": "1720:118:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "2101:203:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 448,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "2132:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2132:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 452,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2154:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Penny_$780",
                              "typeString": "contract Penny"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Penny_$780",
                              "typeString": "contract Penny"
                            }
                          ],
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2146:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2146:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2146:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 454,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "2161:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 445,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2111:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2693",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2750,
                      "src": "2111:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2693_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2693_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2111:58:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 458,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "2185:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2185:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 460,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 440,
                          "src": "2199:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2209:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2199:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 457,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "2179:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:34:20"
                },
                {
                  "expression": {
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 465,
                        "name": "_unlockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "2223:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 468,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 466,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "2235:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2235:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2223:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 469,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2251:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2251:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3135",
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2269:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2274:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2269:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        }
                      },
                      "src": "2251:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2223:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:53:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2293:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 444,
                  "id": 478,
                  "nodeType": "Return",
                  "src": "2286:11:20"
                }
              ]
            },
            "documentation": {
              "id": 438,
              "nodeType": "StructuredDocumentation",
              "src": "1844:194:20",
              "text": "@notice Deposit DAI in exchange for PNY\n @dev 100 PNY = 1 DAI, DAI is locked for a period of 1 year\n @param _amount The amount of DAI to deposit\n @return true on success"
            },
            "functionSelector": "b6b55f25",
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2052:7:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2068:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "2060:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:17:20"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "2095:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2095:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:6:20"
            },
            "scope": 780,
            "src": "2043:261:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "2551:223:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 487,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2569:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2569:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 489,
                            "name": "_unlockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "2588:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 492,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 490,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "2600:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2600:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2588:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2569:44:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2561:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:53:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:53:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 499,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "2637:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2637:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 503,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2023,
                                "src": "2667:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2667:12:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 501,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "2651:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$2615_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2207,
                            "src": "2651:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2651:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2682:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2651:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 496,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2624:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2693",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2642,
                      "src": "2624:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 511,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "2702:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 515,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "2732:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2732:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 513,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2615,
                            "src": "2716:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$2615_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2207,
                          "src": "2716:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2716:29:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 510,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2558,
                      "src": "2696:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2696:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "2696:50:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2763:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 485,
                  "id": 521,
                  "nodeType": "Return",
                  "src": "2756:11:20"
                }
              ]
            },
            "documentation": {
              "id": 481,
              "nodeType": "StructuredDocumentation",
              "src": "2310:192:20",
              "text": "@notice Withdraw deposited DAI after deposit lock has been removed\n @dev Must ensure enough DAI is held by this contract at the time of the withdrawl\n @return true on success"
            },
            "functionSelector": "3ccfd60b",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2516:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2524:2:20"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "2545:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2544:6:20"
            },
            "scope": 780,
            "src": "2507:267:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2943
            ],
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "3016:430:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 540,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2023,
                            "src": "3034:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3034:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 544,
                              "name": "_applicationContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "3058:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Applications_$339",
                                "typeString": "contract Applications"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Applications_$339",
                                "typeString": "contract Applications"
                              }
                            ],
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3050:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3050:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3050:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3034:45:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3026:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3026:54:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "3026:54:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 549,
                          "name": "_applicationsQueue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "3127:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UintSet_$3357_storage",
                            "typeString": "struct EnumerableSet.UintSet storage ref"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3435,
                        "src": "3127:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3357_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3357_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3127:27:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3158:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3127:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "3274:57:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 569,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "3311:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 566,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3288:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3357_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3378,
                            "src": "3288:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3357_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3357_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3288:32:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 571,
                        "nodeType": "ExpressionStatement",
                        "src": "3288:32:20"
                      }
                    ]
                  },
                  "id": 573,
                  "nodeType": "IfStatement",
                  "src": "3123:208:20",
                  "trueBody": {
                    "id": 565,
                    "nodeType": "Block",
                    "src": "3161:107:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 554,
                            "name": "voteStartTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "3175:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 555,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3196:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3196:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3175:36:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 558,
                        "nodeType": "ExpressionStatement",
                        "src": "3175:36:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 562,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "3248:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 559,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3225:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3357_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3378,
                            "src": "3225:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$3357_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$3357_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3225:32:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 564,
                        "nodeType": "ExpressionStatement",
                        "src": "3225:32:20"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "3366:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 576,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3376:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3376:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 574,
                      "name": "ApplicationReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3346:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3346:46:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "EmitStatement",
                  "src": "3341:51:20"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 580,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3409:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Penny_$780",
                          "typeString": "contract Penny"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 585,
                      "src": "3409:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3409:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 538,
                  "id": 583,
                  "nodeType": "Return",
                  "src": "3402:37:20"
                }
              ]
            },
            "documentation": {
              "id": 524,
              "nodeType": "StructuredDocumentation",
              "src": "2780:48:20",
              "text": "@notice Called when recieving an application"
            },
            "functionSelector": "150b7a02",
            "id": 585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "2842:16:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 535,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 534,
                  "name": "ERC721Holder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2944,
                  "src": "2985:12:20"
                }
              ],
              "src": "2976:22:20"
            },
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "2876:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "2868:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2903:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "2895:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2926:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "2918:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2957:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "2944:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2944:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2858:110:20"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "3008:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3007:8:20"
            },
            "scope": 780,
            "src": "2833:613:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "3582:133:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 592,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3600:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3357_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3435,
                            "src": "3600:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3357_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3357_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3600:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3630:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3600:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3592:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3592:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3706:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 599,
                        "name": "_applicationsQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "3684:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$3357_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3456,
                      "src": "3684:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3357_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3357_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3684:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 590,
                  "id": 603,
                  "nodeType": "Return",
                  "src": "3677:31:20"
                }
              ]
            },
            "documentation": {
              "id": 586,
              "nodeType": "StructuredDocumentation",
              "src": "3452:71:20",
              "text": "@notice Getter for retrieving the currently up for vote application"
            },
            "functionSelector": "e5fde991",
            "id": 605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUpForVote",
            "nameLocation": "3537:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3549:2:20"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "3573:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3572:9:20"
            },
            "scope": 780,
            "src": "3528:187:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 699,
              "nodeType": "Block",
              "src": "3774:821:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 613,
                              "name": "_applicationsQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "3792:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$3357_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3435,
                            "src": "3792:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$3357_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$3357_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3792:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3822:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3792:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3784:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3784:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "3784:40:20"
                },
                {
                  "assignments": [
                    621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 621,
                      "mutability": "mutable",
                      "name": "currentApplication",
                      "nameLocation": "3885:18:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 699,
                      "src": "3877:26:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 620,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3877:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 624,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 622,
                      "name": "getUpForVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "3906:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3906:14:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3877:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 628,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2023,
                                "src": "3954:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3954:12:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 626,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "3938:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$2615_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2207,
                            "src": "3938:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3938:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3971:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3938:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3930:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3930:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4019:48:20",
                        "subExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 636,
                                "name": "votes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "4020:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                                  "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                                }
                              },
                              "id": 638,
                              "indexExpression": {
                                "id": 637,
                                "name": "currentApplication",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "4026:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4020:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$395_storage",
                                "typeString": "struct Penny.Vote storage ref"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ballots",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 394,
                            "src": "4020:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 642,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 640,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "4054:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4054:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4020:47:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4011:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4011:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "4011:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 647,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4108:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4108:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 649,
                            "name": "voteStartTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "4126:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4147:7:20",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "4126:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4108:46:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4100:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "4100:55:20"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 655,
                            "name": "votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "4187:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                              "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                            }
                          },
                          "id": 657,
                          "indexExpression": {
                            "id": 656,
                            "name": "currentApplication",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 621,
                            "src": "4193:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4187:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$395_storage",
                            "typeString": "struct Penny.Vote storage ref"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ballots",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 394,
                        "src": "4187:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 661,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 659,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "4221:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4221:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4187:47:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4237:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4187:54:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "4187:54:20"
                },
                {
                  "condition": {
                    "id": 665,
                    "name": "yayOrNay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 607,
                    "src": "4255:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "4394:123:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 678,
                                "name": "votes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "4408:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                                  "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                                }
                              },
                              "id": 680,
                              "indexExpression": {
                                "id": 679,
                                "name": "currentApplication",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "4414:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4408:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$395_storage",
                                "typeString": "struct Penny.Vote storage ref"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nayAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 390,
                            "src": "4408:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 684,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2023,
                                  "src": "4480:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4480:12:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 682,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2615,
                                "src": "4447:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2615_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2207,
                              "src": "4447:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4447:59:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4408:98:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "4408:98:20"
                      }
                    ]
                  },
                  "id": 690,
                  "nodeType": "IfStatement",
                  "src": "4251:266:20",
                  "trueBody": {
                    "id": 677,
                    "nodeType": "Block",
                    "src": "4265:123:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 666,
                                "name": "votes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "4279:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                                  "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                                }
                              },
                              "id": 668,
                              "indexExpression": {
                                "id": 667,
                                "name": "currentApplication",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "4285:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4279:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$395_storage",
                                "typeString": "struct Penny.Vote storage ref"
                              }
                            },
                            "id": 669,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "yayAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 388,
                            "src": "4279:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 672,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2023,
                                  "src": "4351:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4351:12:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 670,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2615,
                                "src": "4318:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2615_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2207,
                              "src": "4318:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4318:59:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4279:98:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "4279:98:20"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 692,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "4544:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4544:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 694,
                        "name": "yayOrNay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "4558:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 691,
                      "name": "BallotCasted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "4531:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4531:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "EmitStatement",
                  "src": "4526:41:20"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4584:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 611,
                  "id": 698,
                  "nodeType": "Return",
                  "src": "4577:11:20"
                }
              ]
            },
            "functionSelector": "4b9f5c98",
            "id": 700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "3730:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "yayOrNay",
                  "nameLocation": "3740:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "3735:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3735:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3734:15:20"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "3768:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3768:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3767:6:20"
            },
            "scope": 780,
            "src": "3721:874:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "4669:99:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 707,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2023,
                            "src": "4687:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4687:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 709,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "4703:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4687:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4679:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:30:20"
                },
                {
                  "expression": {
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 713,
                      "name": "_applicationContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "4719:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Applications_$339",
                        "typeString": "contract Applications"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 714,
                      "name": "applicationContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "4742:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Applications_$339",
                        "typeString": "contract Applications"
                      }
                    },
                    "src": "4719:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Applications_$339",
                      "typeString": "contract Applications"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "4719:42:20"
                }
              ]
            },
            "functionSelector": "f7402b04",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApplications",
            "nameLocation": "4610:15:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "applicationContract",
                  "nameLocation": "4639:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "4626:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Applications_$339",
                    "typeString": "contract Applications"
                  },
                  "typeName": {
                    "id": 702,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 701,
                      "name": "Applications",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "4626:12:20"
                    },
                    "referencedDeclaration": 339,
                    "src": "4626:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Applications_$339",
                      "typeString": "contract Applications"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4625:34:20"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4669:0:20"
            },
            "scope": 780,
            "src": "4601:167:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "4906:115:20",
              "statements": [
                {
                  "expression": {
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 727,
                      "name": "yayAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "4916:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 728,
                          "name": "votes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4928:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                            "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                          }
                        },
                        "id": 730,
                        "indexExpression": {
                          "id": 729,
                          "name": "_application_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 720,
                          "src": "4934:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4928:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vote_$395_storage",
                          "typeString": "struct Penny.Vote storage ref"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "yayAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 388,
                      "src": "4928:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4916:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "4916:44:20"
                },
                {
                  "expression": {
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 734,
                      "name": "nayAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "4970:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 735,
                          "name": "votes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4982:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$395_storage_$",
                            "typeString": "mapping(uint256 => struct Penny.Vote storage ref)"
                          }
                        },
                        "id": 737,
                        "indexExpression": {
                          "id": 736,
                          "name": "_application_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 720,
                          "src": "4988:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4982:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vote_$395_storage",
                          "typeString": "struct Penny.Vote storage ref"
                        }
                      },
                      "id": 738,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nayAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 390,
                      "src": "4982:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4970:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:44:20"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4783:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "_application_id",
                  "nameLocation": "4800:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "4792:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4791:25:20"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "yayAmount",
                  "nameLocation": "4872:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "4864:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4864:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "nayAmount",
                  "nameLocation": "4891:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "4883:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4883:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4863:38:20"
            },
            "scope": 780,
            "src": "4774:247:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2614
            ],
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "5154:154:20",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 753,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "5168:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5184:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5176:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 754,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5176:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5176:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5168:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 759,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "5190:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5204:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5196:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5196:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5196:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5190:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5168:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 769,
                  "nodeType": "IfStatement",
                  "src": "5164:52:20",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 766,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "5208:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5208:8:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 768,
                    "nodeType": "ExpressionStatement",
                    "src": "5208:8:20"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 773,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "5284:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 774,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "5290:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 775,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "5294:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 770,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5257:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Penny_$780_$",
                          "typeString": "type(contract super Penny)"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2614,
                      "src": "5257:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5257:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "5257:44:20"
                }
              ]
            },
            "id": 779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "5036:20:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 751,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 750,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2615,
                  "src": "5147:5:20"
                }
              ],
              "src": "5138:15:20"
            },
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5074:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "5066:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5066:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5096:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "5088:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5088:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5116:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "5108:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5108:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5056:72:20"
            },
            "returnParameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5154:0:20"
            },
            "scope": 780,
            "src": "5027:281:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 781,
        "src": "567:4743:20"
      }
    ],
    "src": "36:5275:20"
  },
  "bytecode": "",
  "bytecodeSha1": "16650414211c671238f5666d64aec4236bf207a3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "Penny",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "ERC20._approve": {
          "103": [
            9680,
            9699,
            true
          ],
          "104": [
            9758,
            9779,
            true
          ]
        },
        "ERC20._burn": {
          "108": [
            8756,
            8777,
            true
          ],
          "109": [
            8947,
            8971,
            true
          ]
        },
        "ERC20._mint": {
          "110": [
            8106,
            8127,
            true
          ]
        },
        "ERC20._transfer": {
          "105": [
            7265,
            7285,
            true
          ],
          "106": [
            7345,
            7368,
            true
          ],
          "107": [
            7536,
            7559,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "102": [
            6503,
            6538,
            true
          ]
        },
        "ERC20.transferFrom": {
          "101": [
            5054,
            5080,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "Address._verifyCallResult": {
          "99": [
            7226,
            7233,
            false
          ],
          "100": [
            7367,
            7388,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "98": [
            4759,
            4789,
            true
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "EnumerableSet._at": {
          "111": [
            4547,
            4573,
            true
          ]
        }
      },
      "19": {},
      "2": {},
      "20": {
        "Penny._beforeTokenTransfer": {
          "96": [
            5168,
            5186,
            false
          ],
          "97": [
            5190,
            5206,
            false
          ]
        },
        "Penny.getUpForVote": {
          "94": [
            3600,
            3631,
            true
          ]
        },
        "Penny.onERC721Received": {
          "88": [
            3034,
            3079,
            true
          ]
        },
        "Penny.setApplications": {
          "95": [
            4687,
            4708,
            true
          ]
        },
        "Penny.vote": {
          "90": [
            3792,
            3823,
            true
          ],
          "91": [
            3938,
            3972,
            true
          ],
          "92": [
            4019,
            4067,
            true
          ],
          "93": [
            4108,
            4154,
            true
          ]
        },
        "Penny.withdraw": {
          "89": [
            2569,
            2613,
            true
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "112": [
            3550,
            3571,
            false
          ],
          "113": [
            3679,
            3709,
            true
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {
        "ERC20._approve": {
          "46": [
            9672,
            9740
          ],
          "47": [
            9750,
            9818
          ],
          "48": [
            9829,
            9865
          ],
          "49": [
            9875,
            9912
          ]
        },
        "ERC20._burn": {
          "60": [
            8748,
            8815
          ],
          "61": [
            8826,
            8875
          ],
          "62": [
            8939,
            9010
          ],
          "63": [
            9020,
            9064
          ],
          "64": [
            9074,
            9096
          ],
          "65": [
            9107,
            9149
          ]
        },
        "ERC20._mint": {
          "67": [
            8098,
            8163
          ],
          "68": [
            8174,
            8223
          ],
          "69": [
            8234,
            8256
          ],
          "70": [
            8266,
            8294
          ],
          "71": [
            8304,
            8346
          ]
        },
        "ERC20._transfer": {
          "53": [
            7257,
            7327
          ],
          "54": [
            7337,
            7408
          ],
          "55": [
            7419,
            7466
          ],
          "56": [
            7528,
            7602
          ],
          "57": [
            7612,
            7654
          ],
          "58": [
            7664,
            7694
          ],
          "59": [
            7705,
            7745
          ]
        },
        "ERC20.allowance": {
          "3": [
            3995,
            4029
          ]
        },
        "ERC20.approve": {
          "7": [
            4273,
            4312
          ],
          "9": [
            4322,
            4333
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3422,
            3447
          ]
        },
        "ERC20.decimals": {
          "1": [
            3089,
            3098
          ]
        },
        "ERC20.decreaseAllowance": {
          "34": [
            6495,
            6580
          ],
          "35": [
            6590,
            6657
          ],
          "36": [
            6668,
            6679
          ]
        },
        "ERC20.increaseAllowance": {
          "19": [
            5720,
            5800
          ]
        },
        "ERC20.name": {
          "6": [
            2156,
            2168
          ]
        },
        "ERC20.symbol": {
          "33": [
            2369,
            2383
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3245,
            3264
          ]
        },
        "ERC20.transfer": {
          "37": [
            3759,
            3801
          ]
        },
        "ERC20.transferFrom": {
          "15": [
            4929,
            4965
          ],
          "16": [
            5046,
            5125
          ],
          "17": [
            5135,
            5192
          ],
          "18": [
            5203,
            5214
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "Address._verifyCallResult": {
          "86": [
            7249,
            7266
          ],
          "87": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "82": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "83": [
            4751,
            4832
          ],
          "84": [
            4842,
            4902
          ],
          "85": [
            5057,
            5116
          ]
        }
      },
      "13": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "EnumerableSet._add": {
          "74": [
            1753,
            1776
          ],
          "75": [
            1911,
            1951
          ],
          "76": [
            1965,
            1976
          ],
          "77": [
            2007,
            2019
          ]
        },
        "EnumerableSet._at": {
          "80": [
            4539,
            4612
          ],
          "81": [
            4622,
            4647
          ]
        },
        "EnumerableSet._contains": {
          "73": [
            3895,
            3926
          ]
        },
        "EnumerableSet._length": {
          "51": [
            4089,
            4114
          ]
        },
        "EnumerableSet.add": {
          "52": [
            8152,
            8191
          ]
        },
        "EnumerableSet.at": {
          "72": [
            9341,
            9379
          ]
        },
        "EnumerableSet.length": {
          "50": [
            8886,
            8912
          ]
        }
      },
      "19": {},
      "2": {},
      "20": {
        "Penny._beforeTokenTransfer": {
          "78": [
            5208,
            5216
          ]
        },
        "Penny.deposit": {
          "38": [
            2111,
            2169
          ],
          "39": [
            2179,
            2213
          ],
          "40": [
            2223,
            2276
          ],
          "41": [
            2286,
            2297
          ]
        },
        "Penny.getUpForVote": {
          "42": [
            3592,
            3632
          ],
          "43": [
            3677,
            3708
          ]
        },
        "Penny.getVotes": {
          "4": [
            4916,
            4960
          ],
          "5": [
            4970,
            5014
          ]
        },
        "Penny.onERC721Received": {
          "10": [
            3026,
            3080
          ],
          "11": [
            3175,
            3211
          ],
          "12": [
            3225,
            3257
          ],
          "13": [
            3288,
            3320
          ],
          "14": [
            3341,
            3392
          ]
        },
        "Penny.setApplications": {
          "44": [
            4679,
            4709
          ],
          "45": [
            4719,
            4761
          ]
        },
        "Penny.vote": {
          "24": [
            3784,
            3824
          ],
          "25": [
            3930,
            3973
          ],
          "26": [
            4011,
            4068
          ],
          "27": [
            4100,
            4155
          ],
          "28": [
            4187,
            4241
          ],
          "29": [
            4279,
            4377
          ],
          "30": [
            4408,
            4506
          ],
          "31": [
            4526,
            4567
          ],
          "32": [
            4577,
            4588
          ]
        },
        "Penny.withdraw": {
          "20": [
            2561,
            2614
          ],
          "21": [
            2624,
            2686
          ],
          "22": [
            2696,
            2746
          ],
          "23": [
            2756,
            2767
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "79": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "66": [
            915,
            1011
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Address",
    "Applications",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC2771Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC721Holder",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/EnumerableSet",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "567:4743:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1458:46:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11680:25:21;;;11668:2;11653:18;1458:46:20;11635:76:21;4174:166:1;;;;;;:::i;:::-;;:::i;:::-;;;5100:14:21;;5093:22;5075:41;;5063:2;5048:18;4174:166:1;5030:92:21;2833:613:20;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;5289:33:21;;;5271:52;;5259:2;5244:18;2833:613:20;5226:103:21;3165:106:1;3252:12;;3165:106;;1654:33:20;;;;;;4807:414:1;;;;;;:::i;:::-;;:::i;1510:40:20:-;;;;;-1:-1:-1;;;;;1510:40:20;;;;;;-1:-1:-1;;;;;4232:32:21;;;4214:51;;4202:2;4187:18;1510:40:20;4169:102:21;3014:91:1;;;3096:2;12111:36:21;;12099:2;12084:18;3014:91:1;12066:87:21;5616:212:1;;;;;;:::i;:::-;;:::i;2507:267:20:-;;;:::i;3721:874::-;;;;;;:::i;:::-;;:::i;3329:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:1;3403:7;3429:18;;;;;;;;;;;;3329:125;1693:20:20;;;;;-1:-1:-1;;;;;1693:20:20;;;2288:102:1;;;:::i;6315:371::-;;;;;;:::i;:::-;;:::i;3657:172::-;;;;;;:::i;:::-;;:::i;2043:261:20:-;;;;;;:::i;:::-;;:::i;3887:149:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:1;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;3528:187:20;;;:::i;4601:167::-;;;;;;:::i;:::-;;:::i;:::-;;4774:247;;;;;;:::i;:::-;4864:17;4928:22;;;:5;:22;;;;;:32;;4982;;;;;4928;;4774:247;;;;;11890:25:21;;;11946:2;11931:18;;11924:34;;;;11863:18;4774:247:20;11845:119:21;2077:98:1;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:13;4296:7:1;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:1;4174:166;;;;;:::o;2833:613:20:-;3058:20;;3008:6;;-1:-1:-1;;;;;3058:20:20;665:10:13;-1:-1:-1;;;;;3034:45:20;;3026:54;;;;;;3127:27;:18;:25;:27::i;:::-;3123:208;;3196:15;3175:18;:36;3225:32;:18;3248:8;3225:22;:32::i;:::-;;3123:208;;;3288:32;:18;3311:8;3288:22;:32::i;:::-;;3123:208;3346:46;;;11890:25:21;;;3376:15:20;11946:2:21;11931:18;;11924:34;3346:46:20;;11863:18:21;3346:46:20;;;;;;;-1:-1:-1;;;;2833:613:20;;;;;;:::o;4807:414:1:-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:1;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:13;5003:33:1;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;5046:79:1;;8579:2:21;5046:79:1;;;8561:21:21;8618:2;8598:18;;;8591:30;8657:34;8637:18;;;8630:62;-1:-1:-1;;;8708:18:21;;;8701:38;8756:19;;5046:79:1;;;;;;;;;5135:57;5144:6;665:10:13;5166:25:1;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;5210:4;5203:11;;;4807:414;;;;;;:::o;5616:212::-;665:10:13;5704:4:1;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:1;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;2507:267:20:-;665:10:13;2545:4:20;2588:25;;;:11;:25;;;;;;2569:15;:44;;2561:53;;;;;;2624:3;;-1:-1:-1;;;;;2624:3:20;:12;665:10:13;2682:3:20;2651:29;665:10:13;2667:12:20;586:96:13;2651:29:20;:34;;;;:::i;:::-;2624:62;;-1:-1:-1;;;;;;2624:62:20;;;;;;;-1:-1:-1;;;;;4848:32:21;;;2624:62:20;;;4830:51:21;4897:18;;;4890:34;4803:18;;2624:62:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2696:50:20;665:10:13;2716:29:20;665:10:13;2732:12:20;586:96:13;2716:29:20;2696:5;:50::i;:::-;-1:-1:-1;2763:4:20;2507:267;:::o;3721:874::-;3768:4;3822:1;3792:27;:18;:25;:27::i;:::-;:31;3784:40;;;;;;3877:26;3906:14;:12;:14::i;:::-;3877:43;-1:-1:-1;3971:1:20;3938:29;665:10:13;3954:12:20;586:96:13;3938:29:20;:34;;3930:43;;;;;;4020:25;;;;:5;:25;;;;;;;;665:10:13;4020:47:20;;:33;;:47;;;;;;;;4019:48;4011:57;;;;;;4126:18;;:28;;4147:7;4126:28;:::i;:::-;4108:15;:46;4100:55;;;;;;4187:25;;;;:5;:25;;;;;;;;665:10:13;4187:47:20;;:33;;:47;;;;;:54;;-1:-1:-1;;4187:54:20;4237:4;4187:54;;;4251:266;;;;4318:59;665:10:13;4351:12:20;586:96:13;4318:59:20;4279:25;;;;:5;:25;;;;;:98;;:25;;;:98;;;;;:::i;:::-;;;;-1:-1:-1;4251:266:20;;-1:-1:-1;4251:266:20;;4447:59;665:10:13;4480:12:20;586:96:13;4447:59:20;4408:25;;;;:5;:25;;;;;:35;;:98;;:35;;:25;:98;;;;;:::i;:::-;;;;-1:-1:-1;;4251:266:20;4531:36;;5100:14:21;;5093:22;5075:41;;665:10:13;;4531:36:20;;5063:2:21;5048:18;4531:36:20;;;;;;;-1:-1:-1;4584:4:20;;3721:874;-1:-1:-1;;3721:874:20:o;2288:102:1:-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;665:10:13;6408:4:1;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:1;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;6495:85:1;;10970:2:21;6495:85:1;;;10952:21:21;11009:2;10989:18;;;10982:30;11048:34;11028:18;;;11021:62;-1:-1:-1;;;11099:18:21;;;11092:35;11144:19;;6495:85:1;10942:227:21;6495:85:1;6590:67;665:10:13;6613:7:1;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:1;;6315:371;-1:-1:-1;;;6315:371:1:o;3657:172::-;3743:4;3759:42;665:10:13;3783:9:1;3794:6;3759:9;:42::i;2043:261:20:-;2095:4;2111:58;665:10:13;2111:3:20;;-1:-1:-1;;;;;2111:3:20;;2154:4;2161:7;2111:20;:58::i;:::-;2179:34;665:10:13;2199:13:20;:7;2209:3;2199:13;:::i;:::-;2179:5;:34::i;:::-;2251:25;:15;2269:7;2251:25;:::i;:::-;665:10:13;2223:25:20;;;;:11;:25;;;;;:53;-1:-1:-1;2293:4:20;;2043:261;-1:-1:-1;2043:261:20:o;3528:187::-;3573:7;3630:1;3600:27;:18;:25;:27::i;:::-;:31;3592:40;;;;;;3684:24;:18;3706:1;3684:21;:24::i;:::-;3677:31;;3528:187;:::o;4601:167::-;4703:5;;-1:-1:-1;;;;;4703:5:20;665:10:13;-1:-1:-1;;;;;4687:21:20;;4679:30;;;;;;4719:20;:42;;-1:-1:-1;;;;;;4719:42:20;-1:-1:-1;;;;;4719:42:20;;;;;;;;;;4601:167::o;9579:340:1:-;-1:-1:-1;;;;;9680:19:1;;9672:68;;;;-1:-1:-1;;;9672:68:1;;9796:2:21;9672:68:1;;;9778:21:21;9835:2;9815:18;;;9808:30;9874:34;9854:18;;;9847:62;-1:-1:-1;;;9925:18:21;;;9918:34;9969:19;;9672:68:1;9768:226:21;9672:68:1;-1:-1:-1;;;;;9758:21:1;;9750:68;;;;-1:-1:-1;;;9750:68:1;;7362:2:21;9750:68:1;;;7344:21:21;7401:2;7381:18;;;7374:30;7440:34;7420:18;;;7413:62;-1:-1:-1;;;7491:18:21;;;7484:32;7533:19;;9750:68:1;7334:224:21;9750:68:1;-1:-1:-1;;;;;9829:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;11680:25:21;;;9880:32:1;;11653:18:21;9880:32:1;;;;;;;;9579:340;;;:::o;8807:112:18:-;8867:7;8893:19;8901:3;4096:18;;4014:107;8069:129;8136:4;8159:32;8164:3;8184:5;8159:4;:32::i;7160:592:1:-;-1:-1:-1;;;;;7265:20:1;;7257:70;;;;-1:-1:-1;;;7257:70:1;;9390:2:21;7257:70:1;;;9372:21:21;9429:2;9409:18;;;9402:30;9468:34;9448:18;;;9441:62;-1:-1:-1;;;9519:18:21;;;9512:35;9564:19;;7257:70:1;9362:227:21;7257:70:1;-1:-1:-1;;;;;7345:23:1;;7337:71;;;;-1:-1:-1;;;7337:71:1;;6555:2:21;7337:71:1;;;6537:21:21;6594:2;6574:18;;;6567:30;6633:34;6613:18;;;6606:62;-1:-1:-1;;;6684:18:21;;;6677:33;6727:19;;7337:71:1;6527:225:21;7337:71:1;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;-1:-1:-1;;;;;7501:17:1;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;7528:74:1;;7765:2:21;7528:74:1;;;7747:21:21;7804:2;7784:18;;;7777:30;7843:34;7823:18;;;7816:62;-1:-1:-1;;;7894:18:21;;;7887:36;7940:19;;7528:74:1;7737:228:21;7528:74:1;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:1;7719:6;-1:-1:-1;;;;;7710:35:1;;7738:6;7710:35;;;;11680:25:21;;11668:2;11653:18;;11635:76;7710:35:1;;;;;;;;7160:592;;;;:::o;8673:483::-;-1:-1:-1;;;;;8756:21:1;;8748:67;;;;-1:-1:-1;;;8748:67:1;;8988:2:21;8748:67:1;;;8970:21:21;9027:2;9007:18;;;9000:30;9066:34;9046:18;;;9039:62;-1:-1:-1;;;9117:18:21;;;9110:31;9158:19;;8748:67:1;8960:223:21;8748:67:1;8826:49;8847:7;8864:1;8868:6;8826:20;:49::i;:::-;-1:-1:-1;;;;;8911:18:1;;8886:22;8911:18;;;;;;;;;;;8947:24;;;;8939:71;;;;-1:-1:-1;;;8939:71:1;;6959:2:21;8939:71:1;;;6941:21:21;6998:2;6978:18;;;6971:30;7037:34;7017:18;;;7010:62;-1:-1:-1;;;7088:18:21;;;7081:32;7130:19;;8939:71:1;6931:224:21;8939:71:1;9041:23;9058:6;9041:14;:23;:::i;:::-;-1:-1:-1;;;;;9020:18:1;;:9;:18;;;;;;;;;;:44;;;;9074:12;:22;;9090:6;;9020:9;9074:22;;9090:6;;9074:22;:::i;:::-;;;;-1:-1:-1;;9112:37:1;;11680:25:21;;;9138:1:1;;-1:-1:-1;;;;;9112:37:1;;;;;11668:2:21;11653:18;9112:37:1;11635:76:21;815:203:4;942:68;;;-1:-1:-1;;;;;4534:15:21;;;942:68:4;;;4516:34:21;4586:15;;4566:18;;;4559:43;4618:18;;;;4611:34;;;942:68:4;;;;;;;;;;4451:18:21;;;;942:68:4;;;;;;;;-1:-1:-1;;;;;942:68:4;-1:-1:-1;;;942:68:4;;;915:96;;935:5;;915:19;:96::i;:::-;815:203;;;;:::o;8023:330:1:-;-1:-1:-1;;;;;8106:21:1;;8098:65;;;;-1:-1:-1;;;8098:65:1;;11376:2:21;8098:65:1;;;11358:21:21;11415:2;11395:18;;;11388:30;11454:33;11434:18;;;11427:61;11505:18;;8098:65:1;11348:181:21;8098:65:1;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:1;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:1;;11680:25:21;;;-1:-1:-1;;;;;8309:37:1;;;8326:1;;8309:37;;11668:2:21;11653:18;8309:37:1;;;;;;;8023:330;;:::o;9251:135:18:-;9322:7;9356:22;9360:3;9372:5;9356:3;:22::i;1632:404::-;1695:4;3902:19;;;:12;;;:19;;;;;;1711:319;;-1:-1:-1;1753:23:18;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:18;2007:12;;5027:281:20;-1:-1:-1;;;;;5168:18:20;;;;;;:38;;-1:-1:-1;;;;;;5190:16:20;;;;5168:38;5164:52;;;5208:8;;;5164:52;5027:281;;;:::o;3022:751:4:-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:4;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:4;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:4;;10559:2:21;3671:85:4;;;10541:21:21;10598:2;10578:18;;;10571:30;10637:34;10617:18;;;10610:62;-1:-1:-1;;;10688:18:21;;;10681:40;10738:19;;3671:85:4;10531:232:21;4453:201:18;4547:18;;4520:7;;4547:26;-1:-1:-1;4539:73:18;;;;-1:-1:-1;;;4539:73:18;;6152:2:21;4539:73:18;;;6134:21:21;6191:2;6171:18;;;6164:30;6230:34;6210:18;;;6203:62;-1:-1:-1;;;6281:18:21;;;6274:32;6323:19;;4539:73:18;6124:224:21;4539:73:18;4629:3;:11;;4641:5;4629:18;;;;;;-1:-1:-1;;;4629:18:18;;;;;;;;;;;;;;;;;4622:25;;4453:201;;;;:::o;3573:193:12:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;3573:193;-1:-1:-1;;;;3573:193:12:o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:12;;8172:2:21;4751:81:12;;;8154:21:21;8211:2;8191:18;;;8184:30;8250:34;8230:18;;;8223:62;-1:-1:-1;;;8301:18:21;;;8294:36;8347:19;;4751:81:12;8144:228:21;4751:81:12;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:12;;10201:2:21;4842:60:12;;;10183:21:21;10240:2;10220:18;;;10213:30;10279:31;10259:18;;;10252:59;10328:18;;4842:60:12;10173:179:21;4842:60:12;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:12;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:12:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:12;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:12;;;;;;;;:::i;14:257:21:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:398::-;;;405:2;393:9;384:7;380:23;376:32;373:2;;;426:6;418;411:22;373:2;470:9;457:23;489:31;514:5;489:31;:::i;:::-;539:5;-1:-1:-1;596:2:21;581:18;;568:32;609:33;568:32;609:33;:::i;:::-;661:7;651:17;;;363:311;;;;;:::o;679:466::-;;;;825:2;813:9;804:7;800:23;796:32;793:2;;;846:6;838;831:22;793:2;890:9;877:23;909:31;934:5;909:31;:::i;:::-;959:5;-1:-1:-1;1016:2:21;1001:18;;988:32;1029:33;988:32;1029:33;:::i;:::-;783:362;;1081:7;;-1:-1:-1;;;1135:2:21;1120:18;;;;1107:32;;783:362::o;1150:1311::-;;;;;1322:3;1310:9;1301:7;1297:23;1293:33;1290:2;;;1344:6;1336;1329:22;1290:2;1388:9;1375:23;1407:31;1432:5;1407:31;:::i;:::-;1457:5;-1:-1:-1;1514:2:21;1499:18;;1486:32;1527:33;1486:32;1527:33;:::i;:::-;1579:7;-1:-1:-1;1633:2:21;1618:18;;1605:32;;-1:-1:-1;1688:2:21;1673:18;;1660:32;1711:18;1741:14;;;1738:2;;;1773:6;1765;1758:22;1738:2;1816:6;1805:9;1801:22;1791:32;;1861:7;1854:4;1850:2;1846:13;1842:27;1832:2;;1888:6;1880;1873:22;1832:2;1929;1916:16;1951:2;1947;1944:10;1941:2;;;1957:18;;:::i;:::-;2032:2;2026:9;2000:2;2086:13;;-1:-1:-1;;2082:22:21;;;2106:2;2078:31;2074:40;2062:53;;;2130:18;;;2150:22;;;2127:46;2124:2;;;2176:18;;:::i;:::-;2216:10;2212:2;2205:22;2251:2;2243:6;2236:18;2291:7;2286:2;2281;2277;2273:11;2269:20;2266:33;2263:2;;;2317:6;2309;2302:22;2263:2;2378;2373;2369;2365:11;2360:2;2352:6;2348:15;2335:46;2401:15;;;2418:2;2397:24;2390:40;;;;1280:1181;;;;-1:-1:-1;1280:1181:21;;-1:-1:-1;;;;1280:1181:21:o;2466:325::-;;;2595:2;2583:9;2574:7;2570:23;2566:32;2563:2;;;2616:6;2608;2601:22;2563:2;2660:9;2647:23;2679:31;2704:5;2679:31;:::i;:::-;2729:5;2781:2;2766:18;;;;2753:32;;-1:-1:-1;;;2553:238:21:o;2796:251::-;;2905:2;2893:9;2884:7;2880:23;2876:32;2873:2;;;2926:6;2918;2911:22;2873:2;2970:9;2957:23;2989:28;3011:5;2989:28;:::i;3052:255::-;;3172:2;3160:9;3151:7;3147:23;3143:32;3140:2;;;3193:6;3185;3178:22;3140:2;3230:9;3224:16;3249:28;3271:5;3249:28;:::i;3594:190::-;;3706:2;3694:9;3685:7;3681:23;3677:32;3674:2;;;3727:6;3719;3712:22;3674:2;-1:-1:-1;3755:23:21;;3664:120;-1:-1:-1;3664:120:21:o;3789:274::-;;3956:6;3950:13;3972:53;4018:6;4013:3;4006:4;3998:6;3994:17;3972:53;:::i;:::-;4041:16;;;;;3926:137;-1:-1:-1;;3926:137:21:o;5562:383::-;;5711:2;5700:9;5693:21;5743:6;5737:13;5786:6;5781:2;5770:9;5766:18;5759:34;5802:66;5861:6;5856:2;5845:9;5841:18;5836:2;5828:6;5824:15;5802:66;:::i;:::-;5929:2;5908:15;-1:-1:-1;;5904:29:21;5889:45;;;;5936:2;5885:54;;5683:262;-1:-1:-1;;5683:262:21:o;12158:128::-;;12229:1;12225:6;12222:1;12219:13;12216:2;;;12235:18;;:::i;:::-;-1:-1:-1;12271:9:21;;12206:80::o;12291:217::-;;12357:1;12347:2;;-1:-1:-1;;;12382:31:21;;12436:4;12433:1;12426:15;12464:4;12389:1;12454:15;12347:2;-1:-1:-1;12493:9:21;;12337:171::o;12513:168::-;;12619:1;12615;12611:6;12607:14;12604:1;12601:21;12596:1;12589:9;12582:17;12578:45;12575:2;;;12626:18;;:::i;:::-;-1:-1:-1;12666:9:21;;12565:116::o;12686:125::-;;12754:1;12751;12748:8;12745:2;;;12759:18;;:::i;:::-;-1:-1:-1;12796:9:21;;12735:76::o;12816:258::-;12888:1;12898:113;12912:6;12909:1;12906:13;12898:113;;;12988:11;;;12982:18;12969:11;;;12962:39;12934:2;12927:10;12898:113;;;13029:6;13026:1;13023:13;13020:2;;;-1:-1:-1;;13064:1:21;13046:16;;13039:27;12869:205::o;13079:380::-;13158:1;13154:12;;;;13201;;;13222:2;;13276:4;13268:6;13264:17;13254:27;;13222:2;13329;13321:6;13318:14;13298:18;13295:38;13292:2;;;13375:10;13370:3;13366:20;13363:1;13356:31;13410:4;13407:1;13400:15;13438:4;13435:1;13428:15;13292:2;;13134:325;;;:::o;13464:127::-;13525:10;13520:3;13516:20;13513:1;13506:31;13556:4;13553:1;13546:15;13580:4;13577:1;13570:15;13596:127;13657:10;13652:3;13648:20;13645:1;13638:31;13688:4;13685:1;13678:15;13712:4;13709:1;13702:15;13728:131;-1:-1:-1;;;;;13803:31:21;;13793:42;;13783:2;;13849:1;13846;13839:12;13783:2;13773:86;:::o;13864:118::-;13950:5;13943:13;13936:21;13929:5;13926:32;13916:2;;13972:1;13969;13962:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256)": {
        "details": "100 PNY = 1 DAI, DAI is locked for a period of 1 year",
        "notice": "Deposit DAI in exchange for PNY",
        "params": {
          "_amount": "The amount of DAI to deposit"
        },
        "returns": {
          "_0": "true on success"
        }
      },
      "getUpForVote()": {
        "notice": "Getter for retrieving the currently up for vote application"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Called when recieving an application"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdraw()": {
        "details": "Must ensure enough DAI is held by this contract at the time of the withdrawl",
        "notice": "Withdraw deposited DAI after deposit lock has been removed",
        "returns": {
          "_0": "true on success"
        }
      }
    },
    "version": 1
  },
  "offset": [
    567,
    5310
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B9F5C98 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xE5FDE991 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xF7402B04 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x341 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4B9F5C98 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B2 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x18732D79 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x18732D79 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x2BE01D6F EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x253 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x7D729C4 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x37E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x130C JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x185 JUMP JUMPDEST PUSH2 0x185 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x219 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x185 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x219 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x369 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0x1549 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B9 SWAP1 PUSH2 0x1549 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x406 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x406 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D CALLER DUP5 DUP5 PUSH2 0x94C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x454 PUSH1 0x8 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x46D JUMPI TIMESTAMP PUSH1 0xB SSTORE PUSH2 0x467 PUSH1 0x8 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP PUSH2 0x47A JUMP JUMPDEST PUSH2 0x478 PUSH1 0x8 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4AB72FDF5EF9783A267482C1DE51AF8E451F326DD15F63D6BEB8980CF5E7B0B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0 DUP5 DUP5 DUP5 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56E DUP6 CALLER PUSH2 0x569 DUP7 DUP6 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x41D SWAP2 DUP6 SWAP1 PUSH2 0x569 SWAP1 DUP7 SWAP1 PUSH2 0x14AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH2 0x5EB CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST POP PUSH2 0x686 CALLER PUSH2 0x681 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x699 PUSH1 0x8 PUSH2 0xA71 JUMP JUMPDEST GT PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AD PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6BA CALLER PUSH2 0x27C JUMP JUMPDEST LT ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x6FF SWAP1 PUSH3 0x278D00 PUSH2 0x14AF JUMP JUMPDEST TIMESTAMP LT PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP3 ISZERO PUSH2 0x769 JUMPI PUSH2 0x740 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x75E SWAP1 DUP5 SWAP1 PUSH2 0x14AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x799 SWAP1 POP JUMP JUMPDEST PUSH2 0x772 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x793 SWAP1 DUP5 SWAP1 PUSH2 0x14AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE CALLER SWAP1 PUSH32 0xAFEC2BED15137B132CE27A59DD2AE3284DAD307738D7CDB82797CA380902BF6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0x1549 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH2 0x879 CALLER DUP6 PUSH2 0x569 DUP7 DUP6 PUSH2 0x1506 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D CALLER DUP5 DUP5 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AA CALLER PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP6 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x8BE CALLER PUSH2 0x8B9 DUP5 PUSH1 0x64 PUSH2 0x14E7 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x8CA TIMESTAMP PUSH2 0x384 PUSH2 0x14AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8EF PUSH1 0x8 PUSH2 0xA71 JUMP JUMPDEST GT PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x905 PUSH1 0x8 PUSH1 0x0 PUSH2 0xF10 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x421 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP4 DUP4 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH2 0xB58 DUP4 DUP4 DUP4 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH2 0xBDA DUP3 DUP3 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC10 SWAP1 DUP5 SWAP1 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC5C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH2 0xCD6 DUP3 PUSH1 0x0 DUP4 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST PUSH2 0xD54 DUP3 DUP3 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD82 SWAP1 DUP5 SWAP1 PUSH2 0x1506 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE1F SWAP1 DUP6 SWAP1 PUSH2 0xF9A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x551 JUMP JUMPDEST PUSH2 0xE87 PUSH1 0x0 DUP4 DUP4 PUSH2 0xF6B JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xEC6 SWAP1 DUP5 SWAP1 PUSH2 0x14AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP4 DUP4 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xF63 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF8B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1100 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF95 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x100D SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x110F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1117 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x551 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x121F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1234 DUP3 DUP3 DUP7 PUSH2 0x123F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x124E JUMPI POP DUP2 PUSH2 0x574 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x125E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1289 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x574 DUP2 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12B1 DUP2 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x12C1 DUP2 PUSH2 0x15B0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12EB DUP2 PUSH2 0x15B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x12FB DUP2 PUSH2 0x15B0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1321 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x132C DUP2 PUSH2 0x15B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x133C DUP2 PUSH2 0x15B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x135F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1372 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1384 JUMPI PUSH2 0x1384 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13AC JUMPI PUSH2 0x13AC PUSH2 0x159A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x13C4 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1402 DUP2 PUSH2 0x15B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1421 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x574 DUP2 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x574 DUP2 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1459 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1472 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x149B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14C2 JUMPI PUSH2 0x14C2 PUSH2 0x1584 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x1584 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1518 PUSH2 0x1584 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1538 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1520 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE1F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x155D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x157E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15C5 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 EXTCODECOPY 0xBB 0xE8 AND DUP9 PUSH9 0xCC8ABB04062157AFF2 0xC2 PUSH27 0x193414B76759E73783B1FFC44A3A64736F6C634300080300330000 ",
  "pcMap": {
    "0": {
      "offset": [
        567,
        5310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "POP",
      "path": "20"
    },
    "18": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "21": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "LT",
      "path": "20"
    },
    "22": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "29": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "SHR",
      "path": "20"
    },
    "32": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "33": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4B9F5C98"
    },
    "38": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "GT",
      "path": "20"
    },
    "39": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "43": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "44": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "GT",
      "path": "20"
    },
    "50": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "54": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "55": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "60": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "61": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C5"
    },
    "64": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "65": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "66": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB6B55F25"
    },
    "71": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "72": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D8"
    },
    "75": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "76": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "77": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "83": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EB"
    },
    "86": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "87": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "88": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE5FDE991"
    },
    "93": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "94": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x324"
    },
    "97": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "98": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF7402B04"
    },
    "104": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "105": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32C"
    },
    "108": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "109": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "110": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFF981099"
    },
    "115": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "116": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x341"
    },
    "119": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "120": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x142"
    },
    "123": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMP",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "125": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "126": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4B9F5C98"
    },
    "131": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "132": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25B"
    },
    "135": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "136": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "137": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "142": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "143": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26E"
    },
    "146": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "147": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "148": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "154": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x297"
    },
    "157": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "158": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "159": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95D89B41"
    },
    "164": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "165": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AA"
    },
    "168": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "169": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "170": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA457C2D7"
    },
    "175": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "176": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B2"
    },
    "179": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "180": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x142"
    },
    "183": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMP",
      "path": "20"
    },
    "184": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "185": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "186": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18732D79"
    },
    "191": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "GT",
      "path": "20"
    },
    "192": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "196": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "197": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18732D79"
    },
    "202": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "203": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EA"
    },
    "206": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "207": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "208": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "213": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "214": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F3"
    },
    "217": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "218": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "219": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2BE01D6F"
    },
    "224": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "225": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x206"
    },
    "228": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "229": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "230": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x313CE567"
    },
    "235": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "236": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x231"
    },
    "239": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "240": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "241": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x39509351"
    },
    "246": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "247": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x240"
    },
    "250": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "251": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "252": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3CCFD60B"
    },
    "257": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "258": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x253"
    },
    "261": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "262": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x142"
    },
    "265": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMP",
      "path": "20"
    },
    "266": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "268": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6FDDE03"
    },
    "273": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "274": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "278": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "279": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7D729C4"
    },
    "284": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "285": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x165"
    },
    "288": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "289": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "290": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "295": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "296": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x193"
    },
    "299": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "300": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "301": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x150B7A02"
    },
    "306": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "307": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B6"
    },
    "310": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "311": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "312": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "317": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "EQ",
      "path": "20"
    },
    "318": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E2"
    },
    "321": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "322": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "323": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "DUP1",
      "path": "20"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        567,
        5310
      ],
      "op": "REVERT",
      "path": "20"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37E"
    },
    "334": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "343": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "344": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x147C"
    },
    "347": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMP",
      "path": "1"
    },
    "348": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "351": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "352": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "DUP1",
      "path": "1"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SUB",
      "path": "1"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "356": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "RETURN",
      "path": "1"
    },
    "357": {
      "offset": [
        1458,
        1504
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "358": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x185"
    },
    "361": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x173"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "367": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1278"
    },
    "370": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1458,
        1504
      ],
      "op": "JUMP",
      "path": "20"
    },
    "371": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "372": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "374": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "376": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "377": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "379": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "380": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "DUP2",
      "path": "20"
    },
    "381": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "382": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "384": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "385": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "386": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "387": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "DUP2",
      "path": "20"
    },
    "388": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "JUMP",
      "path": "20"
    },
    "389": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "390": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "392": {
      "fn": "ERC20.name",
      "offset": [
        1458,
        1504
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "393": {
      "op": "SWAP1"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "offset": [
        1458,
        1504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15C"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "404": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6"
    },
    "407": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A1"
    },
    "410": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "411": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "413": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E5"
    },
    "416": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMP",
      "path": "1"
    },
    "417": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "418": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x410"
    },
    "421": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMP",
      "path": "1"
    },
    "422": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "423": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "425": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "426": {
      "op": "SWAP1"
    },
    "427": {
      "op": "ISZERO"
    },
    "428": {
      "op": "ISZERO"
    },
    "429": {
      "op": "DUP2"
    },
    "430": {
      "op": "MSTORE"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "433": {
      "op": "ADD"
    },
    "434": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C"
    },
    "437": {
      "op": "JUMP"
    },
    "438": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "439": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C9"
    },
    "442": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C4"
    },
    "445": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "446": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "448": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x130C"
    },
    "451": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        2833,
        3446
      ],
      "op": "JUMP",
      "path": "20"
    },
    "452": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "453": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x427"
    },
    "456": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        2833,
        3446
      ],
      "op": "JUMP",
      "path": "20"
    },
    "457": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "458": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "460": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "467": {
      "op": "SHL"
    },
    "468": {
      "op": "SUB"
    },
    "469": {
      "op": "NOT"
    },
    "470": {
      "op": "SWAP1"
    },
    "471": {
      "op": "SWAP2"
    },
    "472": {
      "op": "AND"
    },
    "473": {
      "op": "DUP2"
    },
    "474": {
      "op": "MSTORE"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "477": {
      "op": "ADD"
    },
    "478": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15C"
    },
    "481": {
      "op": "JUMP"
    },
    "482": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "483": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3252,
        3264
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "485": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3252,
        3264
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "486": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "489": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3165,
        3271
      ],
      "op": "JUMP",
      "path": "1"
    },
    "490": {
      "offset": [
        1654,
        1687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "491": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1654,
        1687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x185"
    },
    "494": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1654,
        1687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "496": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1654,
        1687
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "497": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1654,
        1687
      ],
      "op": "DUP2",
      "path": "20"
    },
    "498": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1654,
        1687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "499": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "500": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6"
    },
    "503": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x201"
    },
    "506": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "507": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "509": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12CC"
    },
    "512": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMP",
      "path": "1"
    },
    "513": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "514": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C3"
    },
    "517": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMP",
      "path": "1"
    },
    "518": {
      "offset": [
        1510,
        1550
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "519": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "521": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "522": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x219"
    },
    "525": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "op": "SUB"
    },
    "534": {
      "offset": [
        1510,
        1550
      ],
      "op": "AND",
      "path": "20"
    },
    "535": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "DUP2",
      "path": "20"
    },
    "536": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "JUMP",
      "path": "20"
    },
    "537": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "538": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "540": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1510,
        1550
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "547": {
      "op": "SHL"
    },
    "548": {
      "op": "SUB"
    },
    "549": {
      "op": "SWAP1"
    },
    "550": {
      "op": "SWAP2"
    },
    "551": {
      "op": "AND"
    },
    "552": {
      "op": "DUP2"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "556": {
      "op": "ADD"
    },
    "557": {
      "offset": [
        1510,
        1550
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15C"
    },
    "560": {
      "op": "JUMP"
    },
    "561": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "562": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "564": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "565": {
      "fn": "ERC20.decimals",
      "offset": [
        3096,
        3098
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "567": {
      "op": "DUP2"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "fn": "ERC20.decimals",
      "offset": [
        3014,
        3105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C"
    },
    "575": {
      "op": "JUMP"
    },
    "576": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "577": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6"
    },
    "580": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E"
    },
    "583": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "584": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "586": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E5"
    },
    "589": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "590": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "591": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57B"
    },
    "594": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "595": {
      "fn": "Penny.withdraw",
      "offset": [
        2507,
        2774
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "596": {
      "fn": "Penny.withdraw",
      "offset": [
        2507,
        2774
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A6"
    },
    "599": {
      "fn": "Penny.withdraw",
      "offset": [
        2507,
        2774
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5B2"
    },
    "602": {
      "fn": "Penny.withdraw",
      "jump": "i",
      "offset": [
        2507,
        2774
      ],
      "op": "JUMP",
      "path": "20"
    },
    "603": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "604": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A6"
    },
    "607": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x269"
    },
    "610": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "611": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "613": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1410"
    },
    "616": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3721,
        4595
      ],
      "op": "JUMP",
      "path": "20"
    },
    "617": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "618": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x68C"
    },
    "621": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3721,
        4595
      ],
      "op": "JUMP",
      "path": "20"
    },
    "622": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "623": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "626": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27C"
    },
    "629": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "630": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "632": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1278"
    },
    "635": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMP",
      "path": "1"
    },
    "636": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "op": "SUB"
    },
    "645": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "AND",
      "path": "1",
      "statement": 2
    },
    "646": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3403,
        3410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "648": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "649": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "650": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "651": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "653": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "654": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "655": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "656": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "658": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "659": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "660": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "661": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "662": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3329,
        3454
      ],
      "op": "JUMP",
      "path": "1"
    },
    "663": {
      "offset": [
        1693,
        1713
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "664": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1693,
        1713
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "666": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1693,
        1713
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "667": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1693,
        1713
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x219"
    },
    "670": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "offset": [
        1693,
        1713
      ],
      "op": "AND",
      "path": "20"
    },
    "680": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1693,
        1713
      ],
      "op": "DUP2",
      "path": "20"
    },
    "681": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1693,
        1713
      ],
      "op": "JUMP",
      "path": "20"
    },
    "682": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "683": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "686": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D9"
    },
    "689": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2288,
        2390
      ],
      "op": "JUMP",
      "path": "1"
    },
    "690": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "691": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6"
    },
    "694": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C0"
    },
    "697": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "698": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "700": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E5"
    },
    "703": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "704": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "705": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E8"
    },
    "708": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "709": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "710": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6"
    },
    "713": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D3"
    },
    "716": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "717": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "719": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E5"
    },
    "722": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "723": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "724": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x883"
    },
    "727": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "728": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "729": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A6"
    },
    "732": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E6"
    },
    "735": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "736": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "738": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1448"
    },
    "741": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2043,
        2304
      ],
      "op": "JUMP",
      "path": "20"
    },
    "742": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "743": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x890"
    },
    "746": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2043,
        2304
      ],
      "op": "JUMP",
      "path": "20"
    },
    "747": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "748": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "751": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F9"
    },
    "754": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "755": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "757": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1294"
    },
    "760": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMP",
      "path": "1"
    },
    "761": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 3
    },
    "771": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP3",
      "path": "1"
    },
    "772": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "AND",
      "path": "1"
    },
    "773": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        3983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "775": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "776": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "777": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "778": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "780": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "782": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "783": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "784": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "785": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "787": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP1",
      "path": "1"
    },
    "788": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP4",
      "path": "1"
    },
    "789": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4020
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "790": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "791": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "792": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "793": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "AND",
      "path": "1"
    },
    "794": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "DUP3",
      "path": "1"
    },
    "795": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "796": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "797": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "798": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "799": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "800": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "801": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "802": {
      "fn": "ERC20.allowance",
      "offset": [
        4002,
        4029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "803": {
      "fn": "ERC20.allowance",
      "offset": [
        3887,
        4036
      ],
      "op": "JUMP",
      "path": "1"
    },
    "804": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3528,
        3715
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "805": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3528,
        3715
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x185"
    },
    "808": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3528,
        3715
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8E2"
    },
    "811": {
      "fn": "Penny.getUpForVote",
      "jump": "i",
      "offset": [
        3528,
        3715
      ],
      "op": "JUMP",
      "path": "20"
    },
    "812": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "813": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33F"
    },
    "816": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33A"
    },
    "819": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "820": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "822": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1278"
    },
    "825": {
      "fn": "Penny.setApplications",
      "jump": "i",
      "offset": [
        4601,
        4768
      ],
      "op": "JUMP",
      "path": "20"
    },
    "826": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "827": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x90A"
    },
    "830": {
      "fn": "Penny.setApplications",
      "jump": "i",
      "offset": [
        4601,
        4768
      ],
      "op": "JUMP",
      "path": "20"
    },
    "831": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "832": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "STOP",
      "path": "20"
    },
    "833": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "834": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x369"
    },
    "837": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34F"
    },
    "840": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "841": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "843": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1448"
    },
    "846": {
      "fn": "Penny.getVotes",
      "jump": "i",
      "offset": [
        4774,
        5021
      ],
      "op": "JUMP",
      "path": "20"
    },
    "847": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "848": {
      "fn": "Penny.getVotes",
      "offset": [
        4864,
        4881
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "850": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 4
    },
    "851": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "DUP2",
      "path": "20"
    },
    "852": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "853": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4933
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "855": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "857": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "858": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "860": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "861": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4950
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "862": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4960
      ],
      "op": "DUP1",
      "path": "20"
    },
    "863": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "864": {
      "fn": "Penny.getVotes",
      "offset": [
        4982,
        5014
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 5,
      "value": "0x1"
    },
    "866": {
      "fn": "Penny.getVotes",
      "offset": [
        4982,
        5014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "867": {
      "fn": "Penny.getVotes",
      "offset": [
        4982,
        5014
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "868": {
      "fn": "Penny.getVotes",
      "offset": [
        4982,
        5014
      ],
      "op": "ADD",
      "path": "20"
    },
    "869": {
      "fn": "Penny.getVotes",
      "offset": [
        4982,
        5014
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "870": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "871": {
      "fn": "Penny.getVotes",
      "offset": [
        4928,
        4960
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "872": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "JUMP",
      "path": "20"
    },
    "873": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "874": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "876": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "DUP1",
      "path": "20"
    },
    "877": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "878": {
      "op": "SWAP3"
    },
    "879": {
      "op": "DUP4"
    },
    "880": {
      "op": "MSTORE"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "883": {
      "op": "DUP4"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "op": "SWAP2"
    },
    "886": {
      "op": "SWAP1"
    },
    "887": {
      "op": "SWAP2"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "fn": "Penny.getVotes",
      "offset": [
        4774,
        5021
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15C"
    },
    "893": {
      "op": "JUMP"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        2131,
        2144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "897": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x3"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "901": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38D"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1549"
    },
    "908": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "913": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "916": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DIV",
      "path": "1"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MUL",
      "path": "1"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "928": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "929": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "932": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "941": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B9"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1549"
    },
    "952": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x406"
    },
    "959": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "LT",
      "path": "1"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DB"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "971": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "972": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "973": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "974": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DIV",
      "path": "1"
    },
    "975": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MUL",
      "path": "1"
    },
    "976": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "977": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "978": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "981": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "982": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "983": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x406"
    },
    "986": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "987": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "988": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "989": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "990": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "991": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "992": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "994": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "995": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "997": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "999": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1000": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1001": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1002": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1003": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1004": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1005": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1006": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1007": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1009": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "1010": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1011": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1013": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "1014": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1015": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1016": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "GT",
      "path": "1"
    },
    "1017": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E9"
    },
    "1020": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1021": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1022": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1023": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SUB",
      "path": "1"
    },
    "1024": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1026": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "AND",
      "path": "1"
    },
    "1027": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1028": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "ADD",
      "path": "1"
    },
    "1029": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1030": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1031": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "1032": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "1033": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "1034": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "1035": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "1036": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1037": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2168
      ],
      "op": "POP",
      "path": "1"
    },
    "1038": {
      "fn": "ERC20.name",
      "offset": [
        2077,
        2175
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1039": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2077,
        2175
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1040": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1041": {
      "fn": "ERC20.approve",
      "offset": [
        4257,
        4261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1043": {
      "fn": "ERC20.approve",
      "offset": [
        4273,
        4312
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x41D"
    },
    "1046": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 8
    },
    "1047": {
      "fn": "ERC20.approve",
      "offset": [
        4296,
        4303
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1048": {
      "fn": "ERC20.approve",
      "offset": [
        4305,
        4311
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1049": {
      "fn": "ERC20.approve",
      "offset": [
        4273,
        4281
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x94C"
    },
    "1052": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4273,
        4312
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1053": {
      "fn": "ERC20.approve",
      "offset": [
        4273,
        4312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "fn": "ERC20.approve",
      "offset": [
        4329,
        4333
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x1"
    },
    "1057": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1058": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1059": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1060": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "POP",
      "path": "1"
    },
    "1061": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4340
      ],
      "op": "POP",
      "path": "1"
    },
    "1062": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4174,
        4340
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1063": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1064": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3058,
        3078
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 10,
      "value": "0x7"
    },
    "1066": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3058,
        3078
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1067": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1069": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3008,
        3014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3058,
        3078
      ],
      "op": "AND",
      "path": "20"
    },
    "1079": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "op": "SUB"
    },
    "1088": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3034,
        3079
      ],
      "op": "AND",
      "path": "20"
    },
    "1089": {
      "branch": 88,
      "fn": "Penny.onERC721Received",
      "offset": [
        3034,
        3079
      ],
      "op": "EQ",
      "path": "20"
    },
    "1090": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3026,
        3080
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x44A"
    },
    "1093": {
      "branch": 88,
      "fn": "Penny.onERC721Received",
      "offset": [
        3026,
        3080
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1094": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3026,
        3080
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1096": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3026,
        3080
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1097": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3026,
        3080
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1098": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3026,
        3080
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1099": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3127,
        3154
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x454"
    },
    "1102": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3127,
        3145
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1104": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3127,
        3152
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA71"
    },
    "1107": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        3127,
        3154
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1108": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3127,
        3154
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1109": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3123,
        3331
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x46D"
    },
    "1112": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3123,
        3331
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1113": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3196,
        3211
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 11
    },
    "1114": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3175,
        3193
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1116": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3175,
        3211
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1117": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3225,
        3257
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 12,
      "value": "0x467"
    },
    "1120": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3225,
        3243
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1122": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3248,
        3256
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1123": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3225,
        3247
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA7B"
    },
    "1126": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        3225,
        3257
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1127": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3225,
        3257
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1128": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3225,
        3257
      ],
      "op": "POP",
      "path": "20"
    },
    "1129": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3123,
        3331
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x47A"
    },
    "1132": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3123,
        3331
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1133": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3123,
        3331
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1134": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3288,
        3320
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 13,
      "value": "0x478"
    },
    "1137": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3288,
        3306
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1139": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3311,
        3319
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1140": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3288,
        3310
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA7B"
    },
    "1143": {
      "fn": "Penny.onERC721Received",
      "jump": "i",
      "offset": [
        3288,
        3320
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1144": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3288,
        3320
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1145": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3288,
        3320
      ],
      "op": "POP",
      "path": "20"
    },
    "1146": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3123,
        3331
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1147": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 14,
      "value": "0x40"
    },
    "1149": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1150": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1151": {
      "op": "DUP5"
    },
    "1152": {
      "op": "DUP2"
    },
    "1153": {
      "op": "MSTORE"
    },
    "1154": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3376,
        3391
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1157": {
      "op": "DUP3"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "op": "MSTORE"
    },
    "1160": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x4AB72FDF5EF9783A267482C1DE51AF8E451F326DD15F63D6BEB8980CF5E7B0B"
    },
    "1193": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1197": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1198": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1199": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1200": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "SUB",
      "path": "20"
    },
    "1201": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1202": {
      "fn": "Penny.onERC721Received",
      "offset": [
        3346,
        3392
      ],
      "op": "LOG1",
      "path": "20"
    },
    "1203": {
      "op": "POP"
    },
    "1204": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1213": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1214": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "POP",
      "path": "20"
    },
    "1215": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "POP",
      "path": "20"
    },
    "1216": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "POP",
      "path": "20"
    },
    "1217": {
      "fn": "Penny.onERC721Received",
      "offset": [
        2833,
        3446
      ],
      "op": "POP",
      "path": "20"
    },
    "1218": {
      "fn": "Penny.onERC721Received",
      "jump": "o",
      "offset": [
        2833,
        3446
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1219": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1220": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        4917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1222": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4929,
        4965
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 15,
      "value": "0x4D0"
    },
    "1225": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4939,
        4945
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1226": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4947,
        4956
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1227": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4958,
        4964
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1228": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4929,
        4938
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA87"
    },
    "1231": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4929,
        4965
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1232": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4929,
        4965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "op": "SUB"
    },
    "1241": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1242": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "AND",
      "path": "1"
    },
    "1243": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4976,
        5000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1246": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1250": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1254": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1259": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5022
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1260": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1262": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1266": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1268": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5036
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1269": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 16
    },
    "1270": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "LT",
      "path": "1"
    },
    "1272": {
      "branch": 101,
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5080
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55A"
    },
    "1276": {
      "branch": 101,
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1279": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1286": {
      "op": "SHL"
    },
    "1287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1293": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1294": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "ADD",
      "path": "1"
    },
    "1295": {
      "op": "MSTORE"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1300": {
      "op": "DUP3"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1338": {
      "op": "DUP3"
    },
    "1339": {
      "op": "ADD"
    },
    "1340": {
      "op": "MSTORE"
    },
    "1341": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1355": {
      "op": "DUP3"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "MSTORE"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1362": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1364": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1365": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1366": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1367": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "SUB",
      "path": "1"
    },
    "1368": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1369": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1370": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5046,
        5125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1371": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5192
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 17,
      "value": "0x56E"
    },
    "1374": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5144,
        5150
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1375": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1376": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x569"
    },
    "1379": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5185,
        5191
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1380": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5182
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1381": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1506"
    },
    "1384": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5166,
        5191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1385": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5166,
        5191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1386": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x94C"
    },
    "1389": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5135,
        5192
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1390": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5192
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1391": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5210,
        5214
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x1"
    },
    "1393": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5214
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1394": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5214
      ],
      "op": "POP",
      "path": "1"
    },
    "1395": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5203,
        5214
      ],
      "op": "POP",
      "path": "1"
    },
    "1396": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1397": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1398": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1399": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "POP",
      "path": "1"
    },
    "1400": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "POP",
      "path": "1"
    },
    "1401": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4807,
        5221
      ],
      "op": "POP",
      "path": "1"
    },
    "1402": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4807,
        5221
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1403": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5616,
        5828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1404": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1405": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5704,
        5708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1407": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 19
    },
    "1408": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1409": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1410": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1412": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1414": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1415": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1416": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1417": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1419": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1420": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1421": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5777
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "SUB"
    },
    "1430": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1431": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "AND",
      "path": "1"
    },
    "1432": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1433": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1434": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1435": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1436": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1437": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1438": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1439": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5786
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1440": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5704,
        5708
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1441": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5704,
        5708
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1442": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5720,
        5800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41D"
    },
    "1445": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5720,
        5800
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1446": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5743,
        5750
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1447": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5743,
        5750
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1448": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x569"
    },
    "1451": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1452": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5789,
        5799
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1453": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5789,
        5799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1454": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5752,
        5799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14AF"
    },
    "1457": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5752,
        5799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1458": {
      "fn": "Penny.withdraw",
      "offset": [
        2507,
        2774
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1459": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1460": {
      "fn": "Penny.withdraw",
      "offset": [
        2545,
        2549
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1462": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 20
    },
    "1463": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1464": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1465": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2599
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1467": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1469": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1470": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1472": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1473": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1474": {
      "fn": "Penny.withdraw",
      "offset": [
        2588,
        2613
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1475": {
      "fn": "Penny.withdraw",
      "offset": [
        2569,
        2584
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "1476": {
      "fn": "Penny.withdraw",
      "offset": [
        2569,
        2613
      ],
      "op": "LT",
      "path": "20"
    },
    "1477": {
      "branch": 89,
      "fn": "Penny.withdraw",
      "offset": [
        2569,
        2613
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1478": {
      "fn": "Penny.withdraw",
      "offset": [
        2561,
        2614
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5CE"
    },
    "1481": {
      "branch": 89,
      "fn": "Penny.withdraw",
      "offset": [
        2561,
        2614
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1482": {
      "fn": "Penny.withdraw",
      "offset": [
        2561,
        2614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1484": {
      "fn": "Penny.withdraw",
      "offset": [
        2561,
        2614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1485": {
      "fn": "Penny.withdraw",
      "offset": [
        2561,
        2614
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1486": {
      "fn": "Penny.withdraw",
      "offset": [
        2561,
        2614
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1487": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2627
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 21,
      "value": "0x5"
    },
    "1489": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2627
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1496": {
      "op": "SHL"
    },
    "1497": {
      "op": "SUB"
    },
    "1498": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2627
      ],
      "op": "AND",
      "path": "20"
    },
    "1499": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2636
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "1504": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1505": {
      "fn": "Penny.withdraw",
      "offset": [
        2682,
        2685
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "1507": {
      "fn": "Penny.withdraw",
      "offset": [
        2651,
        2680
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5EB"
    },
    "1510": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1511": {
      "fn": "Penny.withdraw",
      "offset": [
        2667,
        2679
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27C"
    },
    "1514": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1515": {
      "fn": "Penny.withdraw",
      "offset": [
        2651,
        2680
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1516": {
      "fn": "Penny.withdraw",
      "offset": [
        2651,
        2685
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5F5"
    },
    "1519": {
      "fn": "Penny.withdraw",
      "offset": [
        2651,
        2685
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1520": {
      "fn": "Penny.withdraw",
      "offset": [
        2651,
        2685
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1521": {
      "fn": "Penny.withdraw",
      "offset": [
        2651,
        2685
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14C7"
    },
    "1524": {
      "fn": "Penny.withdraw",
      "jump": "i",
      "offset": [
        2651,
        2685
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1525": {
      "fn": "Penny.withdraw",
      "offset": [
        2651,
        2685
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1526": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1528": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "SUB"
    },
    "1537": {
      "op": "NOT"
    },
    "1538": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "1540": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1541": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1542": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "SHL",
      "path": "20"
    },
    "1543": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "AND",
      "path": "20"
    },
    "1544": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1545": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "SUB"
    },
    "1554": {
      "op": "SWAP1"
    },
    "1555": {
      "op": "SWAP3"
    },
    "1556": {
      "op": "AND"
    },
    "1557": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1559": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1560": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ADD",
      "path": "20"
    },
    "1561": {
      "op": "MSTORE"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1564": {
      "op": "DUP3"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "MSTORE"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1569": {
      "op": "ADD"
    },
    "1570": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1572": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1574": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1575": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1576": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1577": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "SUB",
      "path": "20"
    },
    "1578": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1579": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1581": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1582": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1583": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "1584": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1585": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1586": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1587": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x63B"
    },
    "1590": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1591": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1593": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1594": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1595": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1596": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "POP",
      "path": "20"
    },
    "1597": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "GAS",
      "path": "20"
    },
    "1598": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "CALL",
      "path": "20"
    },
    "1599": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1600": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1601": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1602": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x64F"
    },
    "1605": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1606": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1607": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1609": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1610": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "1611": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1612": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1614": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1615": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1616": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "POP",
      "path": "20"
    },
    "1617": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "POP",
      "path": "20"
    },
    "1618": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "POP",
      "path": "20"
    },
    "1619": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "POP",
      "path": "20"
    },
    "1620": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1622": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1623": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1624": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "1626": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "NOT",
      "path": "20"
    },
    "1627": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "1629": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1630": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ADD",
      "path": "20"
    },
    "1631": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "AND",
      "path": "20"
    },
    "1632": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1633": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ADD",
      "path": "20"
    },
    "1634": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1635": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1637": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1638": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "POP",
      "path": "20"
    },
    "1639": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1640": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "ADD",
      "path": "20"
    },
    "1641": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1642": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x673"
    },
    "1645": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1646": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1647": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x142C"
    },
    "1650": {
      "fn": "Penny.withdraw",
      "jump": "i",
      "offset": [
        2624,
        2686
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1651": {
      "fn": "Penny.withdraw",
      "offset": [
        2624,
        2686
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "fn": "Penny.withdraw",
      "offset": [
        2696,
        2746
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 22,
      "value": "0x686"
    },
    "1656": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1657": {
      "fn": "Penny.withdraw",
      "offset": [
        2716,
        2745
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x681"
    },
    "1660": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1661": {
      "fn": "Penny.withdraw",
      "offset": [
        2732,
        2744
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27C"
    },
    "1664": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1665": {
      "fn": "Penny.withdraw",
      "offset": [
        2716,
        2745
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1666": {
      "fn": "Penny.withdraw",
      "offset": [
        2696,
        2701
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC6A"
    },
    "1669": {
      "fn": "Penny.withdraw",
      "jump": "i",
      "offset": [
        2696,
        2746
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1670": {
      "fn": "Penny.withdraw",
      "offset": [
        2696,
        2746
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "fn": "Penny.withdraw",
      "offset": [
        2763,
        2767
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 23,
      "value": "0x1"
    },
    "1674": {
      "fn": "Penny.withdraw",
      "offset": [
        2507,
        2774
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1675": {
      "fn": "Penny.withdraw",
      "jump": "o",
      "offset": [
        2507,
        2774
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1676": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1677": {
      "fn": "Penny.vote",
      "offset": [
        3768,
        3772
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1679": {
      "fn": "Penny.vote",
      "offset": [
        3822,
        3823
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 24
    },
    "1680": {
      "fn": "Penny.vote",
      "offset": [
        3792,
        3819
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x699"
    },
    "1683": {
      "fn": "Penny.vote",
      "offset": [
        3792,
        3810
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1685": {
      "fn": "Penny.vote",
      "offset": [
        3792,
        3817
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA71"
    },
    "1688": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3792,
        3819
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1689": {
      "fn": "Penny.vote",
      "offset": [
        3792,
        3819
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1690": {
      "branch": 90,
      "fn": "Penny.vote",
      "offset": [
        3792,
        3823
      ],
      "op": "GT",
      "path": "20"
    },
    "1691": {
      "fn": "Penny.vote",
      "offset": [
        3784,
        3824
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6A3"
    },
    "1694": {
      "branch": 90,
      "fn": "Penny.vote",
      "offset": [
        3784,
        3824
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1695": {
      "fn": "Penny.vote",
      "offset": [
        3784,
        3824
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1697": {
      "fn": "Penny.vote",
      "offset": [
        3784,
        3824
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1698": {
      "fn": "Penny.vote",
      "offset": [
        3784,
        3824
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1699": {
      "fn": "Penny.vote",
      "offset": [
        3784,
        3824
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1700": {
      "fn": "Penny.vote",
      "offset": [
        3877,
        3903
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1702": {
      "fn": "Penny.vote",
      "offset": [
        3906,
        3920
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6AD"
    },
    "1705": {
      "fn": "Penny.vote",
      "offset": [
        3906,
        3918
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8E2"
    },
    "1708": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        3906,
        3920
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1709": {
      "fn": "Penny.vote",
      "offset": [
        3906,
        3920
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1710": {
      "fn": "Penny.vote",
      "offset": [
        3877,
        3920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "fn": "Penny.vote",
      "offset": [
        3971,
        3972
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 25,
      "value": "0x0"
    },
    "1714": {
      "fn": "Penny.vote",
      "offset": [
        3938,
        3967
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6BA"
    },
    "1717": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1718": {
      "fn": "Penny.vote",
      "offset": [
        3954,
        3966
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27C"
    },
    "1721": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1722": {
      "fn": "Penny.vote",
      "offset": [
        3938,
        3967
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1723": {
      "fn": "Penny.vote",
      "offset": [
        3938,
        3972
      ],
      "op": "LT",
      "path": "20"
    },
    "1724": {
      "branch": 91,
      "fn": "Penny.vote",
      "offset": [
        3938,
        3972
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1725": {
      "fn": "Penny.vote",
      "offset": [
        3930,
        3973
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6C5"
    },
    "1728": {
      "branch": 91,
      "fn": "Penny.vote",
      "offset": [
        3930,
        3973
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1729": {
      "fn": "Penny.vote",
      "offset": [
        3930,
        3973
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1731": {
      "fn": "Penny.vote",
      "offset": [
        3930,
        3973
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1732": {
      "fn": "Penny.vote",
      "offset": [
        3930,
        3973
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1733": {
      "fn": "Penny.vote",
      "offset": [
        3930,
        3973
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1734": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 26,
      "value": "0x0"
    },
    "1736": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1737": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1738": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1739": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4025
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1741": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1743": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1744": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1745": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1746": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1748": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1749": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1750": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4045
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1751": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1752": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1753": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1754": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4053
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1756": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4053
      ],
      "op": "ADD",
      "path": "20"
    },
    "1757": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1758": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1759": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1760": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1761": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1762": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1763": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1765": {
      "fn": "Penny.vote",
      "offset": [
        4020,
        4067
      ],
      "op": "AND",
      "path": "20"
    },
    "1766": {
      "branch": 92,
      "fn": "Penny.vote",
      "offset": [
        4019,
        4067
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1767": {
      "fn": "Penny.vote",
      "offset": [
        4011,
        4068
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6EF"
    },
    "1770": {
      "branch": 92,
      "fn": "Penny.vote",
      "offset": [
        4011,
        4068
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1771": {
      "fn": "Penny.vote",
      "offset": [
        4011,
        4068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1773": {
      "fn": "Penny.vote",
      "offset": [
        4011,
        4068
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1774": {
      "fn": "Penny.vote",
      "offset": [
        4011,
        4068
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1775": {
      "fn": "Penny.vote",
      "offset": [
        4011,
        4068
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1776": {
      "fn": "Penny.vote",
      "offset": [
        4126,
        4144
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 27,
      "value": "0xB"
    },
    "1778": {
      "fn": "Penny.vote",
      "offset": [
        4126,
        4144
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1779": {
      "fn": "Penny.vote",
      "offset": [
        4126,
        4154
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6FF"
    },
    "1782": {
      "fn": "Penny.vote",
      "offset": [
        4126,
        4154
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1783": {
      "fn": "Penny.vote",
      "offset": [
        4147,
        4154
      ],
      "op": "PUSH3",
      "path": "20",
      "value": "0x278D00"
    },
    "1787": {
      "fn": "Penny.vote",
      "offset": [
        4126,
        4154
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14AF"
    },
    "1790": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        4126,
        4154
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1791": {
      "fn": "Penny.vote",
      "offset": [
        4126,
        4154
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1792": {
      "fn": "Penny.vote",
      "offset": [
        4108,
        4123
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "1793": {
      "branch": 93,
      "fn": "Penny.vote",
      "offset": [
        4108,
        4154
      ],
      "op": "LT",
      "path": "20"
    },
    "1794": {
      "fn": "Penny.vote",
      "offset": [
        4100,
        4155
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x70A"
    },
    "1797": {
      "branch": 93,
      "fn": "Penny.vote",
      "offset": [
        4100,
        4155
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1798": {
      "fn": "Penny.vote",
      "offset": [
        4100,
        4155
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1800": {
      "fn": "Penny.vote",
      "offset": [
        4100,
        4155
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1801": {
      "fn": "Penny.vote",
      "offset": [
        4100,
        4155
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1802": {
      "fn": "Penny.vote",
      "offset": [
        4100,
        4155
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1803": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 28,
      "value": "0x0"
    },
    "1805": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1806": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1807": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1808": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4192
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1810": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1812": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1813": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1814": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1815": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1817": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1818": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1819": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4212
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1820": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1821": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4234
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1822": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4234
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1823": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4220
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1825": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4220
      ],
      "op": "ADD",
      "path": "20"
    },
    "1826": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4234
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1827": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4234
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1828": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4234
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1829": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4234
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1830": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4234
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1831": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4241
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1832": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4241
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1835": {
      "op": "NOT"
    },
    "1836": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4241
      ],
      "op": "AND",
      "path": "20"
    },
    "1837": {
      "fn": "Penny.vote",
      "offset": [
        4237,
        4241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1839": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4241
      ],
      "op": "OR",
      "path": "20"
    },
    "1840": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1841": {
      "fn": "Penny.vote",
      "offset": [
        4187,
        4241
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1842": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1843": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1844": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x769"
    },
    "1847": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1848": {
      "fn": "Penny.vote",
      "offset": [
        4318,
        4377
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 29,
      "value": "0x740"
    },
    "1851": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1852": {
      "fn": "Penny.vote",
      "offset": [
        4351,
        4363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27C"
    },
    "1855": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1856": {
      "fn": "Penny.vote",
      "offset": [
        4318,
        4377
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1857": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1859": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1860": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1861": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1862": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4284
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1864": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1866": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1867": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1869": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1870": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1871": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1872": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1873": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1874": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1875": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4304
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1876": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x75E"
    },
    "1879": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1880": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1881": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1882": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14AF"
    },
    "1885": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        4279,
        4377
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1886": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1887": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1888": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1889": {
      "fn": "Penny.vote",
      "offset": [
        4279,
        4377
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x799"
    },
    "1894": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1897": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1898": {
      "fn": "Penny.vote",
      "offset": [
        4447,
        4506
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 30,
      "value": "0x772"
    },
    "1901": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1902": {
      "fn": "Penny.vote",
      "offset": [
        4480,
        4492
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27C"
    },
    "1905": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1906": {
      "fn": "Penny.vote",
      "offset": [
        4447,
        4506
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1907": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1909": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1910": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1911": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1912": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4413
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1914": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1916": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1917": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1919": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1920": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1921": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4443
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1923": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4443
      ],
      "op": "ADD",
      "path": "20"
    },
    "1924": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1925": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1926": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4443
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1927": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4443
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1928": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4433
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1929": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x793"
    },
    "1932": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1933": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1934": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1935": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14AF"
    },
    "1938": {
      "fn": "Penny.vote",
      "jump": "i",
      "offset": [
        4408,
        4506
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1939": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1940": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1941": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1942": {
      "fn": "Penny.vote",
      "offset": [
        4408,
        4506
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1943": {
      "op": "POP"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "fn": "Penny.vote",
      "offset": [
        4251,
        4517
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1946": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 31,
      "value": "0x40"
    },
    "1948": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1949": {
      "op": "DUP4"
    },
    "1950": {
      "op": "ISZERO"
    },
    "1951": {
      "op": "ISZERO"
    },
    "1952": {
      "op": "DUP2"
    },
    "1953": {
      "op": "MSTORE"
    },
    "1954": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1955": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1956": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xAFEC2BED15137B132CE27A59DD2AE3284DAD307738D7CDB82797CA380902BF6E"
    },
    "1989": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1995": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1996": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1997": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1998": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "SUB",
      "path": "20"
    },
    "1999": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2000": {
      "fn": "Penny.vote",
      "offset": [
        4531,
        4567
      ],
      "op": "LOG2",
      "path": "20"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "fn": "Penny.vote",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 32,
      "value": "0x1"
    },
    "2004": {
      "fn": "Penny.vote",
      "offset": [
        4584,
        4588
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2005": {
      "fn": "Penny.vote",
      "offset": [
        3721,
        4595
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "fn": "Penny.vote",
      "jump": "o",
      "offset": [
        3721,
        4595
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2009": {
      "fn": "ERC20.symbol",
      "offset": [
        2288,
        2390
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2010": {
      "fn": "ERC20.symbol",
      "offset": [
        2344,
        2357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2012": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2383
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x4"
    },
    "2014": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2015": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2016": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38D"
    },
    "2019": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2020": {
      "fn": "ERC20.symbol",
      "offset": [
        2369,
        2383
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1549"
    },
    "2023": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2369,
        2383
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2025": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6408,
        6412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2029": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2031": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2035": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2036": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2037": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2038": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2040": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2041": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2042": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6476
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2052": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "AND",
      "path": "1"
    },
    "2053": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2054": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2055": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2058": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2059": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6451,
        6485
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 34
    },
    "2062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2063": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "LT",
      "path": "1"
    },
    "2064": {
      "branch": 102,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6538
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86A"
    },
    "2068": {
      "branch": 102,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2069": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2078": {
      "op": "SHL"
    },
    "2079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2085": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "ADD",
      "path": "1"
    },
    "2087": {
      "op": "MSTORE"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2092": {
      "op": "DUP3"
    },
    "2093": {
      "op": "ADD"
    },
    "2094": {
      "op": "MSTORE"
    },
    "2095": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2130": {
      "op": "DUP3"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "op": "MSTORE"
    },
    "2133": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "ADD"
    },
    "2146": {
      "op": "MSTORE"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "2153": {
      "op": "JUMP"
    },
    "2154": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6495,
        6580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2155": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6590,
        6657
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0x879"
    },
    "2158": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2159": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6613,
        6620
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2160": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6622,
        6656
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x569"
    },
    "2163": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6641,
        6656
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2164": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6622,
        6638
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2165": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6622,
        6656
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1506"
    },
    "2168": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6622,
        6656
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6590,
        6657
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6679
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x1"
    },
    "2173": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6679
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6315,
        6686
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6315,
        6686
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2179": {
      "fn": "ERC20.transfer",
      "offset": [
        3657,
        3829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2180": {
      "fn": "ERC20.transfer",
      "offset": [
        3743,
        3747
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2182": {
      "fn": "ERC20.transfer",
      "offset": [
        3759,
        3801
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 37,
      "value": "0x41D"
    },
    "2185": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2186": {
      "fn": "ERC20.transfer",
      "offset": [
        3783,
        3792
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2187": {
      "fn": "ERC20.transfer",
      "offset": [
        3794,
        3800
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2188": {
      "fn": "ERC20.transfer",
      "offset": [
        3759,
        3768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA87"
    },
    "2191": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3759,
        3801
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2192": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2193": {
      "fn": "Penny.deposit",
      "offset": [
        2095,
        2099
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2195": {
      "fn": "Penny.deposit",
      "offset": [
        2111,
        2169
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 38,
      "value": "0x8AA"
    },
    "2198": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2199": {
      "fn": "Penny.deposit",
      "offset": [
        2111,
        2114
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2201": {
      "fn": "Penny.deposit",
      "offset": [
        2111,
        2114
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2208": {
      "op": "SHL"
    },
    "2209": {
      "op": "SUB"
    },
    "2210": {
      "fn": "Penny.deposit",
      "offset": [
        2111,
        2114
      ],
      "op": "AND",
      "path": "20"
    },
    "2211": {
      "fn": "Penny.deposit",
      "offset": [
        2111,
        2114
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2212": {
      "fn": "Penny.deposit",
      "offset": [
        2154,
        2158
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2213": {
      "fn": "Penny.deposit",
      "offset": [
        2161,
        2168
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2214": {
      "fn": "Penny.deposit",
      "offset": [
        2111,
        2131
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDC5"
    },
    "2217": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2111,
        2169
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2218": {
      "fn": "Penny.deposit",
      "offset": [
        2111,
        2169
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2219": {
      "fn": "Penny.deposit",
      "offset": [
        2179,
        2213
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 39,
      "value": "0x8BE"
    },
    "2222": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2223": {
      "fn": "Penny.deposit",
      "offset": [
        2199,
        2212
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8B9"
    },
    "2226": {
      "fn": "Penny.deposit",
      "offset": [
        2199,
        2206
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2227": {
      "fn": "Penny.deposit",
      "offset": [
        2209,
        2212
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2229": {
      "fn": "Penny.deposit",
      "offset": [
        2199,
        2212
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14E7"
    },
    "2232": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2199,
        2212
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2233": {
      "fn": "Penny.deposit",
      "offset": [
        2199,
        2212
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2234": {
      "fn": "Penny.deposit",
      "offset": [
        2179,
        2184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE25"
    },
    "2237": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2179,
        2213
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2238": {
      "fn": "Penny.deposit",
      "offset": [
        2179,
        2213
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2239": {
      "fn": "Penny.deposit",
      "offset": [
        2251,
        2276
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 40,
      "value": "0x8CA"
    },
    "2242": {
      "fn": "Penny.deposit",
      "offset": [
        2251,
        2266
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "2243": {
      "fn": "Penny.deposit",
      "offset": [
        2269,
        2276
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x384"
    },
    "2246": {
      "fn": "Penny.deposit",
      "offset": [
        2251,
        2276
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14AF"
    },
    "2249": {
      "fn": "Penny.deposit",
      "jump": "i",
      "offset": [
        2251,
        2276
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2250": {
      "fn": "Penny.deposit",
      "offset": [
        2251,
        2276
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2251": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2252": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2254": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2255": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2256": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2257": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2234
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2259": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2261": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2262": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2264": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2265": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2248
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2266": {
      "fn": "Penny.deposit",
      "offset": [
        2223,
        2276
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "fn": "Penny.deposit",
      "offset": [
        2293,
        2297
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 41,
      "value": "0x1"
    },
    "2270": {
      "fn": "Penny.deposit",
      "offset": [
        2293,
        2297
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2271": {
      "fn": "Penny.deposit",
      "offset": [
        2043,
        2304
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2272": {
      "op": "POP"
    },
    "2273": {
      "fn": "Penny.deposit",
      "jump": "o",
      "offset": [
        2043,
        2304
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2274": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3528,
        3715
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2275": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3573,
        3580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2277": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3630,
        3631
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 42
    },
    "2278": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3600,
        3627
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8EF"
    },
    "2281": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3600,
        3618
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2283": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3600,
        3625
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA71"
    },
    "2286": {
      "fn": "Penny.getUpForVote",
      "jump": "i",
      "offset": [
        3600,
        3627
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2287": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3600,
        3627
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2288": {
      "branch": 94,
      "fn": "Penny.getUpForVote",
      "offset": [
        3600,
        3631
      ],
      "op": "GT",
      "path": "20"
    },
    "2289": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3592,
        3632
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8F9"
    },
    "2292": {
      "branch": 94,
      "fn": "Penny.getUpForVote",
      "offset": [
        3592,
        3632
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2293": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3592,
        3632
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2295": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3592,
        3632
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2296": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3592,
        3632
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2297": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3592,
        3632
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2298": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3684,
        3708
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 43,
      "value": "0x905"
    },
    "2301": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2303": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3706,
        3707
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2305": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3684,
        3705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF10"
    },
    "2308": {
      "fn": "Penny.getUpForVote",
      "jump": "i",
      "offset": [
        3684,
        3708
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2309": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3684,
        3708
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2310": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3677,
        3708
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2311": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3677,
        3708
      ],
      "op": "POP",
      "path": "20"
    },
    "2312": {
      "fn": "Penny.getUpForVote",
      "offset": [
        3528,
        3715
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2313": {
      "fn": "Penny.getUpForVote",
      "jump": "o",
      "offset": [
        3528,
        3715
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2314": {
      "fn": "Penny.setApplications",
      "offset": [
        4601,
        4768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2315": {
      "fn": "Penny.setApplications",
      "offset": [
        4703,
        4708
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 44,
      "value": "0xC"
    },
    "2317": {
      "fn": "Penny.setApplications",
      "offset": [
        4703,
        4708
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "op": "SUB"
    },
    "2326": {
      "fn": "Penny.setApplications",
      "offset": [
        4703,
        4708
      ],
      "op": "AND",
      "path": "20"
    },
    "2327": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "Penny.setApplications",
      "offset": [
        4687,
        4708
      ],
      "op": "AND",
      "path": "20"
    },
    "2337": {
      "branch": 95,
      "fn": "Penny.setApplications",
      "offset": [
        4687,
        4708
      ],
      "op": "EQ",
      "path": "20"
    },
    "2338": {
      "fn": "Penny.setApplications",
      "offset": [
        4679,
        4709
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92A"
    },
    "2341": {
      "branch": 95,
      "fn": "Penny.setApplications",
      "offset": [
        4679,
        4709
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2342": {
      "fn": "Penny.setApplications",
      "offset": [
        4679,
        4709
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2344": {
      "fn": "Penny.setApplications",
      "offset": [
        4679,
        4709
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2345": {
      "fn": "Penny.setApplications",
      "offset": [
        4679,
        4709
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2346": {
      "fn": "Penny.setApplications",
      "offset": [
        4679,
        4709
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2347": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4739
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 45,
      "value": "0x7"
    },
    "2349": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2350": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2357": {
      "op": "SHL"
    },
    "2358": {
      "op": "SUB"
    },
    "2359": {
      "op": "NOT"
    },
    "2360": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "AND",
      "path": "20"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "op": "SUB"
    },
    "2369": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2370": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2371": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2372": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "AND",
      "path": "20"
    },
    "2373": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2374": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2375": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2376": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "OR",
      "path": "20"
    },
    "2377": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2378": {
      "fn": "Penny.setApplications",
      "offset": [
        4719,
        4761
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "2379": {
      "fn": "Penny.setApplications",
      "jump": "o",
      "offset": [
        4601,
        4768
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2380": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "op": "SUB"
    },
    "2389": {
      "fn": "ERC20._approve",
      "offset": [
        9680,
        9699
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 46
    },
    "2390": {
      "branch": 103,
      "fn": "ERC20._approve",
      "offset": [
        9680,
        9699
      ],
      "op": "AND",
      "path": "1"
    },
    "2391": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AE"
    },
    "2394": {
      "branch": 103,
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2395": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2397": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2406": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2411": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2412": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "ADD",
      "path": "1"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2416": {
      "op": "DUP1"
    },
    "2417": {
      "op": "DUP3"
    },
    "2418": {
      "op": "ADD"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2455": {
      "op": "DUP3"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "MSTORE"
    },
    "2458": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2468": {
      "op": "DUP3"
    },
    "2469": {
      "op": "ADD"
    },
    "2470": {
      "op": "MSTORE"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "2477": {
      "op": "JUMP"
    },
    "2478": {
      "fn": "ERC20._approve",
      "offset": [
        9672,
        9740
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "op": "SUB"
    },
    "2487": {
      "fn": "ERC20._approve",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 47
    },
    "2488": {
      "branch": 104,
      "fn": "ERC20._approve",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "1"
    },
    "2489": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0F"
    },
    "2492": {
      "branch": 104,
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2493": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2495": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2504": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2507": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2509": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2510": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "ADD",
      "path": "1"
    },
    "2511": {
      "op": "MSTORE"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2516": {
      "op": "DUP3"
    },
    "2517": {
      "op": "ADD"
    },
    "2518": {
      "op": "MSTORE"
    },
    "2519": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2554": {
      "op": "DUP3"
    },
    "2555": {
      "op": "ADD"
    },
    "2556": {
      "op": "MSTORE"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2565": {
      "op": "DUP3"
    },
    "2566": {
      "op": "ADD"
    },
    "2567": {
      "op": "MSTORE"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "2574": {
      "op": "JUMP"
    },
    "2575": {
      "fn": "ERC20._approve",
      "offset": [
        9750,
        9818
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 48
    },
    "2585": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2586": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "AND",
      "path": "1"
    },
    "2587": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2589": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2590": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2591": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2592": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2594": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2596": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2597": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2598": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2599": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2601": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2602": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2603": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9847
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2604": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2605": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2606": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "AND",
      "path": "1"
    },
    "2607": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2608": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2609": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2610": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2611": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2612": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2613": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2614": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2615": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2616": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9856
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2617": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9865
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2618": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2619": {
      "fn": "ERC20._approve",
      "offset": [
        9829,
        9865
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2620": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 49
    },
    "2621": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2622": {
      "op": "DUP5"
    },
    "2623": {
      "op": "DUP2"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2658": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2659": {
      "op": "ADD"
    },
    "2660": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2661": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2663": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2664": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2665": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2666": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SUB",
      "path": "1"
    },
    "2667": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2668": {
      "fn": "ERC20._approve",
      "offset": [
        9880,
        9912
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2669": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "POP",
      "path": "1"
    },
    "2670": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "POP",
      "path": "1"
    },
    "2671": {
      "fn": "ERC20._approve",
      "offset": [
        9579,
        9919
      ],
      "op": "POP",
      "path": "1"
    },
    "2672": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9579,
        9919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2673": {
      "fn": "EnumerableSet.length",
      "offset": [
        8807,
        8919
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2674": {
      "fn": "EnumerableSet.length",
      "offset": [
        8867,
        8874
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2676": {
      "fn": "EnumerableSet.length",
      "offset": [
        8893,
        8912
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 50,
      "value": "0x421"
    },
    "2679": {
      "fn": "EnumerableSet.length",
      "offset": [
        8901,
        8904
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2680": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SLOAD",
      "path": "18",
      "statement": 51
    },
    "2681": {
      "fn": "EnumerableSet._length",
      "offset": [
        4096,
        4114
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2682": {
      "fn": "EnumerableSet._length",
      "offset": [
        4014,
        4121
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2683": {
      "fn": "EnumerableSet.add",
      "offset": [
        8069,
        8198
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2684": {
      "fn": "EnumerableSet.add",
      "offset": [
        8136,
        8140
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2686": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8191
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 52,
      "value": "0x574"
    },
    "2689": {
      "fn": "EnumerableSet.add",
      "offset": [
        8164,
        8167
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2690": {
      "fn": "EnumerableSet.add",
      "offset": [
        8184,
        8189
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2691": {
      "fn": "EnumerableSet.add",
      "offset": [
        8159,
        8163
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF1C"
    },
    "2694": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8159,
        8191
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2695": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2702": {
      "op": "SHL"
    },
    "2703": {
      "op": "SUB"
    },
    "2704": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7285
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 53
    },
    "2705": {
      "branch": 105,
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7285
      ],
      "op": "AND",
      "path": "1"
    },
    "2706": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAEB"
    },
    "2709": {
      "branch": 105,
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2710": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2712": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2713": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2719": {
      "op": "SHL"
    },
    "2720": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2721": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2724": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2726": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2727": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "ADD",
      "path": "1"
    },
    "2728": {
      "op": "MSTORE"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2733": {
      "op": "DUP3"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "MSTORE"
    },
    "2736": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2771": {
      "op": "DUP3"
    },
    "2772": {
      "op": "ADD"
    },
    "2773": {
      "op": "MSTORE"
    },
    "2774": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2785": {
      "op": "DUP3"
    },
    "2786": {
      "op": "ADD"
    },
    "2787": {
      "op": "MSTORE"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "2794": {
      "op": "JUMP"
    },
    "2795": {
      "fn": "ERC20._transfer",
      "offset": [
        7257,
        7327
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "fn": "ERC20._transfer",
      "offset": [
        7345,
        7368
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 54
    },
    "2805": {
      "branch": 106,
      "fn": "ERC20._transfer",
      "offset": [
        7345,
        7368
      ],
      "op": "AND",
      "path": "1"
    },
    "2806": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4D"
    },
    "2809": {
      "branch": 106,
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2810": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2812": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2821": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2824": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2826": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2827": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "ADD",
      "path": "1"
    },
    "2828": {
      "op": "MSTORE"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2833": {
      "op": "DUP3"
    },
    "2834": {
      "op": "ADD"
    },
    "2835": {
      "op": "MSTORE"
    },
    "2836": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2883": {
      "op": "DUP3"
    },
    "2884": {
      "op": "ADD"
    },
    "2885": {
      "op": "MSTORE"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2888": {
      "op": "ADD"
    },
    "2889": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "2892": {
      "op": "JUMP"
    },
    "2893": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2894": {
      "fn": "ERC20._transfer",
      "offset": [
        7419,
        7466
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 55,
      "value": "0xB58"
    },
    "2897": {
      "fn": "ERC20._transfer",
      "offset": [
        7440,
        7446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2898": {
      "fn": "ERC20._transfer",
      "offset": [
        7448,
        7457
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2899": {
      "fn": "ERC20._transfer",
      "offset": [
        7459,
        7465
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2900": {
      "fn": "ERC20._transfer",
      "offset": [
        7419,
        7439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6B"
    },
    "2903": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7419,
        7466
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2904": {
      "fn": "ERC20._transfer",
      "offset": [
        7419,
        7466
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2911": {
      "op": "SHL"
    },
    "2912": {
      "op": "SUB"
    },
    "2913": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2914": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "AND",
      "path": "1"
    },
    "2915": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2917": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2918": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2919": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2920": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2922": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2923": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2924": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2925": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2927": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2928": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2929": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7518
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2930": {
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 56
    },
    "2931": {
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2932": {
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "LT",
      "path": "1"
    },
    "2933": {
      "branch": 107,
      "fn": "ERC20._transfer",
      "offset": [
        7536,
        7559
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2934": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD0"
    },
    "2937": {
      "branch": 107,
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2938": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2940": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2947": {
      "op": "SHL"
    },
    "2948": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2949": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2952": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2954": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2955": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "ADD",
      "path": "1"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2961": {
      "op": "DUP3"
    },
    "2962": {
      "op": "ADD"
    },
    "2963": {
      "op": "MSTORE"
    },
    "2964": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2999": {
      "op": "DUP3"
    },
    "3000": {
      "op": "ADD"
    },
    "3001": {
      "op": "MSTORE"
    },
    "3002": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3014": {
      "op": "DUP3"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "MSTORE"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3019": {
      "op": "ADD"
    },
    "3020": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "3023": {
      "op": "JUMP"
    },
    "3024": {
      "fn": "ERC20._transfer",
      "offset": [
        7528,
        7602
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3025": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7654
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 57,
      "value": "0xBDA"
    },
    "3028": {
      "fn": "ERC20._transfer",
      "offset": [
        7648,
        7654
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3029": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3030": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1506"
    },
    "3033": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7632,
        7654
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3034": {
      "fn": "ERC20._transfer",
      "offset": [
        7632,
        7654
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3041": {
      "op": "SHL"
    },
    "3042": {
      "op": "SUB"
    },
    "3043": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3044": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3045": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "AND",
      "path": "1"
    },
    "3046": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3048": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3049": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3050": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3051": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3053": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3054": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3055": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3056": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3058": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3059": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3060": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7629
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3061": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3062": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3063": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3064": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7654
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3065": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 58
    },
    "3066": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3067": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "AND",
      "path": "1"
    },
    "3068": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3069": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3070": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3071": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3072": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7684
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3073": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3074": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3075": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3076": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3077": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3078": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC10"
    },
    "3081": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3082": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3083": {
      "fn": "ERC20._transfer",
      "offset": [
        7688,
        7694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3084": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14AF"
    },
    "3087": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7664,
        7694
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3088": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3089": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3090": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "POP",
      "path": "1"
    },
    "3091": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "POP",
      "path": "1"
    },
    "3092": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3093": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3094": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3095": {
      "fn": "ERC20._transfer",
      "offset": [
        7664,
        7694
      ],
      "op": "POP",
      "path": "1"
    },
    "3096": {
      "fn": "ERC20._transfer",
      "offset": [
        7727,
        7736
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 59
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "op": "SUB"
    },
    "3105": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "AND",
      "path": "1"
    },
    "3106": {
      "fn": "ERC20._transfer",
      "offset": [
        7719,
        7725
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3113": {
      "op": "SHL"
    },
    "3114": {
      "op": "SUB"
    },
    "3115": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "AND",
      "path": "1"
    },
    "3116": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3149": {
      "fn": "ERC20._transfer",
      "offset": [
        7738,
        7744
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3150": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3152": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3153": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5C"
    },
    "3156": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3157": {
      "op": "DUP2"
    },
    "3158": {
      "op": "MSTORE"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3161": {
      "op": "ADD"
    },
    "3162": {
      "op": "SWAP1"
    },
    "3163": {
      "op": "JUMP"
    },
    "3164": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3165": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3167": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3168": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3169": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3170": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SUB",
      "path": "1"
    },
    "3171": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3172": {
      "fn": "ERC20._transfer",
      "offset": [
        7710,
        7745
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3173": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3174": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3175": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3176": {
      "fn": "ERC20._transfer",
      "offset": [
        7160,
        7752
      ],
      "op": "POP",
      "path": "1"
    },
    "3177": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7160,
        7752
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3178": {
      "fn": "ERC20._burn",
      "offset": [
        8673,
        9156
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "op": "SUB"
    },
    "3187": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8777
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 60
    },
    "3188": {
      "branch": 108,
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8777
      ],
      "op": "AND",
      "path": "1"
    },
    "3189": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCCA"
    },
    "3192": {
      "branch": 108,
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3193": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3195": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3202": {
      "op": "SHL"
    },
    "3203": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3204": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3207": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3209": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3210": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "ADD",
      "path": "1"
    },
    "3211": {
      "op": "MSTORE"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3216": {
      "op": "DUP3"
    },
    "3217": {
      "op": "ADD"
    },
    "3218": {
      "op": "MSTORE"
    },
    "3219": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3254": {
      "op": "DUP3"
    },
    "3255": {
      "op": "ADD"
    },
    "3256": {
      "op": "MSTORE"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3261": {
      "op": "SHL"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3264": {
      "op": "DUP3"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "3273": {
      "op": "JUMP"
    },
    "3274": {
      "fn": "ERC20._burn",
      "offset": [
        8748,
        8815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3275": {
      "fn": "ERC20._burn",
      "offset": [
        8826,
        8875
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 61,
      "value": "0xCD6"
    },
    "3278": {
      "fn": "ERC20._burn",
      "offset": [
        8847,
        8854
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3279": {
      "fn": "ERC20._burn",
      "offset": [
        8864,
        8865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3281": {
      "fn": "ERC20._burn",
      "offset": [
        8868,
        8874
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3282": {
      "fn": "ERC20._burn",
      "offset": [
        8826,
        8846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6B"
    },
    "3285": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8826,
        8875
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3286": {
      "fn": "ERC20._burn",
      "offset": [
        8826,
        8875
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3293": {
      "op": "SHL"
    },
    "3294": {
      "op": "SUB"
    },
    "3295": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3296": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "AND",
      "path": "1"
    },
    "3297": {
      "fn": "ERC20._burn",
      "offset": [
        8886,
        8908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3299": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3300": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3301": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3302": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3304": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3305": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3306": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3307": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3309": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3310": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3311": {
      "fn": "ERC20._burn",
      "offset": [
        8911,
        8929
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3312": {
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 62
    },
    "3313": {
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3314": {
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "LT",
      "path": "1"
    },
    "3315": {
      "branch": 109,
      "fn": "ERC20._burn",
      "offset": [
        8947,
        8971
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3316": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4A"
    },
    "3319": {
      "branch": 109,
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3320": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3322": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3331": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3334": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3336": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3337": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "ADD",
      "path": "1"
    },
    "3338": {
      "op": "MSTORE"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3381": {
      "op": "DUP3"
    },
    "3382": {
      "op": "ADD"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3392": {
      "op": "DUP3"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "op": "MSTORE"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3397": {
      "op": "ADD"
    },
    "3398": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "3401": {
      "op": "JUMP"
    },
    "3402": {
      "fn": "ERC20._burn",
      "offset": [
        8939,
        9010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3403": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9064
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 63,
      "value": "0xD54"
    },
    "3406": {
      "fn": "ERC20._burn",
      "offset": [
        9058,
        9064
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3407": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9055
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3408": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9064
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1506"
    },
    "3411": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9041,
        9064
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3412": {
      "fn": "ERC20._burn",
      "offset": [
        9041,
        9064
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "SUB"
    },
    "3421": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3422": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "AND",
      "path": "1"
    },
    "3423": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9029
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3425": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3426": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3427": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3428": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3430": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3431": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3432": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3433": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3435": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3436": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9038
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3437": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3438": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3439": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3440": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9064
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3441": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9086
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 64,
      "value": "0x2"
    },
    "3443": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3444": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3445": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3446": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3447": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3448": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD82"
    },
    "3451": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3452": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3453": {
      "fn": "ERC20._burn",
      "offset": [
        9090,
        9096
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3454": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1506"
    },
    "3457": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9074,
        9096
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3458": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3459": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3460": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3461": {
      "fn": "ERC20._burn",
      "offset": [
        9074,
        9096
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3462": {
      "op": "POP"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 65,
      "value": "0x40"
    },
    "3466": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3467": {
      "op": "DUP3"
    },
    "3468": {
      "op": "DUP2"
    },
    "3469": {
      "op": "MSTORE"
    },
    "3470": {
      "fn": "ERC20._burn",
      "offset": [
        9138,
        9139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3472": {
      "fn": "ERC20._burn",
      "offset": [
        9138,
        9139
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3479": {
      "op": "SHL"
    },
    "3480": {
      "op": "SUB"
    },
    "3481": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3482": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "AND",
      "path": "1"
    },
    "3483": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3484": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3517": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "fn": "ERC20._burn",
      "offset": [
        9112,
        9149
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA64"
    },
    "3524": {
      "op": "JUMP"
    },
    "3525": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3526": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 66,
      "value": "0x40"
    },
    "3528": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3529": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3536": {
      "op": "SHL"
    },
    "3537": {
      "op": "SUB"
    },
    "3538": {
      "op": "DUP6"
    },
    "3539": {
      "op": "DUP2"
    },
    "3540": {
      "op": "AND"
    },
    "3541": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "3543": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3544": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "4"
    },
    "3545": {
      "op": "MSTORE"
    },
    "3546": {
      "op": "DUP5"
    },
    "3547": {
      "op": "AND"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3550": {
      "op": "DUP3"
    },
    "3551": {
      "op": "ADD"
    },
    "3552": {
      "op": "MSTORE"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3555": {
      "op": "DUP1"
    },
    "3556": {
      "op": "DUP3"
    },
    "3557": {
      "op": "ADD"
    },
    "3558": {
      "op": "DUP5"
    },
    "3559": {
      "op": "SWAP1"
    },
    "3560": {
      "op": "MSTORE"
    },
    "3561": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3562": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3563": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3564": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3565": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SUB",
      "path": "4"
    },
    "3566": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3567": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3568": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "4"
    },
    "3569": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3570": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3573": {
      "op": "SWAP1"
    },
    "3574": {
      "op": "SWAP2"
    },
    "3575": {
      "op": "ADD"
    },
    "3576": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3577": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3578": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3579": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3581": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3582": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "4"
    },
    "3583": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3584": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3591": {
      "op": "SHL"
    },
    "3592": {
      "op": "SUB"
    },
    "3593": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "AND",
      "path": "4"
    },
    "3594": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3601": {
      "op": "SHL"
    },
    "3602": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "OR",
      "path": "4"
    },
    "3603": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3604": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3605": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE1F"
    },
    "3608": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3609": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3610": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3611": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        934
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF9A"
    },
    "3614": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        915,
        1011
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3615": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3616": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3617": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3618": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3619": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "4"
    },
    "3620": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        815,
        1018
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3621": {
      "fn": "ERC20._mint",
      "offset": [
        8023,
        8353
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3628": {
      "op": "SHL"
    },
    "3629": {
      "op": "SUB"
    },
    "3630": {
      "fn": "ERC20._mint",
      "offset": [
        8106,
        8127
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 67
    },
    "3631": {
      "branch": 110,
      "fn": "ERC20._mint",
      "offset": [
        8106,
        8127
      ],
      "op": "AND",
      "path": "1"
    },
    "3632": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7B"
    },
    "3635": {
      "branch": 110,
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3636": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3638": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3647": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3650": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3652": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3653": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "ADD",
      "path": "1"
    },
    "3654": {
      "op": "MSTORE"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3659": {
      "op": "DUP3"
    },
    "3660": {
      "op": "ADD"
    },
    "3661": {
      "op": "MSTORE"
    },
    "3662": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3697": {
      "op": "DUP3"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "op": "MSTORE"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3702": {
      "op": "ADD"
    },
    "3703": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x551"
    },
    "3706": {
      "op": "JUMP"
    },
    "3707": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8163
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3708": {
      "fn": "ERC20._mint",
      "offset": [
        8174,
        8223
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 68,
      "value": "0xE87"
    },
    "3711": {
      "fn": "ERC20._mint",
      "offset": [
        8203,
        8204
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3713": {
      "fn": "ERC20._mint",
      "offset": [
        8207,
        8214
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3714": {
      "fn": "ERC20._mint",
      "offset": [
        8216,
        8222
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3715": {
      "fn": "ERC20._mint",
      "offset": [
        8174,
        8194
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6B"
    },
    "3718": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8174,
        8223
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3719": {
      "fn": "ERC20._mint",
      "offset": [
        8174,
        8223
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3720": {
      "fn": "ERC20._mint",
      "offset": [
        8250,
        8256
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 69
    },
    "3721": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3723": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3725": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3726": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3727": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3728": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE99"
    },
    "3731": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3732": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3733": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14AF"
    },
    "3736": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8234,
        8256
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3737": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3738": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3739": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3740": {
      "fn": "ERC20._mint",
      "offset": [
        8234,
        8256
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3749": {
      "op": "SHL"
    },
    "3750": {
      "op": "SUB"
    },
    "3751": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 70
    },
    "3752": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "AND",
      "path": "1"
    },
    "3753": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8275
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3755": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3756": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3757": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3758": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3760": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3761": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3762": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3763": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3765": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3766": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8284
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3767": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3768": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3769": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3770": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3771": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3772": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEC6"
    },
    "3775": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3776": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3777": {
      "fn": "ERC20._mint",
      "offset": [
        8288,
        8294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3778": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14AF"
    },
    "3781": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8266,
        8294
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3782": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3783": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3784": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3785": {
      "fn": "ERC20._mint",
      "offset": [
        8266,
        8294
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3786": {
      "op": "POP"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 71,
      "value": "0x40"
    },
    "3790": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3791": {
      "op": "DUP2"
    },
    "3792": {
      "op": "DUP2"
    },
    "3793": {
      "op": "MSTORE"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3800": {
      "op": "SHL"
    },
    "3801": {
      "op": "SUB"
    },
    "3802": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3803": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "AND",
      "path": "1"
    },
    "3804": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3805": {
      "fn": "ERC20._mint",
      "offset": [
        8326,
        8327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3807": {
      "fn": "ERC20._mint",
      "offset": [
        8326,
        8327
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3808": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3841": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3844": {
      "op": "ADD"
    },
    "3845": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3847": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3848": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3849": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3850": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SUB",
      "path": "1"
    },
    "3851": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3852": {
      "fn": "ERC20._mint",
      "offset": [
        8309,
        8346
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3853": {
      "fn": "ERC20._mint",
      "offset": [
        8023,
        8353
      ],
      "op": "POP",
      "path": "1"
    },
    "3854": {
      "fn": "ERC20._mint",
      "offset": [
        8023,
        8353
      ],
      "op": "POP",
      "path": "1"
    },
    "3855": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8023,
        8353
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3856": {
      "fn": "EnumerableSet.at",
      "offset": [
        9251,
        9386
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3857": {
      "fn": "EnumerableSet.at",
      "offset": [
        9322,
        9329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3859": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9378
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 72,
      "value": "0x574"
    },
    "3862": {
      "fn": "EnumerableSet.at",
      "offset": [
        9360,
        9363
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3863": {
      "fn": "EnumerableSet.at",
      "offset": [
        9372,
        9377
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3864": {
      "fn": "EnumerableSet.at",
      "offset": [
        9356,
        9359
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x106C"
    },
    "3867": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9356,
        9378
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3868": {
      "fn": "EnumerableSet._add",
      "offset": [
        1632,
        2036
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3869": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1699
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3871": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 73
    },
    "3872": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3873": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3874": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3876": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3877": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3914
      ],
      "op": "ADD",
      "path": "18"
    },
    "3878": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3880": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3881": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3883": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3884": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3885": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3902,
        3921
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3886": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF63"
    },
    "3889": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 74
    },
    "3892": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3893": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3895": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3896": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3897": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "18"
    },
    "3898": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3899": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3900": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1764
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3902": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3903": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3904": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3905": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3907": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3908": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3909": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3910": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3911": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3912": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "18"
    },
    "3913": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3914": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3915": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3916": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP5",
      "path": "18",
      "statement": 75
    },
    "3917": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3918": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3919": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3920": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3921": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3922": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3923": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "ADD",
      "path": "18"
    },
    "3924": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3925": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3926": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3927": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3929": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3930": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3931": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3932": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3933": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3934": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3935": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 76,
      "value": "0x421"
    },
    "3938": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3939": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3940": {
      "op": "POP"
    },
    "3941": {
      "fn": "EnumerableSet._add",
      "offset": [
        2014,
        2019
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 77,
      "value": "0x0"
    },
    "3943": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x421"
    },
    "3946": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3947": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5027,
        5308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "op": "SUB"
    },
    "3956": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5186
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3957": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5186
      ],
      "op": "AND",
      "path": "20"
    },
    "3958": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5186
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3959": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5186
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3960": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5186
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3961": {
      "branch": 96,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5186
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3962": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5206
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF8B"
    },
    "3965": {
      "branch": 96,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5206
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3966": {
      "op": "POP"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3973": {
      "op": "SHL"
    },
    "3974": {
      "op": "SUB"
    },
    "3975": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5190,
        5206
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3976": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5190,
        5206
      ],
      "op": "AND",
      "path": "20"
    },
    "3977": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5190,
        5206
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3978": {
      "branch": 97,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5190,
        5206
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3979": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5168,
        5206
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3980": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5164,
        5216
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3981": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5164,
        5216
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF95"
    },
    "3984": {
      "branch": 97,
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5164,
        5216
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3985": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5208,
        5216
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 78,
      "value": "0x0"
    },
    "3987": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5208,
        5216
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3988": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5208,
        5216
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3989": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5164,
        5216
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3990": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5027,
        5308
      ],
      "op": "POP",
      "path": "20"
    },
    "3991": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5027,
        5308
      ],
      "op": "POP",
      "path": "20"
    },
    "3992": {
      "fn": "Penny._beforeTokenTransfer",
      "offset": [
        5027,
        5308
      ],
      "op": "POP",
      "path": "20"
    },
    "3993": {
      "fn": "Penny._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        5027,
        5308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3994": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3995": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFEF"
    },
    "4000": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "4"
    },
    "4008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4010": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4011": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4014": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4015": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4018": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "4"
    },
    "4019": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4052": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "4"
    },
    "4055": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4062": {
      "op": "SHL"
    },
    "4063": {
      "op": "SUB"
    },
    "4064": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "4"
    },
    "4065": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1100"
    },
    "4068": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4069": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4070": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4071": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4072": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "4077": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "4"
    },
    "4078": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4079": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4080": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4081": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4082": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4083": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4084": {
      "op": "POP"
    },
    "4085": {
      "branch": 112,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4086": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF95"
    },
    "4089": {
      "branch": 112,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4090": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 79
    },
    "4091": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4094": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "4"
    },
    "4095": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4096": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4097": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4098": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "4"
    },
    "4099": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4100": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100D"
    },
    "4103": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4104": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4105": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x142C"
    },
    "4108": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4109": {
      "branch": 113,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4110": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF95"
    },
    "4113": {
      "branch": 113,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4114": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4116": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4117": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4123": {
      "op": "SHL"
    },
    "4124": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4125": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4128": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4130": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4131": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "4"
    },
    "4132": {
      "op": "MSTORE"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4137": {
      "op": "DUP3"
    },
    "4138": {
      "op": "ADD"
    },
    "4139": {
      "op": "MSTORE"
    },
    "4140": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4175": {
      "op": "DUP3"
    },
    "4176": {
      "op": "ADD"
    },
    "4177": {
      "op": "MSTORE"
    },
    "4178": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4191": {
      "op": "SHL"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4194": {
      "op": "DUP3"
    },
    "4195": {
      "op": "ADD"
    },
    "4196": {
      "op": "MSTORE"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4199": {
      "op": "ADD"
    },
    "4200": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x551"
    },
    "4203": {
      "op": "JUMP"
    },
    "4204": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4205": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 80
    },
    "4206": {
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4565
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4207": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4209": {
      "fn": "EnumerableSet._at",
      "offset": [
        4520,
        4527
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4210": {
      "branch": 111,
      "fn": "EnumerableSet._at",
      "offset": [
        4547,
        4573
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4211": {
      "op": "LT"
    },
    "4212": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10CA"
    },
    "4215": {
      "branch": 111,
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4216": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4218": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4225": {
      "op": "SHL"
    },
    "4226": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4227": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4230": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4232": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4233": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "ADD",
      "path": "18"
    },
    "4234": {
      "op": "MSTORE"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4239": {
      "op": "DUP3"
    },
    "4240": {
      "op": "ADD"
    },
    "4241": {
      "op": "MSTORE"
    },
    "4242": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "ADD"
    },
    "4279": {
      "op": "MSTORE"
    },
    "4280": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4285": {
      "op": "SHL"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4288": {
      "op": "DUP3"
    },
    "4289": {
      "op": "ADD"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4293": {
      "op": "ADD"
    },
    "4294": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x551"
    },
    "4297": {
      "op": "JUMP"
    },
    "4298": {
      "fn": "EnumerableSet._at",
      "offset": [
        4539,
        4612
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4299": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4632
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 81
    },
    "4300": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4302": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4640
      ],
      "op": "ADD",
      "path": "18"
    },
    "4303": {
      "fn": "EnumerableSet._at",
      "offset": [
        4641,
        4646
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4304": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4305": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4306": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4307": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "LT",
      "path": "18"
    },
    "4308": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10ED"
    },
    "4311": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4312": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4319": {
      "op": "SHL"
    },
    "4320": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4322": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4323": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "4325": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4327": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4328": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4330": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4332": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4333": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4334": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4335": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4337": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4338": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4340": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4342": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4343": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "ADD",
      "path": "18"
    },
    "4344": {
      "fn": "EnumerableSet._at",
      "offset": [
        4629,
        4647
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4345": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4346": {
      "fn": "EnumerableSet._at",
      "offset": [
        4622,
        4647
      ],
      "op": "POP",
      "path": "18"
    },
    "4347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4348": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4349": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "18"
    },
    "4350": {
      "fn": "EnumerableSet._at",
      "offset": [
        4453,
        4654
      ],
      "op": "POP",
      "path": "18"
    },
    "4351": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4453,
        4654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4352": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4353": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4355": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 82,
      "value": "0x110F"
    },
    "4358": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4359": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4360": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4362": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4363": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1117"
    },
    "4366": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4367": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4368": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "4369": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4370": {
      "op": "POP"
    },
    "4371": {
      "op": "POP"
    },
    "4372": {
      "op": "POP"
    },
    "4373": {
      "op": "POP"
    },
    "4374": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4375": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4376": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4378": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 83
    },
    "4379": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "SELFBALANCE",
      "path": "12"
    },
    "4380": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "LT",
      "path": "12"
    },
    "4381": {
      "branch": 98,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4382": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1178"
    },
    "4385": {
      "branch": 98,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4386": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4388": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4395": {
      "op": "SHL"
    },
    "4396": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4397": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4400": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4402": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4403": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "12"
    },
    "4404": {
      "op": "MSTORE"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4409": {
      "op": "DUP3"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "MSTORE"
    },
    "4412": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4459": {
      "op": "SHL"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4462": {
      "op": "DUP3"
    },
    "4463": {
      "op": "ADD"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x551"
    },
    "4471": {
      "op": "JUMP"
    },
    "4472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4473": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4474": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 84,
      "value": "0x11C6"
    },
    "4478": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4479": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4488": {
      "op": "SHL"
    },
    "4489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "12"
    },
    "4497": {
      "op": "MSTORE"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4502": {
      "op": "DUP3"
    },
    "4503": {
      "op": "ADD"
    },
    "4504": {
      "op": "MSTORE"
    },
    "4505": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4540": {
      "op": "DUP3"
    },
    "4541": {
      "op": "ADD"
    },
    "4542": {
      "op": "MSTORE"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4545": {
      "op": "ADD"
    },
    "4546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x551"
    },
    "4549": {
      "op": "JUMP"
    },
    "4550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4561": {
      "op": "SHL"
    },
    "4562": {
      "op": "SUB"
    },
    "4563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "12"
    },
    "4564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4566": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4568": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11E2"
    },
    "4572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4574": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1460"
    },
    "4577": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4581": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "12"
    },
    "4587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4588": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4590": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "12"
    },
    "4591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "12"
    },
    "4592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4594": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4600": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4601": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "12"
    },
    "4602": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x121F"
    },
    "4605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4609": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4610": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4611": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "4613": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "12"
    },
    "4614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "4616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "12"
    },
    "4618": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "12"
    },
    "4619": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4620": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "12"
    },
    "4621": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4623": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4625": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4626": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "12"
    },
    "4634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1224"
    },
    "4638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4645": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4646": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4647": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "12"
    },
    "4650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 85,
      "value": "0x1234"
    },
    "4653": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4655": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x123F"
    },
    "4659": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4660": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "4662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "op": "POP"
    },
    "4667": {
      "op": "POP"
    },
    "4668": {
      "op": "POP"
    },
    "4669": {
      "op": "POP"
    },
    "4670": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4671": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4672": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4674": {
      "branch": 99,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4675": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4676": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x124E"
    },
    "4679": {
      "branch": 99,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4680": {
      "op": "POP"
    },
    "4681": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 86
    },
    "4682": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x574"
    },
    "4685": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4686": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4687": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4688": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4689": {
      "branch": 100,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4690": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x125E"
    },
    "4693": {
      "branch": 100,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4694": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4695": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4696": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4697": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4698": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4700": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "12"
    },
    "4701": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4702": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7574,
        7719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4703": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 87
    },
    "4704": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4706": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4713": {
      "op": "SHL"
    },
    "4714": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4715": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4716": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4718": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "12"
    },
    "4719": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x551"
    },
    "4722": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4723": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4724": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x147C"
    },
    "4727": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4728": {
      "op": "JUMPDEST"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4733": {
      "op": "DUP3"
    },
    "4734": {
      "op": "DUP5"
    },
    "4735": {
      "op": "SUB"
    },
    "4736": {
      "op": "SLT"
    },
    "4737": {
      "op": "ISZERO"
    },
    "4738": {
      "op": "PUSH2",
      "value": "0x1289"
    },
    "4741": {
      "op": "JUMPI"
    },
    "4742": {
      "op": "DUP1"
    },
    "4743": {
      "op": "DUP2"
    },
    "4744": {
      "op": "REVERT"
    },
    "4745": {
      "op": "JUMPDEST"
    },
    "4746": {
      "op": "DUP2"
    },
    "4747": {
      "op": "CALLDATALOAD"
    },
    "4748": {
      "op": "PUSH2",
      "value": "0x574"
    },
    "4751": {
      "op": "DUP2"
    },
    "4752": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "4755": {
      "jump": "i",
      "op": "JUMP"
    },
    "4756": {
      "op": "JUMPDEST"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4759": {
      "op": "DUP1"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4762": {
      "op": "DUP4"
    },
    "4763": {
      "op": "DUP6"
    },
    "4764": {
      "op": "SUB"
    },
    "4765": {
      "op": "SLT"
    },
    "4766": {
      "op": "ISZERO"
    },
    "4767": {
      "op": "PUSH2",
      "value": "0x12A6"
    },
    "4770": {
      "op": "JUMPI"
    },
    "4771": {
      "op": "DUP1"
    },
    "4772": {
      "op": "DUP2"
    },
    "4773": {
      "op": "REVERT"
    },
    "4774": {
      "op": "JUMPDEST"
    },
    "4775": {
      "op": "DUP3"
    },
    "4776": {
      "op": "CALLDATALOAD"
    },
    "4777": {
      "op": "PUSH2",
      "value": "0x12B1"
    },
    "4780": {
      "op": "DUP2"
    },
    "4781": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "4784": {
      "jump": "i",
      "op": "JUMP"
    },
    "4785": {
      "op": "JUMPDEST"
    },
    "4786": {
      "op": "SWAP2"
    },
    "4787": {
      "op": "POP"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4790": {
      "op": "DUP4"
    },
    "4791": {
      "op": "ADD"
    },
    "4792": {
      "op": "CALLDATALOAD"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0x12C1"
    },
    "4796": {
      "op": "DUP2"
    },
    "4797": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "4800": {
      "jump": "i",
      "op": "JUMP"
    },
    "4801": {
      "op": "JUMPDEST"
    },
    "4802": {
      "op": "DUP1"
    },
    "4803": {
      "op": "SWAP2"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "op": "POP"
    },
    "4806": {
      "op": "SWAP3"
    },
    "4807": {
      "op": "POP"
    },
    "4808": {
      "op": "SWAP3"
    },
    "4809": {
      "op": "SWAP1"
    },
    "4810": {
      "op": "POP"
    },
    "4811": {
      "jump": "o",
      "op": "JUMP"
    },
    "4812": {
      "op": "JUMPDEST"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4815": {
      "op": "DUP1"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4820": {
      "op": "DUP5"
    },
    "4821": {
      "op": "DUP7"
    },
    "4822": {
      "op": "SUB"
    },
    "4823": {
      "op": "SLT"
    },
    "4824": {
      "op": "ISZERO"
    },
    "4825": {
      "op": "PUSH2",
      "value": "0x12E0"
    },
    "4828": {
      "op": "JUMPI"
    },
    "4829": {
      "op": "DUP1"
    },
    "4830": {
      "op": "DUP2"
    },
    "4831": {
      "op": "REVERT"
    },
    "4832": {
      "op": "JUMPDEST"
    },
    "4833": {
      "op": "DUP4"
    },
    "4834": {
      "op": "CALLDATALOAD"
    },
    "4835": {
      "op": "PUSH2",
      "value": "0x12EB"
    },
    "4838": {
      "op": "DUP2"
    },
    "4839": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "4842": {
      "jump": "i",
      "op": "JUMP"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "SWAP3"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4848": {
      "op": "DUP5"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "op": "CALLDATALOAD"
    },
    "4851": {
      "op": "PUSH2",
      "value": "0x12FB"
    },
    "4854": {
      "op": "DUP2"
    },
    "4855": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "4858": {
      "jump": "i",
      "op": "JUMP"
    },
    "4859": {
      "op": "JUMPDEST"
    },
    "4860": {
      "op": "SWAP3"
    },
    "4861": {
      "op": "SWAP6"
    },
    "4862": {
      "op": "SWAP3"
    },
    "4863": {
      "op": "SWAP5"
    },
    "4864": {
      "op": "POP"
    },
    "4865": {
      "op": "POP"
    },
    "4866": {
      "op": "POP"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4869": {
      "op": "SWAP2"
    },
    "4870": {
      "op": "SWAP1"
    },
    "4871": {
      "op": "SWAP2"
    },
    "4872": {
      "op": "ADD"
    },
    "4873": {
      "op": "CALLDATALOAD"
    },
    "4874": {
      "op": "SWAP1"
    },
    "4875": {
      "jump": "o",
      "op": "JUMP"
    },
    "4876": {
      "op": "JUMPDEST"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4879": {
      "op": "DUP1"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4882": {
      "op": "DUP1"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4885": {
      "op": "DUP6"
    },
    "4886": {
      "op": "DUP8"
    },
    "4887": {
      "op": "SUB"
    },
    "4888": {
      "op": "SLT"
    },
    "4889": {
      "op": "ISZERO"
    },
    "4890": {
      "op": "PUSH2",
      "value": "0x1321"
    },
    "4893": {
      "op": "JUMPI"
    },
    "4894": {
      "op": "DUP1"
    },
    "4895": {
      "op": "DUP2"
    },
    "4896": {
      "op": "REVERT"
    },
    "4897": {
      "op": "JUMPDEST"
    },
    "4898": {
      "op": "DUP5"
    },
    "4899": {
      "op": "CALLDATALOAD"
    },
    "4900": {
      "op": "PUSH2",
      "value": "0x132C"
    },
    "4903": {
      "op": "DUP2"
    },
    "4904": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "4907": {
      "jump": "i",
      "op": "JUMP"
    },
    "4908": {
      "op": "JUMPDEST"
    },
    "4909": {
      "op": "SWAP4"
    },
    "4910": {
      "op": "POP"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4913": {
      "op": "DUP6"
    },
    "4914": {
      "op": "ADD"
    },
    "4915": {
      "op": "CALLDATALOAD"
    },
    "4916": {
      "op": "PUSH2",
      "value": "0x133C"
    },
    "4919": {
      "op": "DUP2"
    },
    "4920": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "4923": {
      "jump": "i",
      "op": "JUMP"
    },
    "4924": {
      "op": "JUMPDEST"
    },
    "4925": {
      "op": "SWAP3"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4929": {
      "op": "DUP6"
    },
    "4930": {
      "op": "ADD"
    },
    "4931": {
      "op": "CALLDATALOAD"
    },
    "4932": {
      "op": "SWAP2"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4936": {
      "op": "DUP6"
    },
    "4937": {
      "op": "ADD"
    },
    "4938": {
      "op": "CALLDATALOAD"
    },
    "4939": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4948": {
      "op": "DUP1"
    },
    "4949": {
      "op": "DUP3"
    },
    "4950": {
      "op": "GT"
    },
    "4951": {
      "op": "ISZERO"
    },
    "4952": {
      "op": "PUSH2",
      "value": "0x135F"
    },
    "4955": {
      "op": "JUMPI"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "DUP4"
    },
    "4958": {
      "op": "REVERT"
    },
    "4959": {
      "op": "JUMPDEST"
    },
    "4960": {
      "op": "DUP2"
    },
    "4961": {
      "op": "DUP8"
    },
    "4962": {
      "op": "ADD"
    },
    "4963": {
      "op": "SWAP2"
    },
    "4964": {
      "op": "POP"
    },
    "4965": {
      "op": "DUP8"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4968": {
      "op": "DUP4"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "SLT"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x1372"
    },
    "4974": {
      "op": "JUMPI"
    },
    "4975": {
      "op": "DUP3"
    },
    "4976": {
      "op": "DUP4"
    },
    "4977": {
      "op": "REVERT"
    },
    "4978": {
      "op": "JUMPDEST"
    },
    "4979": {
      "op": "DUP2"
    },
    "4980": {
      "op": "CALLDATALOAD"
    },
    "4981": {
      "op": "DUP2"
    },
    "4982": {
      "op": "DUP2"
    },
    "4983": {
      "op": "GT"
    },
    "4984": {
      "op": "ISZERO"
    },
    "4985": {
      "op": "PUSH2",
      "value": "0x1384"
    },
    "4988": {
      "op": "JUMPI"
    },
    "4989": {
      "op": "PUSH2",
      "value": "0x1384"
    },
    "4992": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "4995": {
      "jump": "i",
      "op": "JUMP"
    },
    "4996": {
      "op": "JUMPDEST"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4999": {
      "op": "MLOAD"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5002": {
      "op": "DUP3"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5006": {
      "op": "NOT"
    },
    "5007": {
      "op": "SWAP1"
    },
    "5008": {
      "op": "DUP2"
    },
    "5009": {
      "op": "AND"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5012": {
      "op": "ADD"
    },
    "5013": {
      "op": "AND"
    },
    "5014": {
      "op": "DUP2"
    },
    "5015": {
      "op": "ADD"
    },
    "5016": {
      "op": "SWAP1"
    },
    "5017": {
      "op": "DUP4"
    },
    "5018": {
      "op": "DUP3"
    },
    "5019": {
      "op": "GT"
    },
    "5020": {
      "op": "DUP2"
    },
    "5021": {
      "op": "DUP4"
    },
    "5022": {
      "op": "LT"
    },
    "5023": {
      "op": "OR"
    },
    "5024": {
      "op": "ISZERO"
    },
    "5025": {
      "op": "PUSH2",
      "value": "0x13AC"
    },
    "5028": {
      "op": "JUMPI"
    },
    "5029": {
      "op": "PUSH2",
      "value": "0x13AC"
    },
    "5032": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "5035": {
      "jump": "i",
      "op": "JUMP"
    },
    "5036": {
      "op": "JUMPDEST"
    },
    "5037": {
      "op": "DUP2"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5040": {
      "op": "MSTORE"
    },
    "5041": {
      "op": "DUP3"
    },
    "5042": {
      "op": "DUP2"
    },
    "5043": {
      "op": "MSTORE"
    },
    "5044": {
      "op": "DUP11"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5047": {
      "op": "DUP5"
    },
    "5048": {
      "op": "DUP8"
    },
    "5049": {
      "op": "ADD"
    },
    "5050": {
      "op": "ADD"
    },
    "5051": {
      "op": "GT"
    },
    "5052": {
      "op": "ISZERO"
    },
    "5053": {
      "op": "PUSH2",
      "value": "0x13C4"
    },
    "5056": {
      "op": "JUMPI"
    },
    "5057": {
      "op": "DUP6"
    },
    "5058": {
      "op": "DUP7"
    },
    "5059": {
      "op": "REVERT"
    },
    "5060": {
      "op": "JUMPDEST"
    },
    "5061": {
      "op": "DUP3"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5064": {
      "op": "DUP7"
    },
    "5065": {
      "op": "ADD"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5068": {
      "op": "DUP4"
    },
    "5069": {
      "op": "ADD"
    },
    "5070": {
      "op": "CALLDATACOPY"
    },
    "5071": {
      "op": "SWAP2"
    },
    "5072": {
      "op": "DUP3"
    },
    "5073": {
      "op": "ADD"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5076": {
      "op": "ADD"
    },
    "5077": {
      "op": "SWAP5"
    },
    "5078": {
      "op": "SWAP1"
    },
    "5079": {
      "op": "SWAP5"
    },
    "5080": {
      "op": "MSTORE"
    },
    "5081": {
      "op": "SWAP6"
    },
    "5082": {
      "op": "SWAP9"
    },
    "5083": {
      "op": "SWAP5"
    },
    "5084": {
      "op": "SWAP8"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "op": "SWAP3"
    },
    "5087": {
      "op": "SWAP6"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "jump": "o",
      "op": "JUMP"
    },
    "5093": {
      "op": "JUMPDEST"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5096": {
      "op": "DUP1"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5099": {
      "op": "DUP4"
    },
    "5100": {
      "op": "DUP6"
    },
    "5101": {
      "op": "SUB"
    },
    "5102": {
      "op": "SLT"
    },
    "5103": {
      "op": "ISZERO"
    },
    "5104": {
      "op": "PUSH2",
      "value": "0x13F7"
    },
    "5107": {
      "op": "JUMPI"
    },
    "5108": {
      "op": "DUP2"
    },
    "5109": {
      "op": "DUP3"
    },
    "5110": {
      "op": "REVERT"
    },
    "5111": {
      "op": "JUMPDEST"
    },
    "5112": {
      "op": "DUP3"
    },
    "5113": {
      "op": "CALLDATALOAD"
    },
    "5114": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5117": {
      "op": "DUP2"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x15B0"
    },
    "5121": {
      "jump": "i",
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "SWAP5"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5126": {
      "op": "SWAP4"
    },
    "5127": {
      "op": "SWAP1"
    },
    "5128": {
      "op": "SWAP4"
    },
    "5129": {
      "op": "ADD"
    },
    "5130": {
      "op": "CALLDATALOAD"
    },
    "5131": {
      "op": "SWAP4"
    },
    "5132": {
      "op": "POP"
    },
    "5133": {
      "op": "POP"
    },
    "5134": {
      "op": "POP"
    },
    "5135": {
      "jump": "o",
      "op": "JUMP"
    },
    "5136": {
      "op": "JUMPDEST"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5141": {
      "op": "DUP3"
    },
    "5142": {
      "op": "DUP5"
    },
    "5143": {
      "op": "SUB"
    },
    "5144": {
      "op": "SLT"
    },
    "5145": {
      "op": "ISZERO"
    },
    "5146": {
      "op": "PUSH2",
      "value": "0x1421"
    },
    "5149": {
      "op": "JUMPI"
    },
    "5150": {
      "op": "DUP1"
    },
    "5151": {
      "op": "DUP2"
    },
    "5152": {
      "op": "REVERT"
    },
    "5153": {
      "op": "JUMPDEST"
    },
    "5154": {
      "op": "DUP2"
    },
    "5155": {
      "op": "CALLDATALOAD"
    },
    "5156": {
      "op": "PUSH2",
      "value": "0x574"
    },
    "5159": {
      "op": "DUP2"
    },
    "5160": {
      "op": "PUSH2",
      "value": "0x15C8"
    },
    "5163": {
      "jump": "i",
      "op": "JUMP"
    },
    "5164": {
      "op": "JUMPDEST"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5169": {
      "op": "DUP3"
    },
    "5170": {
      "op": "DUP5"
    },
    "5171": {
      "op": "SUB"
    },
    "5172": {
      "op": "SLT"
    },
    "5173": {
      "op": "ISZERO"
    },
    "5174": {
      "op": "PUSH2",
      "value": "0x143D"
    },
    "5177": {
      "op": "JUMPI"
    },
    "5178": {
      "op": "DUP1"
    },
    "5179": {
      "op": "DUP2"
    },
    "5180": {
      "op": "REVERT"
    },
    "5181": {
      "op": "JUMPDEST"
    },
    "5182": {
      "op": "DUP2"
    },
    "5183": {
      "op": "MLOAD"
    },
    "5184": {
      "op": "PUSH2",
      "value": "0x574"
    },
    "5187": {
      "op": "DUP2"
    },
    "5188": {
      "op": "PUSH2",
      "value": "0x15C8"
    },
    "5191": {
      "jump": "i",
      "op": "JUMP"
    },
    "5192": {
      "op": "JUMPDEST"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5197": {
      "op": "DUP3"
    },
    "5198": {
      "op": "DUP5"
    },
    "5199": {
      "op": "SUB"
    },
    "5200": {
      "op": "SLT"
    },
    "5201": {
      "op": "ISZERO"
    },
    "5202": {
      "op": "PUSH2",
      "value": "0x1459"
    },
    "5205": {
      "op": "JUMPI"
    },
    "5206": {
      "op": "DUP1"
    },
    "5207": {
      "op": "DUP2"
    },
    "5208": {
      "op": "REVERT"
    },
    "5209": {
      "op": "JUMPDEST"
    },
    "5210": {
      "op": "POP"
    },
    "5211": {
      "op": "CALLDATALOAD"
    },
    "5212": {
      "op": "SWAP2"
    },
    "5213": {
      "op": "SWAP1"
    },
    "5214": {
      "op": "POP"
    },
    "5215": {
      "jump": "o",
      "op": "JUMP"
    },
    "5216": {
      "op": "JUMPDEST"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5219": {
      "op": "DUP3"
    },
    "5220": {
      "op": "MLOAD"
    },
    "5221": {
      "op": "PUSH2",
      "value": "0x1472"
    },
    "5224": {
      "op": "DUP2"
    },
    "5225": {
      "op": "DUP5"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5228": {
      "op": "DUP8"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "PUSH2",
      "value": "0x151D"
    },
    "5233": {
      "jump": "i",
      "op": "JUMP"
    },
    "5234": {
      "op": "JUMPDEST"
    },
    "5235": {
      "op": "SWAP2"
    },
    "5236": {
      "op": "SWAP1"
    },
    "5237": {
      "op": "SWAP2"
    },
    "5238": {
      "op": "ADD"
    },
    "5239": {
      "op": "SWAP3"
    },
    "5240": {
      "op": "SWAP2"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "op": "POP"
    },
    "5243": {
      "jump": "o",
      "op": "JUMP"
    },
    "5244": {
      "op": "JUMPDEST"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5249": {
      "op": "DUP3"
    },
    "5250": {
      "op": "MSTORE"
    },
    "5251": {
      "op": "DUP3"
    },
    "5252": {
      "op": "MLOAD"
    },
    "5253": {
      "op": "DUP1"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5256": {
      "op": "DUP5"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "MSTORE"
    },
    "5259": {
      "op": "PUSH2",
      "value": "0x149B"
    },
    "5262": {
      "op": "DUP2"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5265": {
      "op": "DUP6"
    },
    "5266": {
      "op": "ADD"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5269": {
      "op": "DUP8"
    },
    "5270": {
      "op": "ADD"
    },
    "5271": {
      "op": "PUSH2",
      "value": "0x151D"
    },
    "5274": {
      "jump": "i",
      "op": "JUMP"
    },
    "5275": {
      "op": "JUMPDEST"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5278": {
      "op": "ADD"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5281": {
      "op": "NOT"
    },
    "5282": {
      "op": "AND"
    },
    "5283": {
      "op": "SWAP2"
    },
    "5284": {
      "op": "SWAP1"
    },
    "5285": {
      "op": "SWAP2"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "op": "SWAP3"
    },
    "5291": {
      "op": "SWAP2"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "jump": "o",
      "op": "JUMP"
    },
    "5295": {
      "op": "JUMPDEST"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "NOT"
    },
    "5300": {
      "op": "DUP3"
    },
    "5301": {
      "op": "GT"
    },
    "5302": {
      "op": "ISZERO"
    },
    "5303": {
      "op": "PUSH2",
      "value": "0x14C2"
    },
    "5306": {
      "op": "JUMPI"
    },
    "5307": {
      "op": "PUSH2",
      "value": "0x14C2"
    },
    "5310": {
      "op": "PUSH2",
      "value": "0x1584"
    },
    "5313": {
      "jump": "i",
      "op": "JUMP"
    },
    "5314": {
      "op": "JUMPDEST"
    },
    "5315": {
      "op": "POP"
    },
    "5316": {
      "op": "ADD"
    },
    "5317": {
      "op": "SWAP1"
    },
    "5318": {
      "jump": "o",
      "op": "JUMP"
    },
    "5319": {
      "op": "JUMPDEST"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5322": {
      "op": "DUP3"
    },
    "5323": {
      "op": "PUSH2",
      "value": "0x14E2"
    },
    "5326": {
      "op": "JUMPI"
    },
    "5327": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5334": {
      "op": "SHL"
    },
    "5335": {
      "op": "DUP2"
    },
    "5336": {
      "op": "MSTORE"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5341": {
      "op": "MSTORE"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5344": {
      "op": "DUP2"
    },
    "5345": {
      "op": "REVERT"
    },
    "5346": {
      "op": "JUMPDEST"
    },
    "5347": {
      "op": "POP"
    },
    "5348": {
      "op": "DIV"
    },
    "5349": {
      "op": "SWAP1"
    },
    "5350": {
      "jump": "o",
      "op": "JUMP"
    },
    "5351": {
      "op": "JUMPDEST"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5354": {
      "op": "DUP2"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5357": {
      "op": "NOT"
    },
    "5358": {
      "op": "DIV"
    },
    "5359": {
      "op": "DUP4"
    },
    "5360": {
      "op": "GT"
    },
    "5361": {
      "op": "DUP3"
    },
    "5362": {
      "op": "ISZERO"
    },
    "5363": {
      "op": "ISZERO"
    },
    "5364": {
      "op": "AND"
    },
    "5365": {
      "op": "ISZERO"
    },
    "5366": {
      "op": "PUSH2",
      "value": "0x1501"
    },
    "5369": {
      "op": "JUMPI"
    },
    "5370": {
      "op": "PUSH2",
      "value": "0x1501"
    },
    "5373": {
      "op": "PUSH2",
      "value": "0x1584"
    },
    "5376": {
      "jump": "i",
      "op": "JUMP"
    },
    "5377": {
      "op": "JUMPDEST"
    },
    "5378": {
      "op": "POP"
    },
    "5379": {
      "op": "MUL"
    },
    "5380": {
      "op": "SWAP1"
    },
    "5381": {
      "jump": "o",
      "op": "JUMP"
    },
    "5382": {
      "op": "JUMPDEST"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5385": {
      "op": "DUP3"
    },
    "5386": {
      "op": "DUP3"
    },
    "5387": {
      "op": "LT"
    },
    "5388": {
      "op": "ISZERO"
    },
    "5389": {
      "op": "PUSH2",
      "value": "0x1518"
    },
    "5392": {
      "op": "JUMPI"
    },
    "5393": {
      "op": "PUSH2",
      "value": "0x1518"
    },
    "5396": {
      "op": "PUSH2",
      "value": "0x1584"
    },
    "5399": {
      "jump": "i",
      "op": "JUMP"
    },
    "5400": {
      "op": "JUMPDEST"
    },
    "5401": {
      "op": "POP"
    },
    "5402": {
      "op": "SUB"
    },
    "5403": {
      "op": "SWAP1"
    },
    "5404": {
      "jump": "o",
      "op": "JUMP"
    },
    "5405": {
      "op": "JUMPDEST"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5408": {
      "op": "JUMPDEST"
    },
    "5409": {
      "op": "DUP4"
    },
    "5410": {
      "op": "DUP2"
    },
    "5411": {
      "op": "LT"
    },
    "5412": {
      "op": "ISZERO"
    },
    "5413": {
      "op": "PUSH2",
      "value": "0x1538"
    },
    "5416": {
      "op": "JUMPI"
    },
    "5417": {
      "op": "DUP2"
    },
    "5418": {
      "op": "DUP2"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "MLOAD"
    },
    "5421": {
      "op": "DUP4"
    },
    "5422": {
      "op": "DUP3"
    },
    "5423": {
      "op": "ADD"
    },
    "5424": {
      "op": "MSTORE"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5427": {
      "op": "ADD"
    },
    "5428": {
      "op": "PUSH2",
      "value": "0x1520"
    },
    "5431": {
      "op": "JUMP"
    },
    "5432": {
      "op": "JUMPDEST"
    },
    "5433": {
      "op": "DUP4"
    },
    "5434": {
      "op": "DUP2"
    },
    "5435": {
      "op": "GT"
    },
    "5436": {
      "op": "ISZERO"
    },
    "5437": {
      "op": "PUSH2",
      "value": "0xE1F"
    },
    "5440": {
      "op": "JUMPI"
    },
    "5441": {
      "op": "POP"
    },
    "5442": {
      "op": "POP"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5445": {
      "op": "SWAP2"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "jump": "o",
      "op": "JUMP"
    },
    "5449": {
      "op": "JUMPDEST"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5452": {
      "op": "DUP2"
    },
    "5453": {
      "op": "DUP2"
    },
    "5454": {
      "op": "SHR"
    },
    "5455": {
      "op": "SWAP1"
    },
    "5456": {
      "op": "DUP3"
    },
    "5457": {
      "op": "AND"
    },
    "5458": {
      "op": "DUP1"
    },
    "5459": {
      "op": "PUSH2",
      "value": "0x155D"
    },
    "5462": {
      "op": "JUMPI"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5465": {
      "op": "DUP3"
    },
    "5466": {
      "op": "AND"
    },
    "5467": {
      "op": "SWAP2"
    },
    "5468": {
      "op": "POP"
    },
    "5469": {
      "op": "JUMPDEST"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5472": {
      "op": "DUP3"
    },
    "5473": {
      "op": "LT"
    },
    "5474": {
      "op": "DUP2"
    },
    "5475": {
      "op": "EQ"
    },
    "5476": {
      "op": "ISZERO"
    },
    "5477": {
      "op": "PUSH2",
      "value": "0x157E"
    },
    "5480": {
      "op": "JUMPI"
    },
    "5481": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5488": {
      "op": "SHL"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5491": {
      "op": "MSTORE"
    },
    "5492": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5496": {
      "op": "MSTORE"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5501": {
      "op": "REVERT"
    },
    "5502": {
      "op": "JUMPDEST"
    },
    "5503": {
      "op": "POP"
    },
    "5504": {
      "op": "SWAP2"
    },
    "5505": {
      "op": "SWAP1"
    },
    "5506": {
      "op": "POP"
    },
    "5507": {
      "jump": "o",
      "op": "JUMP"
    },
    "5508": {
      "op": "JUMPDEST"
    },
    "5509": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5516": {
      "op": "SHL"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5524": {
      "op": "MSTORE"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5529": {
      "op": "REVERT"
    },
    "5530": {
      "op": "JUMPDEST"
    },
    "5531": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5538": {
      "op": "SHL"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "MSTORE"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5546": {
      "op": "MSTORE"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5551": {
      "op": "REVERT"
    },
    "5552": {
      "op": "JUMPDEST"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "op": "SUB"
    },
    "5561": {
      "op": "DUP2"
    },
    "5562": {
      "op": "AND"
    },
    "5563": {
      "op": "DUP2"
    },
    "5564": {
      "op": "EQ"
    },
    "5565": {
      "op": "PUSH2",
      "value": "0x15C5"
    },
    "5568": {
      "op": "JUMPI"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5571": {
      "op": "DUP1"
    },
    "5572": {
      "op": "REVERT"
    },
    "5573": {
      "op": "JUMPDEST"
    },
    "5574": {
      "op": "POP"
    },
    "5575": {
      "jump": "o",
      "op": "JUMP"
    },
    "5576": {
      "op": "JUMPDEST"
    },
    "5577": {
      "op": "DUP1"
    },
    "5578": {
      "op": "ISZERO"
    },
    "5579": {
      "op": "ISZERO"
    },
    "5580": {
      "op": "DUP2"
    },
    "5581": {
      "op": "EQ"
    },
    "5582": {
      "op": "PUSH2",
      "value": "0x15C5"
    },
    "5585": {
      "op": "JUMPI"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5588": {
      "op": "DUP1"
    },
    "5589": {
      "op": "REVERT"
    }
  },
  "sha1": "fc6924dd825d35226b328343fe0205e78565aa4d",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {\n    SafeERC20\n} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {\n    ERC721Holder\n} from \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport {Applications} from \"./Applications.sol\";\nimport {\n    EnumerableSet\n} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n// doubles as the governance contract\ncontract Penny is ERC20, ERC721Holder {\n    using SafeERC20 for IERC20;\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    event ApplicationReceived(uint256 applicationId, uint256 timestamp);\n    event BallotCasted(address indexed voter, bool vote);\n\n    /// @param awardToken Address of an ERC20-compatible token to award\n    /// @param recipient Address to send `awardToken` to if the application is approved\n    /// @param awardAmount Amount of `awardToken` to send `recipient` if the application is approved\n    /// @param ipfsMetadata IPFS CID where metadata exists for this application\n    struct Application {\n        address awardToken;\n        address recipient;\n        uint256 awardAmount;\n        string ipfsMetadata;\n    }\n\n    struct Vote {\n        uint256 yayAmount;\n        uint256 nayAmount;\n        mapping(address => bool) ballots;\n    }\n\n    IERC20 private DAI;\n    mapping(address => uint256) public _unlockTime;\n    Applications public _applicationContract;\n    EnumerableSet.UintSet private _applicationsQueue;\n    mapping(uint256 => Vote) private votes;\n    uint256 public voteStartTimestamp;\n    address public owner;\n\n    constructor(IERC20 _token) ERC20(\"Change Token\", \"CHANGE\") {\n        DAI = _token;\n        owner = _msgSender();\n    }\n\n    /// @notice Deposit DAI in exchange for PNY\n    /// @dev 100 PNY = 1 DAI, DAI is locked for a period of 1 year\n    /// @param _amount The amount of DAI to deposit\n    /// @return true on success\n    function deposit(uint256 _amount) external returns (bool) {\n        DAI.safeTransferFrom(_msgSender(), address(this), _amount);\n        _mint(_msgSender(), _amount * 100);\n        _unlockTime[_msgSender()] = block.timestamp + 15 * 60;\n        return true;\n    }\n\n    /// @notice Withdraw deposited DAI after deposit lock has been removed\n    /// @dev Must ensure enough DAI is held by this contract at the time of the withdrawl\n    /// @return true on success\n    function withdraw() external returns (bool) {\n        require(block.timestamp >= _unlockTime[_msgSender()]);\n        DAI.transfer(_msgSender(), ERC20.balanceOf(_msgSender())/ 100);\n        _burn(_msgSender(), ERC20.balanceOf(_msgSender()));\n        return true;\n    }\n\n    /// @notice Called when recieving an application\n    function onERC721Received(\n        address _operator,\n        address _from,\n        uint256 _tokenId,\n        bytes memory _data\n    ) public override(ERC721Holder) returns (bytes4) {\n        require(_msgSender() == address(_applicationContract)); // dev: unknown ERC721 contract\n\n        if (_applicationsQueue.length() == 0) {\n            voteStartTimestamp = block.timestamp;\n            _applicationsQueue.add(_tokenId);\n        } else {\n            _applicationsQueue.add(_tokenId);\n        }\n\n        emit ApplicationReceived(_tokenId, block.timestamp);\n        return this.onERC721Received.selector;\n    }\n\n    /// @notice Getter for retrieving the currently up for vote application\n    function getUpForVote() public view returns (uint256) {\n        require(_applicationsQueue.length() > 0); // dev: no application up for vote\n        return _applicationsQueue.at(0);\n    }\n\n    function vote(bool yayOrNay) external returns (bool) {\n        require(_applicationsQueue.length() > 0); // dev: no current application up for vote\n        uint256 currentApplication = getUpForVote();\n        require(ERC20.balanceOf(_msgSender()) >= 0); // dev: not allowed to vote\n        require(!votes[currentApplication].ballots[_msgSender()]); // dev: already voted\n        require(block.timestamp < voteStartTimestamp + 30 days); // dev: vote is over\n\n        votes[currentApplication].ballots[_msgSender()] = true;\n        if (yayOrNay) {\n            votes[currentApplication].yayAmount += ERC20.balanceOf(\n                _msgSender()\n            );\n        } else {\n            votes[currentApplication].nayAmount += ERC20.balanceOf(\n                _msgSender()\n            );\n        }\n        emit BallotCasted(_msgSender(), yayOrNay);\n        return true;\n    }\n\n    function setApplications(Applications applicationContract) external {\n        require(_msgSender() == owner);\n        _applicationContract = applicationContract;\n    }\n\n    function getVotes(uint256 _application_id)\n        external\n        view\n        returns (uint256 yayAmount, uint256 nayAmount)\n    {\n        yayAmount = votes[_application_id].yayAmount;\n        nayAmount = votes[_application_id].nayAmount;\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20) {\n        if (from != address(0) && to != address(0)) revert(); // dev: transfers are disabled\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourceMap": "567:4743:20:-:0;;;1720:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1898:114:1;;;;;;;;;;;-1:-1:-1;;;1898:114:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1898:114:1;;;;1965:13;;1898:114;;;1965:13;;:5;;:13;:::i;:::-;-1:-1:-1;1988:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1789:3:20::1;:12:::0;;-1:-1:-1;;;;;;1789:12:20::1;-1:-1:-1::0;;;;;1789:12:20;::::1;;::::0;;-1:-1:-1;1819:12:20::1;665:10:13::0;586:96;;1819:12:20::1;1811:5;:20:::0;;-1:-1:-1;;;;;;1811:20:20::1;-1:-1:-1::0;;;;;1811:20:20;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;567:4743:20;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;567:4743:20;;;-1:-1:-1;567:4743:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:325:21;;152:2;140:9;131:7;127:23;123:32;120:2;;;173:6;165;158:22;120:2;204:16;;-1:-1:-1;;;;;249:31:21;;239:42;;229:2;;300:6;292;285:22;229:2;328:5;110:229;-1:-1:-1;;;110:229:21:o;344:380::-;423:1;419:12;;;;466;;;487:2;;541:4;533:6;529:17;519:27;;487:2;594;586:6;583:14;563:18;560:38;557:2;;;640:10;635:3;631:20;628:1;621:31;675:4;672:1;665:15;703:4;700:1;693:15;557:2;;399:325;;;:::o;:::-;567:4743:20;;;;;;",
  "sourcePath": "contracts/Penny.sol",
  "type": "contract"
}